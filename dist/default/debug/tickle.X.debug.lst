

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Mar 19 20:56:22 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12LF1572
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.20
    79                           ; Generated 12/02/2020 GMT
    80                           ; 
    81                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC12LF1572 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  008C                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0115                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0118                     	;# 
   160  0119                     	;# 
   161  011D                     	;# 
   162  011D                     	;# 
   163  018C                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  020C                     	;# 
   181  028C                     	;# 
   182  030C                     	;# 
   183  038C                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  0691                     	;# 
   188  0692                     	;# 
   189  0693                     	;# 
   190  0694                     	;# 
   191  0695                     	;# 
   192  0D8E                     	;# 
   193  0D8F                     	;# 
   194  0D90                     	;# 
   195  0D91                     	;# 
   196  0D91                     	;# 
   197  0D92                     	;# 
   198  0D93                     	;# 
   199  0D93                     	;# 
   200  0D94                     	;# 
   201  0D95                     	;# 
   202  0D95                     	;# 
   203  0D96                     	;# 
   204  0D97                     	;# 
   205  0D97                     	;# 
   206  0D98                     	;# 
   207  0D99                     	;# 
   208  0D99                     	;# 
   209  0D9A                     	;# 
   210  0D9B                     	;# 
   211  0D9C                     	;# 
   212  0D9C                     	;# 
   213  0D9D                     	;# 
   214  0D9D                     	;# 
   215  0D9E                     	;# 
   216  0D9F                     	;# 
   217  0DA0                     	;# 
   218  0DA1                     	;# 
   219  0DA1                     	;# 
   220  0DA2                     	;# 
   221  0DA3                     	;# 
   222  0DA3                     	;# 
   223  0DA4                     	;# 
   224  0DA5                     	;# 
   225  0DA5                     	;# 
   226  0DA6                     	;# 
   227  0DA7                     	;# 
   228  0DA7                     	;# 
   229  0DA8                     	;# 
   230  0DA9                     	;# 
   231  0DA9                     	;# 
   232  0DAA                     	;# 
   233  0DAB                     	;# 
   234  0DAC                     	;# 
   235  0DAC                     	;# 
   236  0DAD                     	;# 
   237  0DAD                     	;# 
   238  0DAE                     	;# 
   239  0DAF                     	;# 
   240  0DB0                     	;# 
   241  0DB1                     	;# 
   242  0DB1                     	;# 
   243  0DB2                     	;# 
   244  0DB3                     	;# 
   245  0DB3                     	;# 
   246  0DB4                     	;# 
   247  0DB5                     	;# 
   248  0DB5                     	;# 
   249  0DB6                     	;# 
   250  0DB7                     	;# 
   251  0DB7                     	;# 
   252  0DB8                     	;# 
   253  0DB9                     	;# 
   254  0DB9                     	;# 
   255  0DBA                     	;# 
   256  0DBB                     	;# 
   257  0DBC                     	;# 
   258  0DBC                     	;# 
   259  0DBD                     	;# 
   260  0DBD                     	;# 
   261  0DBE                     	;# 
   262  0DBF                     	;# 
   263  0DC0                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEA                     	;# 
   273  0FEB                     	;# 
   274  0FED                     	;# 
   275  0FEE                     	;# 
   276  0FEE                     	;# 
   277  0FEF                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0008                     	;# 
   287  0009                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  008C                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  009F                     	;# 
   319  010C                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011D                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019C                     	;# 
   343  019D                     	;# 
   344  019E                     	;# 
   345  019F                     	;# 
   346  020C                     	;# 
   347  028C                     	;# 
   348  030C                     	;# 
   349  038C                     	;# 
   350  0391                     	;# 
   351  0392                     	;# 
   352  0393                     	;# 
   353  0691                     	;# 
   354  0692                     	;# 
   355  0693                     	;# 
   356  0694                     	;# 
   357  0695                     	;# 
   358  0D8E                     	;# 
   359  0D8F                     	;# 
   360  0D90                     	;# 
   361  0D91                     	;# 
   362  0D91                     	;# 
   363  0D92                     	;# 
   364  0D93                     	;# 
   365  0D93                     	;# 
   366  0D94                     	;# 
   367  0D95                     	;# 
   368  0D95                     	;# 
   369  0D96                     	;# 
   370  0D97                     	;# 
   371  0D97                     	;# 
   372  0D98                     	;# 
   373  0D99                     	;# 
   374  0D99                     	;# 
   375  0D9A                     	;# 
   376  0D9B                     	;# 
   377  0D9C                     	;# 
   378  0D9C                     	;# 
   379  0D9D                     	;# 
   380  0D9D                     	;# 
   381  0D9E                     	;# 
   382  0D9F                     	;# 
   383  0DA0                     	;# 
   384  0DA1                     	;# 
   385  0DA1                     	;# 
   386  0DA2                     	;# 
   387  0DA3                     	;# 
   388  0DA3                     	;# 
   389  0DA4                     	;# 
   390  0DA5                     	;# 
   391  0DA5                     	;# 
   392  0DA6                     	;# 
   393  0DA7                     	;# 
   394  0DA7                     	;# 
   395  0DA8                     	;# 
   396  0DA9                     	;# 
   397  0DA9                     	;# 
   398  0DAA                     	;# 
   399  0DAB                     	;# 
   400  0DAC                     	;# 
   401  0DAC                     	;# 
   402  0DAD                     	;# 
   403  0DAD                     	;# 
   404  0DAE                     	;# 
   405  0DAF                     	;# 
   406  0DB0                     	;# 
   407  0DB1                     	;# 
   408  0DB1                     	;# 
   409  0DB2                     	;# 
   410  0DB3                     	;# 
   411  0DB3                     	;# 
   412  0DB4                     	;# 
   413  0DB5                     	;# 
   414  0DB5                     	;# 
   415  0DB6                     	;# 
   416  0DB7                     	;# 
   417  0DB7                     	;# 
   418  0DB8                     	;# 
   419  0DB9                     	;# 
   420  0DB9                     	;# 
   421  0DBA                     	;# 
   422  0DBB                     	;# 
   423  0DBC                     	;# 
   424  0DBC                     	;# 
   425  0DBD                     	;# 
   426  0DBD                     	;# 
   427  0DBE                     	;# 
   428  0DBF                     	;# 
   429  0DC0                     	;# 
   430  0FE4                     	;# 
   431  0FE5                     	;# 
   432  0FE6                     	;# 
   433  0FE7                     	;# 
   434  0FE8                     	;# 
   435  0FE8                     	;# 
   436  0FE9                     	;# 
   437  0FEA                     	;# 
   438  0FEA                     	;# 
   439  0FEB                     	;# 
   440  0FED                     	;# 
   441  0FEE                     	;# 
   442  0FEE                     	;# 
   443  0FEF                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  0011                     	;# 
   458  0012                     	;# 
   459  0013                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  001A                     	;# 
   467  001B                     	;# 
   468  001C                     	;# 
   469  008C                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0095                     	;# 
   474  0096                     	;# 
   475  0097                     	;# 
   476  0098                     	;# 
   477  0099                     	;# 
   478  009A                     	;# 
   479  009B                     	;# 
   480  009B                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  009F                     	;# 
   485  010C                     	;# 
   486  0111                     	;# 
   487  0112                     	;# 
   488  0115                     	;# 
   489  0116                     	;# 
   490  0117                     	;# 
   491  0118                     	;# 
   492  0119                     	;# 
   493  011D                     	;# 
   494  011D                     	;# 
   495  018C                     	;# 
   496  0191                     	;# 
   497  0191                     	;# 
   498  0192                     	;# 
   499  0193                     	;# 
   500  0193                     	;# 
   501  0194                     	;# 
   502  0195                     	;# 
   503  0196                     	;# 
   504  0199                     	;# 
   505  019A                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019D                     	;# 
   510  019E                     	;# 
   511  019F                     	;# 
   512  020C                     	;# 
   513  028C                     	;# 
   514  030C                     	;# 
   515  038C                     	;# 
   516  0391                     	;# 
   517  0392                     	;# 
   518  0393                     	;# 
   519  0691                     	;# 
   520  0692                     	;# 
   521  0693                     	;# 
   522  0694                     	;# 
   523  0695                     	;# 
   524  0D8E                     	;# 
   525  0D8F                     	;# 
   526  0D90                     	;# 
   527  0D91                     	;# 
   528  0D91                     	;# 
   529  0D92                     	;# 
   530  0D93                     	;# 
   531  0D93                     	;# 
   532  0D94                     	;# 
   533  0D95                     	;# 
   534  0D95                     	;# 
   535  0D96                     	;# 
   536  0D97                     	;# 
   537  0D97                     	;# 
   538  0D98                     	;# 
   539  0D99                     	;# 
   540  0D99                     	;# 
   541  0D9A                     	;# 
   542  0D9B                     	;# 
   543  0D9C                     	;# 
   544  0D9C                     	;# 
   545  0D9D                     	;# 
   546  0D9D                     	;# 
   547  0D9E                     	;# 
   548  0D9F                     	;# 
   549  0DA0                     	;# 
   550  0DA1                     	;# 
   551  0DA1                     	;# 
   552  0DA2                     	;# 
   553  0DA3                     	;# 
   554  0DA3                     	;# 
   555  0DA4                     	;# 
   556  0DA5                     	;# 
   557  0DA5                     	;# 
   558  0DA6                     	;# 
   559  0DA7                     	;# 
   560  0DA7                     	;# 
   561  0DA8                     	;# 
   562  0DA9                     	;# 
   563  0DA9                     	;# 
   564  0DAA                     	;# 
   565  0DAB                     	;# 
   566  0DAC                     	;# 
   567  0DAC                     	;# 
   568  0DAD                     	;# 
   569  0DAD                     	;# 
   570  0DAE                     	;# 
   571  0DAF                     	;# 
   572  0DB0                     	;# 
   573  0DB1                     	;# 
   574  0DB1                     	;# 
   575  0DB2                     	;# 
   576  0DB3                     	;# 
   577  0DB3                     	;# 
   578  0DB4                     	;# 
   579  0DB5                     	;# 
   580  0DB5                     	;# 
   581  0DB6                     	;# 
   582  0DB7                     	;# 
   583  0DB7                     	;# 
   584  0DB8                     	;# 
   585  0DB9                     	;# 
   586  0DB9                     	;# 
   587  0DBA                     	;# 
   588  0DBB                     	;# 
   589  0DBC                     	;# 
   590  0DBC                     	;# 
   591  0DBD                     	;# 
   592  0DBD                     	;# 
   593  0DBE                     	;# 
   594  0DBF                     	;# 
   595  0DC0                     	;# 
   596  0FE4                     	;# 
   597  0FE5                     	;# 
   598  0FE6                     	;# 
   599  0FE7                     	;# 
   600  0FE8                     	;# 
   601  0FE8                     	;# 
   602  0FE9                     	;# 
   603  0FEA                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEE                     	;# 
   609  0FEF                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0008                     	;# 
   619  0009                     	;# 
   620  000A                     	;# 
   621  000B                     	;# 
   622  000C                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0015                     	;# 
   627  0016                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  001B                     	;# 
   634  001C                     	;# 
   635  008C                     	;# 
   636  0091                     	;# 
   637  0092                     	;# 
   638  0093                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0097                     	;# 
   642  0098                     	;# 
   643  0099                     	;# 
   644  009A                     	;# 
   645  009B                     	;# 
   646  009B                     	;# 
   647  009C                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  009F                     	;# 
   651  010C                     	;# 
   652  0111                     	;# 
   653  0112                     	;# 
   654  0115                     	;# 
   655  0116                     	;# 
   656  0117                     	;# 
   657  0118                     	;# 
   658  0119                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  018C                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0194                     	;# 
   668  0195                     	;# 
   669  0196                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019C                     	;# 
   675  019D                     	;# 
   676  019E                     	;# 
   677  019F                     	;# 
   678  020C                     	;# 
   679  028C                     	;# 
   680  030C                     	;# 
   681  038C                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0D8E                     	;# 
   691  0D8F                     	;# 
   692  0D90                     	;# 
   693  0D91                     	;# 
   694  0D91                     	;# 
   695  0D92                     	;# 
   696  0D93                     	;# 
   697  0D93                     	;# 
   698  0D94                     	;# 
   699  0D95                     	;# 
   700  0D95                     	;# 
   701  0D96                     	;# 
   702  0D97                     	;# 
   703  0D97                     	;# 
   704  0D98                     	;# 
   705  0D99                     	;# 
   706  0D99                     	;# 
   707  0D9A                     	;# 
   708  0D9B                     	;# 
   709  0D9C                     	;# 
   710  0D9C                     	;# 
   711  0D9D                     	;# 
   712  0D9D                     	;# 
   713  0D9E                     	;# 
   714  0D9F                     	;# 
   715  0DA0                     	;# 
   716  0DA1                     	;# 
   717  0DA1                     	;# 
   718  0DA2                     	;# 
   719  0DA3                     	;# 
   720  0DA3                     	;# 
   721  0DA4                     	;# 
   722  0DA5                     	;# 
   723  0DA5                     	;# 
   724  0DA6                     	;# 
   725  0DA7                     	;# 
   726  0DA7                     	;# 
   727  0DA8                     	;# 
   728  0DA9                     	;# 
   729  0DA9                     	;# 
   730  0DAA                     	;# 
   731  0DAB                     	;# 
   732  0DAC                     	;# 
   733  0DAC                     	;# 
   734  0DAD                     	;# 
   735  0DAD                     	;# 
   736  0DAE                     	;# 
   737  0DAF                     	;# 
   738  0DB0                     	;# 
   739  0DB1                     	;# 
   740  0DB1                     	;# 
   741  0DB2                     	;# 
   742  0DB3                     	;# 
   743  0DB3                     	;# 
   744  0DB4                     	;# 
   745  0DB5                     	;# 
   746  0DB5                     	;# 
   747  0DB6                     	;# 
   748  0DB7                     	;# 
   749  0DB7                     	;# 
   750  0DB8                     	;# 
   751  0DB9                     	;# 
   752  0DB9                     	;# 
   753  0DBA                     	;# 
   754  0DBB                     	;# 
   755  0DBC                     	;# 
   756  0DBC                     	;# 
   757  0DBD                     	;# 
   758  0DBD                     	;# 
   759  0DBE                     	;# 
   760  0DBF                     	;# 
   761  0DC0                     	;# 
   762  0FE4                     	;# 
   763  0FE5                     	;# 
   764  0FE6                     	;# 
   765  0FE7                     	;# 
   766  0FE8                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEA                     	;# 
   771  0FEB                     	;# 
   772  0FED                     	;# 
   773  0FEE                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  0011                     	;# 
   790  0012                     	;# 
   791  0013                     	;# 
   792  0015                     	;# 
   793  0016                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001C                     	;# 
   801  008C                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  009F                     	;# 
   817  010C                     	;# 
   818  0111                     	;# 
   819  0112                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0117                     	;# 
   823  0118                     	;# 
   824  0119                     	;# 
   825  011D                     	;# 
   826  011D                     	;# 
   827  018C                     	;# 
   828  0191                     	;# 
   829  0191                     	;# 
   830  0192                     	;# 
   831  0193                     	;# 
   832  0193                     	;# 
   833  0194                     	;# 
   834  0195                     	;# 
   835  0196                     	;# 
   836  0199                     	;# 
   837  019A                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019D                     	;# 
   842  019E                     	;# 
   843  019F                     	;# 
   844  020C                     	;# 
   845  028C                     	;# 
   846  030C                     	;# 
   847  038C                     	;# 
   848  0391                     	;# 
   849  0392                     	;# 
   850  0393                     	;# 
   851  0691                     	;# 
   852  0692                     	;# 
   853  0693                     	;# 
   854  0694                     	;# 
   855  0695                     	;# 
   856  0D8E                     	;# 
   857  0D8F                     	;# 
   858  0D90                     	;# 
   859  0D91                     	;# 
   860  0D91                     	;# 
   861  0D92                     	;# 
   862  0D93                     	;# 
   863  0D93                     	;# 
   864  0D94                     	;# 
   865  0D95                     	;# 
   866  0D95                     	;# 
   867  0D96                     	;# 
   868  0D97                     	;# 
   869  0D97                     	;# 
   870  0D98                     	;# 
   871  0D99                     	;# 
   872  0D99                     	;# 
   873  0D9A                     	;# 
   874  0D9B                     	;# 
   875  0D9C                     	;# 
   876  0D9C                     	;# 
   877  0D9D                     	;# 
   878  0D9D                     	;# 
   879  0D9E                     	;# 
   880  0D9F                     	;# 
   881  0DA0                     	;# 
   882  0DA1                     	;# 
   883  0DA1                     	;# 
   884  0DA2                     	;# 
   885  0DA3                     	;# 
   886  0DA3                     	;# 
   887  0DA4                     	;# 
   888  0DA5                     	;# 
   889  0DA5                     	;# 
   890  0DA6                     	;# 
   891  0DA7                     	;# 
   892  0DA7                     	;# 
   893  0DA8                     	;# 
   894  0DA9                     	;# 
   895  0DA9                     	;# 
   896  0DAA                     	;# 
   897  0DAB                     	;# 
   898  0DAC                     	;# 
   899  0DAC                     	;# 
   900  0DAD                     	;# 
   901  0DAD                     	;# 
   902  0DAE                     	;# 
   903  0DAF                     	;# 
   904  0DB0                     	;# 
   905  0DB1                     	;# 
   906  0DB1                     	;# 
   907  0DB2                     	;# 
   908  0DB3                     	;# 
   909  0DB3                     	;# 
   910  0DB4                     	;# 
   911  0DB5                     	;# 
   912  0DB5                     	;# 
   913  0DB6                     	;# 
   914  0DB7                     	;# 
   915  0DB7                     	;# 
   916  0DB8                     	;# 
   917  0DB9                     	;# 
   918  0DB9                     	;# 
   919  0DBA                     	;# 
   920  0DBB                     	;# 
   921  0DBC                     	;# 
   922  0DBC                     	;# 
   923  0DBD                     	;# 
   924  0DBD                     	;# 
   925  0DBE                     	;# 
   926  0DBF                     	;# 
   927  0DC0                     	;# 
   928  0FE4                     	;# 
   929  0FE5                     	;# 
   930  0FE6                     	;# 
   931  0FE7                     	;# 
   932  0FE8                     	;# 
   933  0FE8                     	;# 
   934  0FE9                     	;# 
   935  0FEA                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEE                     	;# 
   941  0FEF                     	;# 
   942  0000                     	;# 
   943  0001                     	;# 
   944  0002                     	;# 
   945  0003                     	;# 
   946  0004                     	;# 
   947  0005                     	;# 
   948  0006                     	;# 
   949  0007                     	;# 
   950  0008                     	;# 
   951  0009                     	;# 
   952  000A                     	;# 
   953  000B                     	;# 
   954  000C                     	;# 
   955  0011                     	;# 
   956  0012                     	;# 
   957  0013                     	;# 
   958  0015                     	;# 
   959  0016                     	;# 
   960  0016                     	;# 
   961  0017                     	;# 
   962  0018                     	;# 
   963  0019                     	;# 
   964  001A                     	;# 
   965  001B                     	;# 
   966  001C                     	;# 
   967  008C                     	;# 
   968  0091                     	;# 
   969  0092                     	;# 
   970  0093                     	;# 
   971  0095                     	;# 
   972  0096                     	;# 
   973  0097                     	;# 
   974  0098                     	;# 
   975  0099                     	;# 
   976  009A                     	;# 
   977  009B                     	;# 
   978  009B                     	;# 
   979  009C                     	;# 
   980  009D                     	;# 
   981  009E                     	;# 
   982  009F                     	;# 
   983  010C                     	;# 
   984  0111                     	;# 
   985  0112                     	;# 
   986  0115                     	;# 
   987  0116                     	;# 
   988  0117                     	;# 
   989  0118                     	;# 
   990  0119                     	;# 
   991  011D                     	;# 
   992  011D                     	;# 
   993  018C                     	;# 
   994  0191                     	;# 
   995  0191                     	;# 
   996  0192                     	;# 
   997  0193                     	;# 
   998  0193                     	;# 
   999  0194                     	;# 
  1000  0195                     	;# 
  1001  0196                     	;# 
  1002  0199                     	;# 
  1003  019A                     	;# 
  1004  019B                     	;# 
  1005  019B                     	;# 
  1006  019C                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019F                     	;# 
  1010  020C                     	;# 
  1011  028C                     	;# 
  1012  030C                     	;# 
  1013  038C                     	;# 
  1014  0391                     	;# 
  1015  0392                     	;# 
  1016  0393                     	;# 
  1017  0691                     	;# 
  1018  0692                     	;# 
  1019  0693                     	;# 
  1020  0694                     	;# 
  1021  0695                     	;# 
  1022  0D8E                     	;# 
  1023  0D8F                     	;# 
  1024  0D90                     	;# 
  1025  0D91                     	;# 
  1026  0D91                     	;# 
  1027  0D92                     	;# 
  1028  0D93                     	;# 
  1029  0D93                     	;# 
  1030  0D94                     	;# 
  1031  0D95                     	;# 
  1032  0D95                     	;# 
  1033  0D96                     	;# 
  1034  0D97                     	;# 
  1035  0D97                     	;# 
  1036  0D98                     	;# 
  1037  0D99                     	;# 
  1038  0D99                     	;# 
  1039  0D9A                     	;# 
  1040  0D9B                     	;# 
  1041  0D9C                     	;# 
  1042  0D9C                     	;# 
  1043  0D9D                     	;# 
  1044  0D9D                     	;# 
  1045  0D9E                     	;# 
  1046  0D9F                     	;# 
  1047  0DA0                     	;# 
  1048  0DA1                     	;# 
  1049  0DA1                     	;# 
  1050  0DA2                     	;# 
  1051  0DA3                     	;# 
  1052  0DA3                     	;# 
  1053  0DA4                     	;# 
  1054  0DA5                     	;# 
  1055  0DA5                     	;# 
  1056  0DA6                     	;# 
  1057  0DA7                     	;# 
  1058  0DA7                     	;# 
  1059  0DA8                     	;# 
  1060  0DA9                     	;# 
  1061  0DA9                     	;# 
  1062  0DAA                     	;# 
  1063  0DAB                     	;# 
  1064  0DAC                     	;# 
  1065  0DAC                     	;# 
  1066  0DAD                     	;# 
  1067  0DAD                     	;# 
  1068  0DAE                     	;# 
  1069  0DAF                     	;# 
  1070  0DB0                     	;# 
  1071  0DB1                     	;# 
  1072  0DB1                     	;# 
  1073  0DB2                     	;# 
  1074  0DB3                     	;# 
  1075  0DB3                     	;# 
  1076  0DB4                     	;# 
  1077  0DB5                     	;# 
  1078  0DB5                     	;# 
  1079  0DB6                     	;# 
  1080  0DB7                     	;# 
  1081  0DB7                     	;# 
  1082  0DB8                     	;# 
  1083  0DB9                     	;# 
  1084  0DB9                     	;# 
  1085  0DBA                     	;# 
  1086  0DBB                     	;# 
  1087  0DBC                     	;# 
  1088  0DBC                     	;# 
  1089  0DBD                     	;# 
  1090  0DBD                     	;# 
  1091  0DBE                     	;# 
  1092  0DBF                     	;# 
  1093  0DC0                     	;# 
  1094  0FE4                     	;# 
  1095  0FE5                     	;# 
  1096  0FE6                     	;# 
  1097  0FE7                     	;# 
  1098  0FE8                     	;# 
  1099  0FE8                     	;# 
  1100  0FE9                     	;# 
  1101  0FEA                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEE                     	;# 
  1107  0FEF                     	;# 
  1108  0000                     	;# 
  1109  0001                     	;# 
  1110  0002                     	;# 
  1111  0003                     	;# 
  1112  0004                     	;# 
  1113  0005                     	;# 
  1114  0006                     	;# 
  1115  0007                     	;# 
  1116  0008                     	;# 
  1117  0009                     	;# 
  1118  000A                     	;# 
  1119  000B                     	;# 
  1120  000C                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0015                     	;# 
  1125  0016                     	;# 
  1126  0016                     	;# 
  1127  0017                     	;# 
  1128  0018                     	;# 
  1129  0019                     	;# 
  1130  001A                     	;# 
  1131  001B                     	;# 
  1132  001C                     	;# 
  1133  008C                     	;# 
  1134  0091                     	;# 
  1135  0092                     	;# 
  1136  0093                     	;# 
  1137  0095                     	;# 
  1138  0096                     	;# 
  1139  0097                     	;# 
  1140  0098                     	;# 
  1141  0099                     	;# 
  1142  009A                     	;# 
  1143  009B                     	;# 
  1144  009B                     	;# 
  1145  009C                     	;# 
  1146  009D                     	;# 
  1147  009E                     	;# 
  1148  009F                     	;# 
  1149  010C                     	;# 
  1150  0111                     	;# 
  1151  0112                     	;# 
  1152  0115                     	;# 
  1153  0116                     	;# 
  1154  0117                     	;# 
  1155  0118                     	;# 
  1156  0119                     	;# 
  1157  011D                     	;# 
  1158  011D                     	;# 
  1159  018C                     	;# 
  1160  0191                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0193                     	;# 
  1164  0193                     	;# 
  1165  0194                     	;# 
  1166  0195                     	;# 
  1167  0196                     	;# 
  1168  0199                     	;# 
  1169  019A                     	;# 
  1170  019B                     	;# 
  1171  019B                     	;# 
  1172  019C                     	;# 
  1173  019D                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  020C                     	;# 
  1177  028C                     	;# 
  1178  030C                     	;# 
  1179  038C                     	;# 
  1180  0391                     	;# 
  1181  0392                     	;# 
  1182  0393                     	;# 
  1183  0691                     	;# 
  1184  0692                     	;# 
  1185  0693                     	;# 
  1186  0694                     	;# 
  1187  0695                     	;# 
  1188  0D8E                     	;# 
  1189  0D8F                     	;# 
  1190  0D90                     	;# 
  1191  0D91                     	;# 
  1192  0D91                     	;# 
  1193  0D92                     	;# 
  1194  0D93                     	;# 
  1195  0D93                     	;# 
  1196  0D94                     	;# 
  1197  0D95                     	;# 
  1198  0D95                     	;# 
  1199  0D96                     	;# 
  1200  0D97                     	;# 
  1201  0D97                     	;# 
  1202  0D98                     	;# 
  1203  0D99                     	;# 
  1204  0D99                     	;# 
  1205  0D9A                     	;# 
  1206  0D9B                     	;# 
  1207  0D9C                     	;# 
  1208  0D9C                     	;# 
  1209  0D9D                     	;# 
  1210  0D9D                     	;# 
  1211  0D9E                     	;# 
  1212  0D9F                     	;# 
  1213  0DA0                     	;# 
  1214  0DA1                     	;# 
  1215  0DA1                     	;# 
  1216  0DA2                     	;# 
  1217  0DA3                     	;# 
  1218  0DA3                     	;# 
  1219  0DA4                     	;# 
  1220  0DA5                     	;# 
  1221  0DA5                     	;# 
  1222  0DA6                     	;# 
  1223  0DA7                     	;# 
  1224  0DA7                     	;# 
  1225  0DA8                     	;# 
  1226  0DA9                     	;# 
  1227  0DA9                     	;# 
  1228  0DAA                     	;# 
  1229  0DAB                     	;# 
  1230  0DAC                     	;# 
  1231  0DAC                     	;# 
  1232  0DAD                     	;# 
  1233  0DAD                     	;# 
  1234  0DAE                     	;# 
  1235  0DAF                     	;# 
  1236  0DB0                     	;# 
  1237  0DB1                     	;# 
  1238  0DB1                     	;# 
  1239  0DB2                     	;# 
  1240  0DB3                     	;# 
  1241  0DB3                     	;# 
  1242  0DB4                     	;# 
  1243  0DB5                     	;# 
  1244  0DB5                     	;# 
  1245  0DB6                     	;# 
  1246  0DB7                     	;# 
  1247  0DB7                     	;# 
  1248  0DB8                     	;# 
  1249  0DB9                     	;# 
  1250  0DB9                     	;# 
  1251  0DBA                     	;# 
  1252  0DBB                     	;# 
  1253  0DBC                     	;# 
  1254  0DBC                     	;# 
  1255  0DBD                     	;# 
  1256  0DBD                     	;# 
  1257  0DBE                     	;# 
  1258  0DBF                     	;# 
  1259  0DC0                     	;# 
  1260  0FE4                     	;# 
  1261  0FE5                     	;# 
  1262  0FE6                     	;# 
  1263  0FE7                     	;# 
  1264  0FE8                     	;# 
  1265  0FE8                     	;# 
  1266  0FE9                     	;# 
  1267  0FEA                     	;# 
  1268  0FEA                     	;# 
  1269  0FEB                     	;# 
  1270  0FED                     	;# 
  1271  0FEE                     	;# 
  1272  0FEE                     	;# 
  1273  0FEF                     	;# 
  1274  0000                     	;# 
  1275  0001                     	;# 
  1276  0002                     	;# 
  1277  0003                     	;# 
  1278  0004                     	;# 
  1279  0005                     	;# 
  1280  0006                     	;# 
  1281  0007                     	;# 
  1282  0008                     	;# 
  1283  0009                     	;# 
  1284  000A                     	;# 
  1285  000B                     	;# 
  1286  000C                     	;# 
  1287  0011                     	;# 
  1288  0012                     	;# 
  1289  0013                     	;# 
  1290  0015                     	;# 
  1291  0016                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  001A                     	;# 
  1297  001B                     	;# 
  1298  001C                     	;# 
  1299  008C                     	;# 
  1300  0091                     	;# 
  1301  0092                     	;# 
  1302  0093                     	;# 
  1303  0095                     	;# 
  1304  0096                     	;# 
  1305  0097                     	;# 
  1306  0098                     	;# 
  1307  0099                     	;# 
  1308  009A                     	;# 
  1309  009B                     	;# 
  1310  009B                     	;# 
  1311  009C                     	;# 
  1312  009D                     	;# 
  1313  009E                     	;# 
  1314  009F                     	;# 
  1315  010C                     	;# 
  1316  0111                     	;# 
  1317  0112                     	;# 
  1318  0115                     	;# 
  1319  0116                     	;# 
  1320  0117                     	;# 
  1321  0118                     	;# 
  1322  0119                     	;# 
  1323  011D                     	;# 
  1324  011D                     	;# 
  1325  018C                     	;# 
  1326  0191                     	;# 
  1327  0191                     	;# 
  1328  0192                     	;# 
  1329  0193                     	;# 
  1330  0193                     	;# 
  1331  0194                     	;# 
  1332  0195                     	;# 
  1333  0196                     	;# 
  1334  0199                     	;# 
  1335  019A                     	;# 
  1336  019B                     	;# 
  1337  019B                     	;# 
  1338  019C                     	;# 
  1339  019D                     	;# 
  1340  019E                     	;# 
  1341  019F                     	;# 
  1342  020C                     	;# 
  1343  028C                     	;# 
  1344  030C                     	;# 
  1345  038C                     	;# 
  1346  0391                     	;# 
  1347  0392                     	;# 
  1348  0393                     	;# 
  1349  0691                     	;# 
  1350  0692                     	;# 
  1351  0693                     	;# 
  1352  0694                     	;# 
  1353  0695                     	;# 
  1354  0D8E                     	;# 
  1355  0D8F                     	;# 
  1356  0D90                     	;# 
  1357  0D91                     	;# 
  1358  0D91                     	;# 
  1359  0D92                     	;# 
  1360  0D93                     	;# 
  1361  0D93                     	;# 
  1362  0D94                     	;# 
  1363  0D95                     	;# 
  1364  0D95                     	;# 
  1365  0D96                     	;# 
  1366  0D97                     	;# 
  1367  0D97                     	;# 
  1368  0D98                     	;# 
  1369  0D99                     	;# 
  1370  0D99                     	;# 
  1371  0D9A                     	;# 
  1372  0D9B                     	;# 
  1373  0D9C                     	;# 
  1374  0D9C                     	;# 
  1375  0D9D                     	;# 
  1376  0D9D                     	;# 
  1377  0D9E                     	;# 
  1378  0D9F                     	;# 
  1379  0DA0                     	;# 
  1380  0DA1                     	;# 
  1381  0DA1                     	;# 
  1382  0DA2                     	;# 
  1383  0DA3                     	;# 
  1384  0DA3                     	;# 
  1385  0DA4                     	;# 
  1386  0DA5                     	;# 
  1387  0DA5                     	;# 
  1388  0DA6                     	;# 
  1389  0DA7                     	;# 
  1390  0DA7                     	;# 
  1391  0DA8                     	;# 
  1392  0DA9                     	;# 
  1393  0DA9                     	;# 
  1394  0DAA                     	;# 
  1395  0DAB                     	;# 
  1396  0DAC                     	;# 
  1397  0DAC                     	;# 
  1398  0DAD                     	;# 
  1399  0DAD                     	;# 
  1400  0DAE                     	;# 
  1401  0DAF                     	;# 
  1402  0DB0                     	;# 
  1403  0DB1                     	;# 
  1404  0DB1                     	;# 
  1405  0DB2                     	;# 
  1406  0DB3                     	;# 
  1407  0DB3                     	;# 
  1408  0DB4                     	;# 
  1409  0DB5                     	;# 
  1410  0DB5                     	;# 
  1411  0DB6                     	;# 
  1412  0DB7                     	;# 
  1413  0DB7                     	;# 
  1414  0DB8                     	;# 
  1415  0DB9                     	;# 
  1416  0DB9                     	;# 
  1417  0DBA                     	;# 
  1418  0DBB                     	;# 
  1419  0DBC                     	;# 
  1420  0DBC                     	;# 
  1421  0DBD                     	;# 
  1422  0DBD                     	;# 
  1423  0DBE                     	;# 
  1424  0DBF                     	;# 
  1425  0DC0                     	;# 
  1426  0FE4                     	;# 
  1427  0FE5                     	;# 
  1428  0FE6                     	;# 
  1429  0FE7                     	;# 
  1430  0FE8                     	;# 
  1431  0FE8                     	;# 
  1432  0FE9                     	;# 
  1433  0FEA                     	;# 
  1434  0FEA                     	;# 
  1435  0FEB                     	;# 
  1436  0FED                     	;# 
  1437  0FEE                     	;# 
  1438  0FEE                     	;# 
  1439  0FEF                     	;# 
  1440  0000                     	;# 
  1441  0001                     	;# 
  1442  0002                     	;# 
  1443  0003                     	;# 
  1444  0004                     	;# 
  1445  0005                     	;# 
  1446  0006                     	;# 
  1447  0007                     	;# 
  1448  0008                     	;# 
  1449  0009                     	;# 
  1450  000A                     	;# 
  1451  000B                     	;# 
  1452  000C                     	;# 
  1453  0011                     	;# 
  1454  0012                     	;# 
  1455  0013                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  001A                     	;# 
  1463  001B                     	;# 
  1464  001C                     	;# 
  1465  008C                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0095                     	;# 
  1470  0096                     	;# 
  1471  0097                     	;# 
  1472  0098                     	;# 
  1473  0099                     	;# 
  1474  009A                     	;# 
  1475  009B                     	;# 
  1476  009B                     	;# 
  1477  009C                     	;# 
  1478  009D                     	;# 
  1479  009E                     	;# 
  1480  009F                     	;# 
  1481  010C                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0115                     	;# 
  1485  0116                     	;# 
  1486  0117                     	;# 
  1487  0118                     	;# 
  1488  0119                     	;# 
  1489  011D                     	;# 
  1490  011D                     	;# 
  1491  018C                     	;# 
  1492  0191                     	;# 
  1493  0191                     	;# 
  1494  0192                     	;# 
  1495  0193                     	;# 
  1496  0193                     	;# 
  1497  0194                     	;# 
  1498  0195                     	;# 
  1499  0196                     	;# 
  1500  0199                     	;# 
  1501  019A                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019C                     	;# 
  1505  019D                     	;# 
  1506  019E                     	;# 
  1507  019F                     	;# 
  1508  020C                     	;# 
  1509  028C                     	;# 
  1510  030C                     	;# 
  1511  038C                     	;# 
  1512  0391                     	;# 
  1513  0392                     	;# 
  1514  0393                     	;# 
  1515  0691                     	;# 
  1516  0692                     	;# 
  1517  0693                     	;# 
  1518  0694                     	;# 
  1519  0695                     	;# 
  1520  0D8E                     	;# 
  1521  0D8F                     	;# 
  1522  0D90                     	;# 
  1523  0D91                     	;# 
  1524  0D91                     	;# 
  1525  0D92                     	;# 
  1526  0D93                     	;# 
  1527  0D93                     	;# 
  1528  0D94                     	;# 
  1529  0D95                     	;# 
  1530  0D95                     	;# 
  1531  0D96                     	;# 
  1532  0D97                     	;# 
  1533  0D97                     	;# 
  1534  0D98                     	;# 
  1535  0D99                     	;# 
  1536  0D99                     	;# 
  1537  0D9A                     	;# 
  1538  0D9B                     	;# 
  1539  0D9C                     	;# 
  1540  0D9C                     	;# 
  1541  0D9D                     	;# 
  1542  0D9D                     	;# 
  1543  0D9E                     	;# 
  1544  0D9F                     	;# 
  1545  0DA0                     	;# 
  1546  0DA1                     	;# 
  1547  0DA1                     	;# 
  1548  0DA2                     	;# 
  1549  0DA3                     	;# 
  1550  0DA3                     	;# 
  1551  0DA4                     	;# 
  1552  0DA5                     	;# 
  1553  0DA5                     	;# 
  1554  0DA6                     	;# 
  1555  0DA7                     	;# 
  1556  0DA7                     	;# 
  1557  0DA8                     	;# 
  1558  0DA9                     	;# 
  1559  0DA9                     	;# 
  1560  0DAA                     	;# 
  1561  0DAB                     	;# 
  1562  0DAC                     	;# 
  1563  0DAC                     	;# 
  1564  0DAD                     	;# 
  1565  0DAD                     	;# 
  1566  0DAE                     	;# 
  1567  0DAF                     	;# 
  1568  0DB0                     	;# 
  1569  0DB1                     	;# 
  1570  0DB1                     	;# 
  1571  0DB2                     	;# 
  1572  0DB3                     	;# 
  1573  0DB3                     	;# 
  1574  0DB4                     	;# 
  1575  0DB5                     	;# 
  1576  0DB5                     	;# 
  1577  0DB6                     	;# 
  1578  0DB7                     	;# 
  1579  0DB7                     	;# 
  1580  0DB8                     	;# 
  1581  0DB9                     	;# 
  1582  0DB9                     	;# 
  1583  0DBA                     	;# 
  1584  0DBB                     	;# 
  1585  0DBC                     	;# 
  1586  0DBC                     	;# 
  1587  0DBD                     	;# 
  1588  0DBD                     	;# 
  1589  0DBE                     	;# 
  1590  0DBF                     	;# 
  1591  0DC0                     	;# 
  1592  0FE4                     	;# 
  1593  0FE5                     	;# 
  1594  0FE6                     	;# 
  1595  0FE7                     	;# 
  1596  0FE8                     	;# 
  1597  0FE8                     	;# 
  1598  0FE9                     	;# 
  1599  0FEA                     	;# 
  1600  0FEA                     	;# 
  1601  0FEB                     	;# 
  1602  0FED                     	;# 
  1603  0FEE                     	;# 
  1604  0FEE                     	;# 
  1605  0FEF                     	;# 
  1606  0000                     	;# 
  1607  0001                     	;# 
  1608  0002                     	;# 
  1609  0003                     	;# 
  1610  0004                     	;# 
  1611  0005                     	;# 
  1612  0006                     	;# 
  1613  0007                     	;# 
  1614  0008                     	;# 
  1615  0009                     	;# 
  1616  000A                     	;# 
  1617  000B                     	;# 
  1618  000C                     	;# 
  1619  0011                     	;# 
  1620  0012                     	;# 
  1621  0013                     	;# 
  1622  0015                     	;# 
  1623  0016                     	;# 
  1624  0016                     	;# 
  1625  0017                     	;# 
  1626  0018                     	;# 
  1627  0019                     	;# 
  1628  001A                     	;# 
  1629  001B                     	;# 
  1630  001C                     	;# 
  1631  008C                     	;# 
  1632  0091                     	;# 
  1633  0092                     	;# 
  1634  0093                     	;# 
  1635  0095                     	;# 
  1636  0096                     	;# 
  1637  0097                     	;# 
  1638  0098                     	;# 
  1639  0099                     	;# 
  1640  009A                     	;# 
  1641  009B                     	;# 
  1642  009B                     	;# 
  1643  009C                     	;# 
  1644  009D                     	;# 
  1645  009E                     	;# 
  1646  009F                     	;# 
  1647  010C                     	;# 
  1648  0111                     	;# 
  1649  0112                     	;# 
  1650  0115                     	;# 
  1651  0116                     	;# 
  1652  0117                     	;# 
  1653  0118                     	;# 
  1654  0119                     	;# 
  1655  011D                     	;# 
  1656  011D                     	;# 
  1657  018C                     	;# 
  1658  0191                     	;# 
  1659  0191                     	;# 
  1660  0192                     	;# 
  1661  0193                     	;# 
  1662  0193                     	;# 
  1663  0194                     	;# 
  1664  0195                     	;# 
  1665  0196                     	;# 
  1666  0199                     	;# 
  1667  019A                     	;# 
  1668  019B                     	;# 
  1669  019B                     	;# 
  1670  019C                     	;# 
  1671  019D                     	;# 
  1672  019E                     	;# 
  1673  019F                     	;# 
  1674  020C                     	;# 
  1675  028C                     	;# 
  1676  030C                     	;# 
  1677  038C                     	;# 
  1678  0391                     	;# 
  1679  0392                     	;# 
  1680  0393                     	;# 
  1681  0691                     	;# 
  1682  0692                     	;# 
  1683  0693                     	;# 
  1684  0694                     	;# 
  1685  0695                     	;# 
  1686  0D8E                     	;# 
  1687  0D8F                     	;# 
  1688  0D90                     	;# 
  1689  0D91                     	;# 
  1690  0D91                     	;# 
  1691  0D92                     	;# 
  1692  0D93                     	;# 
  1693  0D93                     	;# 
  1694  0D94                     	;# 
  1695  0D95                     	;# 
  1696  0D95                     	;# 
  1697  0D96                     	;# 
  1698  0D97                     	;# 
  1699  0D97                     	;# 
  1700  0D98                     	;# 
  1701  0D99                     	;# 
  1702  0D99                     	;# 
  1703  0D9A                     	;# 
  1704  0D9B                     	;# 
  1705  0D9C                     	;# 
  1706  0D9C                     	;# 
  1707  0D9D                     	;# 
  1708  0D9D                     	;# 
  1709  0D9E                     	;# 
  1710  0D9F                     	;# 
  1711  0DA0                     	;# 
  1712  0DA1                     	;# 
  1713  0DA1                     	;# 
  1714  0DA2                     	;# 
  1715  0DA3                     	;# 
  1716  0DA3                     	;# 
  1717  0DA4                     	;# 
  1718  0DA5                     	;# 
  1719  0DA5                     	;# 
  1720  0DA6                     	;# 
  1721  0DA7                     	;# 
  1722  0DA7                     	;# 
  1723  0DA8                     	;# 
  1724  0DA9                     	;# 
  1725  0DA9                     	;# 
  1726  0DAA                     	;# 
  1727  0DAB                     	;# 
  1728  0DAC                     	;# 
  1729  0DAC                     	;# 
  1730  0DAD                     	;# 
  1731  0DAD                     	;# 
  1732  0DAE                     	;# 
  1733  0DAF                     	;# 
  1734  0DB0                     	;# 
  1735  0DB1                     	;# 
  1736  0DB1                     	;# 
  1737  0DB2                     	;# 
  1738  0DB3                     	;# 
  1739  0DB3                     	;# 
  1740  0DB4                     	;# 
  1741  0DB5                     	;# 
  1742  0DB5                     	;# 
  1743  0DB6                     	;# 
  1744  0DB7                     	;# 
  1745  0DB7                     	;# 
  1746  0DB8                     	;# 
  1747  0DB9                     	;# 
  1748  0DB9                     	;# 
  1749  0DBA                     	;# 
  1750  0DBB                     	;# 
  1751  0DBC                     	;# 
  1752  0DBC                     	;# 
  1753  0DBD                     	;# 
  1754  0DBD                     	;# 
  1755  0DBE                     	;# 
  1756  0DBF                     	;# 
  1757  0DC0                     	;# 
  1758  0FE4                     	;# 
  1759  0FE5                     	;# 
  1760  0FE6                     	;# 
  1761  0FE7                     	;# 
  1762  0FE8                     	;# 
  1763  0FE8                     	;# 
  1764  0FE9                     	;# 
  1765  0FEA                     	;# 
  1766  0FEA                     	;# 
  1767  0FEB                     	;# 
  1768  0FED                     	;# 
  1769  0FEE                     	;# 
  1770  0FEE                     	;# 
  1771  0FEF                     	;# 
  1772  0000                     	;# 
  1773  0001                     	;# 
  1774  0002                     	;# 
  1775  0003                     	;# 
  1776  0004                     	;# 
  1777  0005                     	;# 
  1778  0006                     	;# 
  1779  0007                     	;# 
  1780  0008                     	;# 
  1781  0009                     	;# 
  1782  000A                     	;# 
  1783  000B                     	;# 
  1784  000C                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  008C                     	;# 
  1798  0091                     	;# 
  1799  0092                     	;# 
  1800  0093                     	;# 
  1801  0095                     	;# 
  1802  0096                     	;# 
  1803  0097                     	;# 
  1804  0098                     	;# 
  1805  0099                     	;# 
  1806  009A                     	;# 
  1807  009B                     	;# 
  1808  009B                     	;# 
  1809  009C                     	;# 
  1810  009D                     	;# 
  1811  009E                     	;# 
  1812  009F                     	;# 
  1813  010C                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0117                     	;# 
  1819  0118                     	;# 
  1820  0119                     	;# 
  1821  011D                     	;# 
  1822  011D                     	;# 
  1823  018C                     	;# 
  1824  0191                     	;# 
  1825  0191                     	;# 
  1826  0192                     	;# 
  1827  0193                     	;# 
  1828  0193                     	;# 
  1829  0194                     	;# 
  1830  0195                     	;# 
  1831  0196                     	;# 
  1832  0199                     	;# 
  1833  019A                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  028C                     	;# 
  1842  030C                     	;# 
  1843  038C                     	;# 
  1844  0391                     	;# 
  1845  0392                     	;# 
  1846  0393                     	;# 
  1847  0691                     	;# 
  1848  0692                     	;# 
  1849  0693                     	;# 
  1850  0694                     	;# 
  1851  0695                     	;# 
  1852  0D8E                     	;# 
  1853  0D8F                     	;# 
  1854  0D90                     	;# 
  1855  0D91                     	;# 
  1856  0D91                     	;# 
  1857  0D92                     	;# 
  1858  0D93                     	;# 
  1859  0D93                     	;# 
  1860  0D94                     	;# 
  1861  0D95                     	;# 
  1862  0D95                     	;# 
  1863  0D96                     	;# 
  1864  0D97                     	;# 
  1865  0D97                     	;# 
  1866  0D98                     	;# 
  1867  0D99                     	;# 
  1868  0D99                     	;# 
  1869  0D9A                     	;# 
  1870  0D9B                     	;# 
  1871  0D9C                     	;# 
  1872  0D9C                     	;# 
  1873  0D9D                     	;# 
  1874  0D9D                     	;# 
  1875  0D9E                     	;# 
  1876  0D9F                     	;# 
  1877  0DA0                     	;# 
  1878  0DA1                     	;# 
  1879  0DA1                     	;# 
  1880  0DA2                     	;# 
  1881  0DA3                     	;# 
  1882  0DA3                     	;# 
  1883  0DA4                     	;# 
  1884  0DA5                     	;# 
  1885  0DA5                     	;# 
  1886  0DA6                     	;# 
  1887  0DA7                     	;# 
  1888  0DA7                     	;# 
  1889  0DA8                     	;# 
  1890  0DA9                     	;# 
  1891  0DA9                     	;# 
  1892  0DAA                     	;# 
  1893  0DAB                     	;# 
  1894  0DAC                     	;# 
  1895  0DAC                     	;# 
  1896  0DAD                     	;# 
  1897  0DAD                     	;# 
  1898  0DAE                     	;# 
  1899  0DAF                     	;# 
  1900  0DB0                     	;# 
  1901  0DB1                     	;# 
  1902  0DB1                     	;# 
  1903  0DB2                     	;# 
  1904  0DB3                     	;# 
  1905  0DB3                     	;# 
  1906  0DB4                     	;# 
  1907  0DB5                     	;# 
  1908  0DB5                     	;# 
  1909  0DB6                     	;# 
  1910  0DB7                     	;# 
  1911  0DB7                     	;# 
  1912  0DB8                     	;# 
  1913  0DB9                     	;# 
  1914  0DB9                     	;# 
  1915  0DBA                     	;# 
  1916  0DBB                     	;# 
  1917  0DBC                     	;# 
  1918  0DBC                     	;# 
  1919  0DBD                     	;# 
  1920  0DBD                     	;# 
  1921  0DBE                     	;# 
  1922  0DBF                     	;# 
  1923  0DC0                     	;# 
  1924  0FE4                     	;# 
  1925  0FE5                     	;# 
  1926  0FE6                     	;# 
  1927  0FE7                     	;# 
  1928  0FE8                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEA                     	;# 
  1933  0FEB                     	;# 
  1934  0FED                     	;# 
  1935  0FEE                     	;# 
  1936  0FEE                     	;# 
  1937  0FEF                     	;# 
  1938                           
  1939                           	psect	idataBANK0
  1940  053D                     __pidataBANK0:
  1941                           
  1942                           ;initializer for _minLevel
  1943  053D  34FF               	retlw	255
  1944  053E  34FF               	retlw	255
  1945                           
  1946                           ;initializer for _runTriggers
  1947  053F  3401               	retlw	1
  1948                           
  1949                           	psect	idataBANK2
  1950  02C1                     __pidataBANK2:
  1951                           
  1952                           ;initializer for _sine
  1953  02C1  3416               	retlw	22
  1954  02C2  3418               	retlw	24
  1955  02C3  341B               	retlw	27
  1956  02C4  3422               	retlw	34
  1957  02C5  342B               	retlw	43
  1958  02C6  3435               	retlw	53
  1959  02C7  3442               	retlw	66
  1960  02C8  3452               	retlw	82
  1961  02C9  3461               	retlw	97
  1962  02CA  3472               	retlw	114
  1963  02CB  3481               	retlw	129
  1964  02CC  3492               	retlw	146
  1965  02CD  34A3               	retlw	163
  1966  02CE  34B3               	retlw	179
  1967  02CF  34C2               	retlw	194
  1968  02D0  34CF               	retlw	207
  1969  02D1  34DA               	retlw	218
  1970  02D2  34E2               	retlw	226
  1971  02D3  34E9               	retlw	233
  1972  02D4  34EC               	retlw	236
  1973  02D5  34EE               	retlw	238
  1974  02D6  34EC               	retlw	236
  1975  02D7  34E9               	retlw	233
  1976  02D8  34E2               	retlw	226
  1977  02D9  34DA               	retlw	218
  1978  02DA  34CF               	retlw	207
  1979  02DB  34C2               	retlw	194
  1980  02DC  34B3               	retlw	179
  1981  02DD  34A3               	retlw	163
  1982  02DE  3492               	retlw	146
  1983  02DF  3483               	retlw	131
  1984  02E0  3472               	retlw	114
  1985  02E1  3461               	retlw	97
  1986  02E2  3452               	retlw	82
  1987  02E3  3442               	retlw	66
  1988  02E4  3435               	retlw	53
  1989  02E5  342B               	retlw	43
  1990  02E6  3422               	retlw	34
  1991  02E7  341B               	retlw	27
  1992  02E8  3418               	retlw	24
  1993  02E9  3416               	retlw	22
  1994                           
  1995                           	psect	nvBANK0
  1996  004E                     __pnvBANK0:
  1997  004E                     _TMR1_InterruptHandler:
  1998  004E                     	ds	2
  1999  0050                     _timer1ReloadVal:
  2000  0050                     	ds	2
  2001  0052                     _IOCAF3_InterruptHandler:
  2002  0052                     	ds	2
  2003  0054                     _timer0ReloadVal:
  2004  0054                     	ds	1
  2005  000C                     _PORTAbits	set	12
  2006  001C                     _T2CONbits	set	28
  2007  001C                     _T2CON	set	28
  2008  001A                     _TMR2	set	26
  2009  001B                     _PR2	set	27
  2010  0015                     _TMR0	set	21
  2011  0019                     _T1GCONbits	set	25
  2012  0018                     _T1CONbits	set	24
  2013  0018                     _T1CON	set	24
  2014  0011                     _PIR1bits	set	17
  2015  0016                     _TMR1L	set	22
  2016  0017                     _TMR1H	set	23
  2017  0019                     _T1GCON	set	25
  2018  000B                     _INTCONbits	set	11
  2019  009D                     _ADCON0bits	set	157
  2020  009C                     _ADRESH	set	156
  2021  009B                     _ADRESL	set	155
  2022  009F                     _ADCON2	set	159
  2023  009E                     _ADCON1	set	158
  2024  009D                     _ADCON0	set	157
  2025  0095                     _OPTION_REG	set	149
  2026  0091                     _PIE1bits	set	145
  2027  0095                     _OPTION_REGbits	set	149
  2028  008C                     _TRISA	set	140
  2029  0097                     _WDTCON	set	151
  2030  0098                     _OSCTUNE	set	152
  2031  0099                     _OSCCON	set	153
  2032  010C                     _LATAbits	set	268
  2033  011D                     _APFCON	set	285
  2034  010C                     _LATA	set	268
  2035  0116                     _BORCON	set	278
  2036  018C                     _ANSELA	set	396
  2037  020C                     _WPUA	set	524
  2038  028C                     _ODCONA	set	652
  2039  030C                     _SLRCONA	set	780
  2040  0391                     _IOCAPbits	set	913
  2041  0392                     _IOCANbits	set	914
  2042  0393                     _IOCAFbits	set	915
  2043  038C                     _INLVLA	set	908
  2044  0DAD                     _PWM2INTFbits	set	3501
  2045  0DAF                     _PWM2LDCONbits	set	3503
  2046  0DAB                     _PWM2CONbits	set	3499
  2047  0DAB                     _PWM2CON	set	3499
  2048  0DA9                     _PWM2TMRL	set	3497
  2049  0DAA                     _PWM2TMRH	set	3498
  2050  0DA7                     _PWM2OFL	set	3495
  2051  0DA8                     _PWM2OFH	set	3496
  2052  0DA5                     _PWM2PRL	set	3493
  2053  0DA6                     _PWM2PRH	set	3494
  2054  0DA3                     _PWM2DCL	set	3491
  2055  0DA4                     _PWM2DCH	set	3492
  2056  0DA1                     _PWM2PHL	set	3489
  2057  0DA2                     _PWM2PHH	set	3490
  2058  0DB0                     _PWM2OFCON	set	3504
  2059  0DAF                     _PWM2LDCON	set	3503
  2060  0DAE                     _PWM2CLKCON	set	3502
  2061  0DAD                     _PWM2INTF	set	3501
  2062  0DAC                     _PWM2INTE	set	3500
  2063  0DBD                     _PWM3INTFbits	set	3517
  2064  0DBF                     _PWM3LDCONbits	set	3519
  2065  0DBB                     _PWM3CONbits	set	3515
  2066  0DBB                     _PWM3CON	set	3515
  2067  0DB9                     _PWM3TMRL	set	3513
  2068  0DBA                     _PWM3TMRH	set	3514
  2069  0DB7                     _PWM3OFL	set	3511
  2070  0DB8                     _PWM3OFH	set	3512
  2071  0DB5                     _PWM3PRL	set	3509
  2072  0DB6                     _PWM3PRH	set	3510
  2073  0DB3                     _PWM3DCL	set	3507
  2074  0DB4                     _PWM3DCH	set	3508
  2075  0DB1                     _PWM3PHL	set	3505
  2076  0DB2                     _PWM3PHH	set	3506
  2077  0DC0                     _PWM3OFCON	set	3520
  2078  0DBF                     _PWM3LDCON	set	3519
  2079  0DBE                     _PWM3CLKCON	set	3518
  2080  0DBD                     _PWM3INTF	set	3517
  2081  0DBC                     _PWM3INTE	set	3516
  2082  0D9D                     _PWM1INTFbits	set	3485
  2083  0D9F                     _PWM1LDCONbits	set	3487
  2084  0D9B                     _PWM1CONbits	set	3483
  2085  0D9B                     _PWM1CON	set	3483
  2086  0D99                     _PWM1TMRL	set	3481
  2087  0D9A                     _PWM1TMRH	set	3482
  2088  0D97                     _PWM1OFL	set	3479
  2089  0D98                     _PWM1OFH	set	3480
  2090  0D95                     _PWM1PRL	set	3477
  2091  0D96                     _PWM1PRH	set	3478
  2092  0D93                     _PWM1DCL	set	3475
  2093  0D94                     _PWM1DCH	set	3476
  2094  0D91                     _PWM1PHL	set	3473
  2095  0D92                     _PWM1PHH	set	3474
  2096  0DA0                     _PWM1OFCON	set	3488
  2097  0D9F                     _PWM1LDCON	set	3487
  2098  0D9E                     _PWM1CLKCON	set	3486
  2099  0D9D                     _PWM1INTF	set	3485
  2100  0D9C                     _PWM1INTE	set	3484
  2101                           
  2102                           	psect	cinit
  2103  001F                     start_initialization:	
  2104                           ; #config settings
  2105                           
  2106  001F                     __initialization:
  2107                           
  2108                           ; Initialize objects allocated to BANK0
  2109  001F  303D               	movlw	low __pidataBANK0
  2110  0020  0084               	movwf	4
  2111  0021  3085               	movlw	(high __pidataBANK0)| (0+128)
  2112  0022  0085               	movwf	5
  2113  0023  3055               	movlw	low __pdataBANK0
  2114  0024  0086               	movwf	6
  2115  0025  3000               	movlw	high __pdataBANK0
  2116  0026  0087               	movwf	7
  2117  0027  3003               	movlw	3
  2118  0028  24E7               	fcall	init_ram
  2119                           
  2120                           ; Initialize objects allocated to BANK2
  2121  0029  30C1               	movlw	low __pidataBANK2
  2122  002A  0084               	movwf	4
  2123  002B  3082               	movlw	(high __pidataBANK2)| (0+128)
  2124  002C  0085               	movwf	5
  2125  002D  3020               	movlw	low __pdataBANK2
  2126  002E  0086               	movwf	6
  2127  002F  3001               	movlw	high __pdataBANK2
  2128  0030  0087               	movwf	7
  2129  0031  3029               	movlw	41
  2130  0032  24E7               	fcall	init_ram
  2131                           
  2132                           ; Clear objects allocated to COMMON
  2133  0033  01FC               	clrf	__pbssCOMMON& (0+127)
  2134  0034  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2135                           
  2136                           ; Clear objects allocated to BANK0
  2137  0035  3020               	movlw	low __pbssBANK0
  2138  0036  0084               	movwf	4
  2139  0037  3000               	movlw	high __pbssBANK0
  2140  0038  0085               	movwf	5
  2141  0039  3018               	movlw	24
  2142  003A  24ED               	fcall	clear_ram0
  2143                           
  2144                           ; Clear objects allocated to BANK1
  2145  003B  30A0               	movlw	low __pbssBANK1
  2146  003C  0084               	movwf	4
  2147  003D  3000               	movlw	high __pbssBANK1
  2148  003E  0085               	movwf	5
  2149  003F  3028               	movlw	40
  2150  0040  24ED               	fcall	clear_ram0
  2151  0041                     end_of_initialization:	
  2152                           ;End of C runtime variable initialization code
  2153                           
  2154  0041                     __end_of__initialization:
  2155  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2156  0042  0020               	movlb	0
  2157  0043  2A8B               	ljmp	_main	;jump to C main() function
  2158                           
  2159                           	psect	bssCOMMON
  2160  007C                     __pbssCOMMON:
  2161  007C                     _secondIndex:
  2162  007C                     	ds	1
  2163  007D                     _sampleTriggers:
  2164  007D                     	ds	1
  2165                           
  2166                           	psect	bssBANK0
  2167  0020                     __pbssBANK0:
  2168  0020                     _pressTime:
  2169  0020                     	ds	3
  2170  0023                     _timerMS:
  2171  0023                     	ds	3
  2172  0026                     _maxLevel:
  2173  0026                     	ds	2
  2174  0028                     _volume:
  2175  0028                     	ds	2
  2176  002A                     _samples:
  2177  002A                     	ds	2
  2178  002C                     _totalTriggers:
  2179  002C                     	ds	2
  2180  002E                     _altMode:
  2181  002E                     	ds	1
  2182  002F                     _brightness:
  2183  002F                     	ds	1
  2184  0030                     _selectedGame:
  2185  0030                     	ds	1
  2186  0031                     _gameMenuMode:
  2187  0031                     	ds	1
  2188  0032                     _patternIndex:
  2189  0032                     	ds	1
  2190  0033                     _beaconIsRed:
  2191  0033                     	ds	1
  2192  0034                     _changePress:
  2193  0034                     	ds	1
  2194  0035                     _shortPress:
  2195  0035                     	ds	1
  2196  0036                     _longPress:
  2197  0036                     	ds	1
  2198  0037                     _sampleNumber:
  2199  0037                     	ds	1
  2200                           
  2201                           	psect	dataBANK0
  2202  0055                     __pdataBANK0:
  2203  0055                     _minLevel:
  2204  0055                     	ds	2
  2205  0057                     _runTriggers:
  2206  0057                     	ds	1
  2207                           
  2208                           	psect	bssBANK1
  2209  00A0                     __pbssBANK1:
  2210  00A0                     _triggersEachInt:
  2211  00A0                     	ds	40
  2212                           
  2213                           	psect	dataBANK2
  2214  0120                     __pdataBANK2:
  2215  0120                     _sine:
  2216  0120                     	ds	41
  2217                           
  2218                           	psect	inittext
  2219  04E7                     init_ram:
  2220  04E7  00FE               	movwf	126
  2221  04E8                     initloop:
  2222  04E8  0012               	moviw fsr0++
  2223  04E9  001E               	movwi fsr1++
  2224  04EA  0BFE               	decfsz	126,f
  2225  04EB  2CE8               	goto	initloop
  2226  04EC  3400               	retlw	0
  2227                           
  2228                           	psect	clrtext
  2229  04ED                     clear_ram0:	
  2230                           ;	Called with FSR0 containing the base address, and
  2231                           ;	WREG with the size to clear
  2232                           
  2233  04ED  0064               	clrwdt	;clear the watchdog before getting into this loop
  2234  04EE                     clrloop0:
  2235  04EE  0180               	clrf	0	;clear RAM location pointed to by FSR
  2236  04EF  3101               	addfsr 0,1
  2237  04F0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2238  04F1  2CEE               	goto	clrloop0	;have we reached the end yet?
  2239  04F2  3400               	retlw	0	;all done for this memory range, return
  2240                           
  2241                           	psect	cstackCOMMON
  2242  0070                     __pcstackCOMMON:
  2243  0070                     ?_PIN_MANAGER_Initialize:
  2244  0070                     ?_OSCILLATOR_Initialize:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ?_WDT_Initialize:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_PWM1_Initialize:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     ?_PWM2_Initialize:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_ADC1_Initialize:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ?_PWM3_Initialize:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_TMR2_Initialize:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_TMR1_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_TMR0_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_IOCAF3_DefaultInterruptHandler:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ??_IOCAF3_DefaultInterruptHandler:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_IOCAF3_ISR:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_TMR1_DefaultInterruptHandler:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_TMR1_DefaultInterruptHandler:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_ADC1_ISR:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_buttonHandler:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_powerUpTest:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_buttonPressed:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_clearPresses:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_powerDown:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_tickle:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_flashRev:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_SYSTEM_Initialize:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_PIN_MANAGER_IOC:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_TMR1_WriteTimer:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_TMR1_ISR:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_resetTimerMS:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_INTERRUPT_InterruptManager:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_resetVolumeLimit:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_PWM1_Start:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_PWM1_Stop:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_PWM1_LoadBufferSet:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_PWM3_Start:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_PWM3_Stop:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_PWM3_LoadBufferSet:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_PWM2_Start:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_PWM2_Stop:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_PWM2_LoadBufferSet:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?i1_PWM1_LoadBufferSet:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ??i1_PWM1_LoadBufferSet:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?i1_PWM1_DutyCycleSet:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?i1_PWM3_LoadBufferSet:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ??i1_PWM3_LoadBufferSet:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?i1_PWM3_DutyCycleSet:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?i1_PWM2_LoadBufferSet:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ??i1_PWM2_LoadBufferSet:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?i1_PWM2_DutyCycleSet:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_ADC1_GetConversionResult:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?i1_getTimerMS:	
  2392                           ; 2 bytes @ 0x0
  2393                           
  2394  0070                     TMR1_WriteTimer@timerVal:	
  2395                           ; 3 bytes @ 0x0
  2396                           
  2397  0070                     i1PWM1_DutyCycleSet@dutyCycleCount:	
  2398                           ; 2 bytes @ 0x0
  2399                           
  2400  0070                     i1PWM3_DutyCycleSet@dutyCycleCount:	
  2401                           ; 2 bytes @ 0x0
  2402                           
  2403  0070                     i1PWM2_DutyCycleSet@dutyCycleCount:	
  2404                           ; 2 bytes @ 0x0
  2405                           
  2406                           
  2407                           ; 2 bytes @ 0x0
  2408  0070                     	ds	2
  2409  0072                     ??_TMR1_WriteTimer:
  2410  0072                     ??_TMR1_ISR:	
  2411                           ; 1 bytes @ 0x2
  2412                           
  2413  0072                     ??_ADC1_GetConversionResult:	
  2414                           ; 1 bytes @ 0x2
  2415                           
  2416  0072                     ??i1_PWM1_DutyCycleSet:	
  2417                           ; 1 bytes @ 0x2
  2418                           
  2419  0072                     ??i1_PWM3_DutyCycleSet:	
  2420                           ; 1 bytes @ 0x2
  2421                           
  2422  0072                     ??i1_PWM2_DutyCycleSet:	
  2423                           ; 1 bytes @ 0x2
  2424                           
  2425  0072                     ?i1_setLED:	
  2426                           ; 1 bytes @ 0x2
  2427                           
  2428  0072                     i1setLED@green:	
  2429                           ; 1 bytes @ 0x2
  2430                           
  2431                           
  2432                           ; 1 bytes @ 0x2
  2433  0072                     	ds	1
  2434  0073                     ??_IOCAF3_ISR:
  2435  0073                     ??_buttonHandler:	
  2436                           ; 1 bytes @ 0x3
  2437                           
  2438  0073                     ??_PIN_MANAGER_IOC:	
  2439                           ; 1 bytes @ 0x3
  2440                           
  2441  0073                     ??i1_getTimerMS:	
  2442                           ; 1 bytes @ 0x3
  2443                           
  2444  0073                     i1setLED@blue:	
  2445                           ; 1 bytes @ 0x3
  2446                           
  2447                           
  2448                           ; 1 bytes @ 0x3
  2449  0073                     	ds	1
  2450  0074                     ??i1_setLED:
  2451                           
  2452                           ; 1 bytes @ 0x4
  2453  0074                     	ds	2
  2454  0076                     i1setLED@red:
  2455                           
  2456                           ; 1 bytes @ 0x6
  2457  0076                     	ds	1
  2458  0077                     ?_calculateVolume:
  2459  0077                     calculateVolume@level:	
  2460                           ; 1 bytes @ 0x7
  2461                           
  2462                           
  2463                           ; 2 bytes @ 0x7
  2464  0077                     	ds	2
  2465  0079                     ??_calculateVolume:
  2466                           
  2467                           ; 1 bytes @ 0x9
  2468  0079                     	ds	3
  2469  007C                     ??_ADC1_ISR:
  2470  007C                     ??_INTERRUPT_InterruptManager:	
  2471                           ; 1 bytes @ 0xC
  2472                           
  2473                           
  2474                           	psect	cstackBANK0
  2475  0038                     __pcstackBANK0:	
  2476                           ; 1 bytes @ 0xC
  2477                           
  2478  0038                     ??_OSCILLATOR_Initialize:
  2479  0038                     ??_WDT_Initialize:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0038                     ??_PWM1_Initialize:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0038                     ??_PWM2_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0038                     ??_ADC1_Initialize:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0038                     ??_PWM3_Initialize:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0038                     ??_TMR2_Initialize:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0038                     ??_TMR0_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0038                     ?_IOCAF3_SetInterruptHandler:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0038                     ?_TMR1_SetInterruptHandler:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0038                     ?_memset:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0038                     ??_clearPresses:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0038                     ??_resetTimerMS:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0038                     ??_PWM1_Start:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0038                     ??_PWM1_Stop:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0038                     ??_PWM1_LoadBufferSet:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0038                     ?_PWM1_DutyCycleSet:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0038                     ??_PWM3_Start:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0038                     ??_PWM3_Stop:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0038                     ??_PWM3_LoadBufferSet:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0038                     ?_PWM3_DutyCycleSet:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0038                     ??_PWM2_Start:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0038                     ??_PWM2_Stop:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0038                     ??_PWM2_LoadBufferSet:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0038                     ?_PWM2_DutyCycleSet:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0038                     ?_checkVolume:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0038                     ?_getTimerMS:	
  2555                           ; 2 bytes @ 0x0
  2556                           
  2557  0038                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  2558                           ; 3 bytes @ 0x0
  2559                           
  2560  0038                     TMR1_SetInterruptHandler@InterruptHandler:	
  2561                           ; 2 bytes @ 0x0
  2562                           
  2563  0038                     PWM1_DutyCycleSet@dutyCycleCount:	
  2564                           ; 2 bytes @ 0x0
  2565                           
  2566  0038                     PWM3_DutyCycleSet@dutyCycleCount:	
  2567                           ; 2 bytes @ 0x0
  2568                           
  2569  0038                     PWM2_DutyCycleSet@dutyCycleCount:	
  2570                           ; 2 bytes @ 0x0
  2571                           
  2572  0038                     memset@c:	
  2573                           ; 2 bytes @ 0x0
  2574                           
  2575                           
  2576                           ; 2 bytes @ 0x0
  2577  0038                     	ds	2
  2578  003A                     ??_PIN_MANAGER_Initialize:
  2579  003A                     ??_TMR1_Initialize:	
  2580                           ; 1 bytes @ 0x2
  2581                           
  2582  003A                     ??_IOCAF3_SetInterruptHandler:	
  2583                           ; 1 bytes @ 0x2
  2584                           
  2585  003A                     ??_TMR1_SetInterruptHandler:	
  2586                           ; 1 bytes @ 0x2
  2587                           
  2588  003A                     ?_setLED:	
  2589                           ; 1 bytes @ 0x2
  2590                           
  2591  003A                     ??_SYSTEM_Initialize:	
  2592                           ; 1 bytes @ 0x2
  2593                           
  2594  003A                     ??_checkVolume:	
  2595                           ; 1 bytes @ 0x2
  2596                           
  2597  003A                     ??_PWM1_DutyCycleSet:	
  2598                           ; 1 bytes @ 0x2
  2599                           
  2600  003A                     ??_PWM3_DutyCycleSet:	
  2601                           ; 1 bytes @ 0x2
  2602                           
  2603  003A                     ??_PWM2_DutyCycleSet:	
  2604                           ; 1 bytes @ 0x2
  2605                           
  2606  003A                     setLED@green:	
  2607                           ; 1 bytes @ 0x2
  2608                           
  2609  003A                     memset@n:	
  2610                           ; 1 bytes @ 0x2
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x2
  2614  003A                     	ds	1
  2615  003B                     ?_delay:
  2616  003B                     ??_getTimerMS:	
  2617                           ; 1 bytes @ 0x3
  2618                           
  2619  003B                     setLED@blue:	
  2620                           ; 1 bytes @ 0x3
  2621                           
  2622  003B                     delay@delayMS:	
  2623                           ; 1 bytes @ 0x3
  2624                           
  2625                           
  2626                           ; 3 bytes @ 0x3
  2627  003B                     	ds	1
  2628  003C                     ??_memset:
  2629  003C                     ??_setLED:	
  2630                           ; 1 bytes @ 0x4
  2631                           
  2632                           
  2633                           ; 1 bytes @ 0x4
  2634  003C                     	ds	1
  2635  003D                     memset@p1:
  2636                           
  2637                           ; 1 bytes @ 0x5
  2638  003D                     	ds	1
  2639  003E                     ??_delay:
  2640  003E                     setLED@red:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  003E                     memset@p:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646                           
  2647                           ; 1 bytes @ 0x6
  2648  003E                     	ds	1
  2649  003F                     ??_buttonPressed:
  2650  003F                     ??_resetVolumeLimit:	
  2651                           ; 1 bytes @ 0x7
  2652                           
  2653                           
  2654                           ; 1 bytes @ 0x7
  2655  003F                     	ds	2
  2656  0041                     delay@stop:
  2657                           
  2658                           ; 3 bytes @ 0x9
  2659  0041                     	ds	1
  2660  0042                     buttonPressed@poweringDown:
  2661                           
  2662                           ; 1 bytes @ 0xA
  2663  0042                     	ds	2
  2664  0044                     ??_tickle:
  2665  0044                     ??_flashRev:	
  2666                           ; 1 bytes @ 0xC
  2667                           
  2668                           
  2669                           ; 1 bytes @ 0xC
  2670  0044                     	ds	1
  2671  0045                     flashRev@greenLevel:
  2672  0045                     tickle@blink:	
  2673                           ; 1 bytes @ 0xD
  2674                           
  2675                           
  2676                           ; 2 bytes @ 0xD
  2677  0045                     	ds	1
  2678  0046                     flashRev@r:
  2679                           
  2680                           ; 2 bytes @ 0xE
  2681  0046                     	ds	1
  2682  0047                     tickle@loud:
  2683                           
  2684                           ; 1 bytes @ 0xF
  2685  0047                     	ds	1
  2686  0048                     flashRev@r_1388:
  2687                           
  2688                           ; 2 bytes @ 0x10
  2689  0048                     	ds	2
  2690  004A                     ??_powerUpTest:
  2691  004A                     ??_powerDown:	
  2692                           ; 1 bytes @ 0x12
  2693                           
  2694                           
  2695                           ; 1 bytes @ 0x12
  2696  004A                     	ds	1
  2697  004B                     powerDown@timeout:
  2698                           
  2699                           ; 1 bytes @ 0x13
  2700  004B                     	ds	1
  2701  004C                     powerDown@b:
  2702                           
  2703                           ; 2 bytes @ 0x14
  2704  004C                     	ds	2
  2705  004E                     ??_main:
  2706                           
  2707                           	psect	maintext
  2708  028B                     __pmaintext:	
  2709                           ; 1 bytes @ 0x16
  2710 ;;
  2711 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2712 ;;
  2713 ;; *************** function _main *****************
  2714 ;; Defined at:
  2715 ;;		line 51 in file "main.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;		None
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  volume          1    0        unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : B1F/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2729 ;;      Params:         0       0       0       0
  2730 ;;      Locals:         0       0       0       0
  2731 ;;      Temps:          0       0       0       0
  2732 ;;      Totals:         0       0       0       0
  2733 ;;Total ram usage:        0 bytes
  2734 ;; Hardware stack levels required when called:    9
  2735 ;; This function calls:
  2736 ;;		_IOCAF3_SetInterruptHandler
  2737 ;;		_SYSTEM_Initialize
  2738 ;;		_buttonPressed
  2739 ;;		_checkVolume
  2740 ;;		_clearPresses
  2741 ;;		_delay
  2742 ;;		_powerDown
  2743 ;;		_powerUpTest
  2744 ;;		_resetTimerMS
  2745 ;;		_resetVolumeLimit
  2746 ;;		_tickle
  2747 ;; This function is called by:
  2748 ;;		Startup code after reset
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _main
  2754  028B                     _main:
  2755                           
  2756                           ;main.c: 53: uint8_t volume;;main.c: 56: SYSTEM_Initialize();
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2760  028B  2486               	fcall	_SYSTEM_Initialize
  2761                           
  2762                           ;main.c: 58: IOCAF3_SetInterruptHandler(buttonHandler);
  2763  028C  3016               	movlw	low _buttonHandler
  2764  028D  0020               	movlb	0	; select bank0
  2765  028E  00B8               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  2766  028F  3004               	movlw	high _buttonHandler
  2767  0290  00B9               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  2768  0291  24F9               	fcall	_IOCAF3_SetInterruptHandler
  2769                           
  2770                           ;main.c: 61: (INTCONbits.GIE = 1);
  2771  0292  178B               	bsf	11,7	;volatile
  2772                           
  2773                           ;main.c: 64: (INTCONbits.PEIE = 1);
  2774  0293  170B               	bsf	11,6	;volatile
  2775  0294  0022               	movlb	2	; select bank2
  2776  0295  140C               	bsf	12,0	;volatile
  2777  0296  148C               	bsf	12,1	;volatile
  2778  0297  150C               	bsf	12,2	;volatile
  2779  0298  168C               	bsf	12,5	;volatile
  2780                           
  2781                           ;main.c: 70: resetVolumeLimit();
  2782  0299  23A2               	fcall	_resetVolumeLimit
  2783                           
  2784                           ;main.c: 71: resetTimerMS();
  2785  029A  24C0               	fcall	_resetTimerMS
  2786                           
  2787                           ;main.c: 72: powerUpTest();
  2788  029B  242B               	fcall	_powerUpTest
  2789  029C                     l2583:
  2790                           
  2791                           ;main.c: 75: {;main.c: 77: if (!buttonPressed(1)){
  2792  029C  3001               	movlw	1
  2793  029D  20CB               	fcall	_buttonPressed
  2794  029E  3A00               	xorlw	0
  2795  029F  1D03               	skipz
  2796  02A0  2AB8               	goto	l2605
  2797                           
  2798                           ;main.c: 80: if (shortPress) {
  2799  02A1  0020               	movlb	0	; select bank0
  2800  02A2  0835               	movf	_shortPress,w
  2801  02A3  1903               	btfsc	3,2
  2802  02A4  2AA8               	goto	l2593
  2803                           
  2804                           ;main.c: 81: resetVolumeLimit();
  2805  02A5  23A2               	fcall	_resetVolumeLimit
  2806                           
  2807                           ;main.c: 82: resetTimerMS();
  2808  02A6  24C0               	fcall	_resetTimerMS
  2809                           
  2810                           ;main.c: 83: clearPresses();
  2811  02A7  2517               	fcall	_clearPresses
  2812  02A8                     l2593:
  2813                           
  2814                           ;main.c: 84: };main.c: 87: if (longPress) {
  2815  02A8  0020               	movlb	0	; select bank0
  2816  02A9  0836               	movf	_longPress,w
  2817  02AA  1903               	btfsc	3,2
  2818  02AB  2AB0               	goto	l2601
  2819                           
  2820                           ;main.c: 88: resetVolumeLimit();
  2821  02AC  23A2               	fcall	_resetVolumeLimit
  2822                           
  2823                           ;main.c: 89: clearPresses();
  2824  02AD  2517               	fcall	_clearPresses
  2825                           
  2826                           ;main.c: 90: powerDown(0);
  2827  02AE  3000               	movlw	0
  2828  02AF  214E               	fcall	_powerDown
  2829  02B0                     l2601:
  2830                           
  2831                           ;main.c: 91: };main.c: 99: if (checkVolume() == 2) {
  2832  02B0  236B               	fcall	_checkVolume
  2833  02B1  3002               	movlw	2
  2834  02B2  0020               	movlb	0	; select bank0
  2835  02B3  0638               	xorwf	?_checkVolume,w
  2836  02B4  0439               	iorwf	?_checkVolume+1,w
  2837  02B5  1D03               	btfss	3,2
  2838  02B6  2AB8               	goto	l2605
  2839                           
  2840                           ;main.c: 100: tickle();
  2841  02B7  2229               	fcall	_tickle
  2842  02B8                     l2605:
  2843                           
  2844                           ;main.c: 101: };main.c: 105: };main.c: 106: delay(50);
  2845  02B8  3032               	movlw	50
  2846  02B9  0020               	movlb	0	; select bank0
  2847  02BA  00BB               	movwf	delay@delayMS
  2848  02BB  3000               	movlw	0
  2849  02BC  00BC               	movwf	delay@delayMS+1
  2850  02BD  3000               	movlw	0
  2851  02BE  00BD               	movwf	delay@delayMS+2
  2852  02BF  230E               	fcall	_delay
  2853  02C0  2A9C               	goto	l2583
  2854  02C1                     __end_of_main:
  2855                           
  2856                           	psect	text1
  2857  0229                     __ptext1:	
  2858 ;; *************** function _tickle *****************
  2859 ;; Defined at:
  2860 ;;		line 117 in file "main.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  blink           2   13[BANK0 ] int 
  2865 ;;  loud            1   15[BANK0 ] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2875 ;;      Params:         0       0       0       0
  2876 ;;      Locals:         0       3       0       0
  2877 ;;      Temps:          0       1       0       0
  2878 ;;      Totals:         0       4       0       0
  2879 ;;Total ram usage:        4 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    7
  2882 ;; This function calls:
  2883 ;;		_delay
  2884 ;;		_resetVolumeLimit
  2885 ;;		_setLED
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _tickle
  2893  0229                     _tickle:
  2894                           
  2895                           ;main.c: 119: uint8_t loud = 255;
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _tickle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2899  0229  30FF               	movlw	255
  2900  022A  0020               	movlb	0	; select bank0
  2901  022B  00C4               	movwf	??_tickle
  2902  022C  0844               	movf	??_tickle,w
  2903  022D  00C7               	movwf	tickle@loud
  2904                           
  2905                           ;main.c: 122: setLED(255, 0, 0);
  2906  022E  01BA               	clrf	setLED@green
  2907  022F  01BB               	clrf	setLED@blue
  2908  0230  30FF               	movlw	255
  2909  0231  232E               	fcall	_setLED
  2910                           
  2911                           ;main.c: 123: delay(40);
  2912  0232  3028               	movlw	40
  2913  0233  0020               	movlb	0	; select bank0
  2914  0234  00BB               	movwf	delay@delayMS
  2915  0235  3000               	movlw	0
  2916  0236  00BC               	movwf	delay@delayMS+1
  2917  0237  3000               	movlw	0
  2918  0238  00BD               	movwf	delay@delayMS+2
  2919  0239  230E               	fcall	_delay
  2920                           
  2921                           ;main.c: 124: setLED(0, 0, 255);
  2922  023A  0020               	movlb	0	; select bank0
  2923  023B  01BA               	clrf	setLED@green
  2924  023C  30FF               	movlw	255
  2925  023D  00C4               	movwf	??_tickle
  2926  023E  0844               	movf	??_tickle,w
  2927  023F  00BB               	movwf	setLED@blue
  2928  0240  3000               	movlw	0
  2929  0241  232E               	fcall	_setLED
  2930                           
  2931                           ;main.c: 125: delay(80);
  2932  0242  3050               	movlw	80
  2933  0243  0020               	movlb	0	; select bank0
  2934  0244  00BB               	movwf	delay@delayMS
  2935  0245  3000               	movlw	0
  2936  0246  00BC               	movwf	delay@delayMS+1
  2937  0247  3000               	movlw	0
  2938  0248  00BD               	movwf	delay@delayMS+2
  2939  0249  230E               	fcall	_delay
  2940                           
  2941                           ;main.c: 127: for (int blink=0; blink < 3; blink++) {
  2942  024A  0020               	movlb	0	; select bank0
  2943  024B  01C5               	clrf	tickle@blink
  2944  024C  01C6               	clrf	tickle@blink+1
  2945  024D                     l2527:
  2946                           
  2947                           ;main.c: 128: setLED(loud, 0, 0);
  2948  024D  0020               	movlb	0	; select bank0
  2949  024E  01BA               	clrf	setLED@green
  2950  024F  01BB               	clrf	setLED@blue
  2951  0250  0847               	movf	tickle@loud,w
  2952  0251  232E               	fcall	_setLED
  2953                           
  2954                           ;main.c: 129: delay(20);
  2955  0252  3014               	movlw	20
  2956  0253  0020               	movlb	0	; select bank0
  2957  0254  00BB               	movwf	delay@delayMS
  2958  0255  3000               	movlw	0
  2959  0256  00BC               	movwf	delay@delayMS+1
  2960  0257  3000               	movlw	0
  2961  0258  00BD               	movwf	delay@delayMS+2
  2962  0259  230E               	fcall	_delay
  2963                           
  2964                           ;main.c: 130: setLED( 0, 0, loud);
  2965  025A  0020               	movlb	0	; select bank0
  2966  025B  01BA               	clrf	setLED@green
  2967  025C  0847               	movf	tickle@loud,w
  2968  025D  00C4               	movwf	??_tickle
  2969  025E  0844               	movf	??_tickle,w
  2970  025F  00BB               	movwf	setLED@blue
  2971  0260  3000               	movlw	0
  2972  0261  232E               	fcall	_setLED
  2973                           
  2974                           ;main.c: 131: delay(100);
  2975  0262  3064               	movlw	100
  2976  0263  0020               	movlb	0	; select bank0
  2977  0264  00BB               	movwf	delay@delayMS
  2978  0265  3000               	movlw	0
  2979  0266  00BC               	movwf	delay@delayMS+1
  2980  0267  3000               	movlw	0
  2981  0268  00BD               	movwf	delay@delayMS+2
  2982  0269  230E               	fcall	_delay
  2983                           
  2984                           ;main.c: 132: loud >>= 1;
  2985  026A  1003               	clrc
  2986  026B  0020               	movlb	0	; select bank0
  2987  026C  0CC7               	rrf	tickle@loud,f
  2988  026D  3001               	movlw	1
  2989  026E  07C5               	addwf	tickle@blink,f
  2990  026F  3000               	movlw	0
  2991  0270  3DC6               	addwfc	tickle@blink+1,f
  2992  0271  0846               	movf	tickle@blink+1,w
  2993  0272  3A80               	xorlw	128
  2994  0273  00C4               	movwf	??_tickle
  2995  0274  3080               	movlw	128
  2996  0275  0244               	subwf	??_tickle,w
  2997  0276  1D03               	skipz
  2998  0277  2A7A               	goto	u855
  2999  0278  3003               	movlw	3
  3000  0279  0245               	subwf	tickle@blink,w
  3001  027A                     u855:
  3002  027A  1C03               	skipc
  3003  027B  2A4D               	goto	l2527
  3004                           
  3005                           ;main.c: 133: };main.c: 134: delay(1000);
  3006  027C  30E8               	movlw	232
  3007  027D  0020               	movlb	0	; select bank0
  3008  027E  00BB               	movwf	delay@delayMS
  3009  027F  3003               	movlw	3
  3010  0280  00BC               	movwf	delay@delayMS+1
  3011  0281  3000               	movlw	0
  3012  0282  00BD               	movwf	delay@delayMS+2
  3013  0283  230E               	fcall	_delay
  3014                           
  3015                           ;main.c: 135: setLED( 0, 0, 0);
  3016  0284  0020               	movlb	0	; select bank0
  3017  0285  01BA               	clrf	setLED@green
  3018  0286  01BB               	clrf	setLED@blue
  3019  0287  3000               	movlw	0
  3020  0288  232E               	fcall	_setLED
  3021                           
  3022                           ;main.c: 136: resetVolumeLimit();
  3023  0289  23A2               	fcall	_resetVolumeLimit
  3024  028A  0008               	return
  3025  028B                     __end_of_tickle:
  3026                           
  3027                           	psect	text2
  3028  042B                     __ptext2:	
  3029 ;; *************** function _powerUpTest *****************
  3030 ;; Defined at:
  3031 ;;		line 247 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3045 ;;      Params:         0       0       0       0
  3046 ;;      Locals:         0       0       0       0
  3047 ;;      Temps:          0       0       0       0
  3048 ;;      Totals:         0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    8
  3052 ;; This function calls:
  3053 ;;		_delay
  3054 ;;		_flashRev
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _powerUpTest
  3062  042B                     _powerUpTest:
  3063                           
  3064                           ;main.c: 248: delay(200);
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _powerUpTest: [wreg+status,2+status,0+pclath+cstack]
  3068  042B  30C8               	movlw	200
  3069  042C  0020               	movlb	0	; select bank0
  3070  042D  00BB               	movwf	delay@delayMS
  3071  042E  3000               	movlw	0
  3072  042F  00BC               	movwf	delay@delayMS+1
  3073  0430  3000               	movlw	0
  3074  0431  00BD               	movwf	delay@delayMS+2
  3075  0432  230E               	fcall	_delay
  3076                           
  3077                           ;main.c: 249: flashRev(0);
  3078  0433  3000               	movlw	0
  3079  0434  21C1               	fcall	_flashRev
  3080                           
  3081                           ;main.c: 250: delay(500);
  3082  0435  30F4               	movlw	244
  3083  0436  0020               	movlb	0	; select bank0
  3084  0437  00BB               	movwf	delay@delayMS
  3085  0438  3001               	movlw	1
  3086  0439  00BC               	movwf	delay@delayMS+1
  3087  043A  3000               	movlw	0
  3088  043B  00BD               	movwf	delay@delayMS+2
  3089  043C  230E               	fcall	_delay
  3090  043D  0008               	return
  3091  043E                     __end_of_powerUpTest:
  3092                           
  3093                           	psect	text3
  3094  014E                     __ptext3:	
  3095 ;; *************** function _powerDown *****************
  3096 ;; Defined at:
  3097 ;;		line 257 in file "main.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  timeout         1    wreg     unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  timeout         1   19[BANK0 ] unsigned char 
  3102 ;;  b               2   20[BANK0 ] int 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3112 ;;      Params:         0       0       0       0
  3113 ;;      Locals:         0       3       0       0
  3114 ;;      Temps:          0       1       0       0
  3115 ;;      Totals:         0       4       0       0
  3116 ;;Total ram usage:        4 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    8
  3119 ;; This function calls:
  3120 ;;		_PWM1_Start
  3121 ;;		_PWM1_Stop
  3122 ;;		_PWM2_Start
  3123 ;;		_PWM2_Stop
  3124 ;;		_PWM3_Start
  3125 ;;		_PWM3_Stop
  3126 ;;		_buttonPressed
  3127 ;;		_clearPresses
  3128 ;;		_delay
  3129 ;;		_flashRev
  3130 ;;		_getTimerMS
  3131 ;;		_resetTimerMS
  3132 ;;		_resetVolumeLimit
  3133 ;;		_setLED
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _powerDown
  3141  014E                     _powerDown:
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _powerDown: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3145                           ;powerDown@timeout stored from wreg
  3146  014E  0020               	movlb	0	; select bank0
  3147  014F  00CB               	movwf	powerDown@timeout
  3148                           
  3149                           ;main.c: 259: do { LATAbits.LATA5 = 0; } while(0);
  3150  0150  0022               	movlb	2	; select bank2
  3151  0151  128C               	bcf	12,5	;volatile
  3152                           
  3153                           ;main.c: 260: brightness = 0;
  3154  0152  0020               	movlb	0	; select bank0
  3155  0153  01AF               	clrf	_brightness
  3156                           
  3157                           ;main.c: 263: if (timeout) {
  3158  0154  084B               	movf	powerDown@timeout,w
  3159  0155  1903               	btfsc	3,2
  3160  0156  2971               	goto	l2469
  3161                           
  3162                           ;main.c: 264: for (int b = 32; b >= 0; b-- )
  3163  0157  3020               	movlw	32
  3164  0158  00CC               	movwf	powerDown@b
  3165  0159  3000               	movlw	0
  3166  015A  00CD               	movwf	powerDown@b+1
  3167  015B                     l2463:
  3168                           
  3169                           ;main.c: 265: {;main.c: 266: setLED(0, b, 0);
  3170  015B  084C               	movf	powerDown@b,w
  3171  015C  00CA               	movwf	??_powerDown
  3172  015D  084A               	movf	??_powerDown,w
  3173  015E  00BA               	movwf	setLED@green
  3174  015F  01BB               	clrf	setLED@blue
  3175  0160  3000               	movlw	0
  3176  0161  232E               	fcall	_setLED
  3177                           
  3178                           ;main.c: 267: delay(50);
  3179  0162  3032               	movlw	50
  3180  0163  0020               	movlb	0	; select bank0
  3181  0164  00BB               	movwf	delay@delayMS
  3182  0165  3000               	movlw	0
  3183  0166  00BC               	movwf	delay@delayMS+1
  3184  0167  3000               	movlw	0
  3185  0168  00BD               	movwf	delay@delayMS+2
  3186  0169  230E               	fcall	_delay
  3187  016A  30FF               	movlw	255
  3188  016B  0020               	movlb	0	; select bank0
  3189  016C  07CC               	addwf	powerDown@b,f
  3190  016D  30FF               	movlw	255
  3191  016E  3DCD               	addwfc	powerDown@b+1,f
  3192  016F  1FCD               	btfss	powerDown@b+1,7
  3193  0170  295B               	goto	l2463
  3194  0171                     l2469:
  3195                           
  3196                           ;main.c: 272: setLED(0,0,0);
  3197  0171  01BA               	clrf	setLED@green
  3198  0172  01BB               	clrf	setLED@blue
  3199  0173  3000               	movlw	0
  3200  0174  232E               	fcall	_setLED
  3201                           
  3202                           ;main.c: 273: PWM1_Stop();
  3203  0175  2531               	fcall	_PWM1_Stop
  3204                           
  3205                           ;main.c: 274: PWM2_Stop();
  3206  0176  2529               	fcall	_PWM2_Stop
  3207                           
  3208                           ;main.c: 275: PWM3_Stop();
  3209  0177  2521               	fcall	_PWM3_Stop
  3210                           
  3211                           ;main.c: 277: __nop();
  3212  0178  0000               	nop
  3213  0179  0063               	sleep	;# 
  3214                           
  3215                           ;main.c: 279: __nop();
  3216  017A  0000               	nop
  3217                           
  3218                           ;main.c: 282: PWM1_Start();
  3219  017B  2535               	fcall	_PWM1_Start
  3220                           
  3221                           ;main.c: 283: PWM2_Start();
  3222  017C  252D               	fcall	_PWM2_Start
  3223                           
  3224                           ;main.c: 284: PWM3_Start();
  3225  017D  2525               	fcall	_PWM3_Start
  3226                           
  3227                           ;main.c: 286: delay(100);
  3228  017E  3064               	movlw	100
  3229  017F  0020               	movlb	0	; select bank0
  3230  0180  00BB               	movwf	delay@delayMS
  3231  0181  3000               	movlw	0
  3232  0182  00BC               	movwf	delay@delayMS+1
  3233  0183  3000               	movlw	0
  3234  0184  00BD               	movwf	delay@delayMS+2
  3235  0185  230E               	fcall	_delay
  3236                           
  3237                           ;main.c: 287: clearPresses();
  3238  0186  2517               	fcall	_clearPresses
  3239                           
  3240                           ;main.c: 288: pressTime = getTimerMS();
  3241  0187  24C8               	fcall	_getTimerMS
  3242  0188  0020               	movlb	0	; select bank0
  3243  0189  0838               	movf	?_getTimerMS,w
  3244  018A  00A0               	movwf	_pressTime
  3245  018B  0839               	movf	?_getTimerMS+1,w
  3246  018C  00A1               	movwf	_pressTime+1
  3247  018D  083A               	movf	?_getTimerMS+2,w
  3248  018E  00A2               	movwf	_pressTime+2
  3249  018F                     l748:	
  3250                           ;main.c: 291: while (buttonPressed(0)) {
  3251                           
  3252  018F  3000               	movlw	0
  3253  0190  20CB               	fcall	_buttonPressed
  3254  0191  3A00               	xorlw	0
  3255  0192  1903               	btfsc	3,2
  3256  0193  299D               	goto	l2493
  3257                           
  3258                           ;main.c: 292: delay(50);
  3259  0194  3032               	movlw	50
  3260  0195  0020               	movlb	0	; select bank0
  3261  0196  00BB               	movwf	delay@delayMS
  3262  0197  3000               	movlw	0
  3263  0198  00BC               	movwf	delay@delayMS+1
  3264  0199  3000               	movlw	0
  3265  019A  00BD               	movwf	delay@delayMS+2
  3266  019B  230E               	fcall	_delay
  3267  019C  298F               	goto	l748
  3268  019D                     l2493:
  3269                           
  3270                           ;main.c: 293: };;main.c: 294: setLED(0,0,0);
  3271  019D  0020               	movlb	0	; select bank0
  3272  019E  01BA               	clrf	setLED@green
  3273  019F  01BB               	clrf	setLED@blue
  3274  01A0  3000               	movlw	0
  3275  01A1  232E               	fcall	_setLED
  3276                           
  3277                           ;main.c: 297: if (longPress) {
  3278  01A2  0020               	movlb	0	; select bank0
  3279  01A3  0836               	movf	_longPress,w
  3280  01A4  1903               	btfsc	3,2
  3281  01A5  29A8               	goto	l2501
  3282                           
  3283                           ;main.c: 298: longPress = 0;
  3284  01A6  01B6               	clrf	_longPress
  3285                           
  3286                           ;main.c: 299: break;
  3287  01A7  29B4               	goto	l755
  3288  01A8                     l2501:
  3289                           
  3290                           ;main.c: 301: else {;main.c: 302: delay(200);
  3291  01A8  30C8               	movlw	200
  3292  01A9  00BB               	movwf	delay@delayMS
  3293  01AA  3000               	movlw	0
  3294  01AB  00BC               	movwf	delay@delayMS+1
  3295  01AC  3000               	movlw	0
  3296  01AD  00BD               	movwf	delay@delayMS+2
  3297  01AE  230E               	fcall	_delay
  3298                           
  3299                           ;main.c: 303: flashRev(0);
  3300  01AF  3000               	movlw	0
  3301  01B0  21C1               	fcall	_flashRev
  3302                           
  3303                           ;main.c: 304: shortPress = 0;
  3304  01B1  0020               	movlb	0	; select bank0
  3305  01B2  01B5               	clrf	_shortPress
  3306  01B3  2971               	goto	l2469
  3307  01B4                     l755:	
  3308                           ;main.c: 305: };main.c: 306: };main.c: 309: do { LATAbits.LATA5 = 1; } while(0);
  3309                           
  3310  01B4  0022               	movlb	2	; select bank2
  3311  01B5  168C               	bsf	12,5	;volatile
  3312                           
  3313                           ;main.c: 310: resetVolumeLimit();
  3314  01B6  23A2               	fcall	_resetVolumeLimit
  3315                           
  3316                           ;main.c: 311: delay(250);
  3317  01B7  30FA               	movlw	250
  3318  01B8  0020               	movlb	0	; select bank0
  3319  01B9  00BB               	movwf	delay@delayMS
  3320  01BA  3000               	movlw	0
  3321  01BB  00BC               	movwf	delay@delayMS+1
  3322  01BC  3000               	movlw	0
  3323  01BD  00BD               	movwf	delay@delayMS+2
  3324  01BE  230E               	fcall	_delay
  3325                           
  3326                           ;main.c: 312: resetTimerMS();
  3327  01BF  24C0               	fcall	_resetTimerMS
  3328  01C0  0008               	return
  3329  01C1                     __end_of_powerDown:
  3330                           
  3331                           	psect	text4
  3332  03A2                     __ptext4:	
  3333 ;; *************** function _resetVolumeLimit *****************
  3334 ;; Defined at:
  3335 ;;		line 184 in file "mcc_generated_files/adc1.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3349 ;;      Params:         0       0       0       0
  3350 ;;      Locals:         0       0       0       0
  3351 ;;      Temps:          0       0       0       0
  3352 ;;      Totals:         0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    6
  3356 ;; This function calls:
  3357 ;;		_memset
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;;		_tickle
  3361 ;;		_powerDown
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _resetVolumeLimit
  3367  03A2                     _resetVolumeLimit:
  3368                           
  3369                           ;adc1.c: 186: volume = 0;
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _resetVolumeLimit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3373  03A2  0020               	movlb	0	; select bank0
  3374  03A3  01A8               	clrf	_volume
  3375  03A4  01A9               	clrf	_volume+1
  3376                           
  3377                           ;adc1.c: 187: minLevel = 0xFFFFUL;
  3378  03A5  30FF               	movlw	255
  3379  03A6  00D5               	movwf	_minLevel
  3380  03A7  30FF               	movlw	255
  3381  03A8  00D6               	movwf	_minLevel+1
  3382                           
  3383                           ;adc1.c: 188: maxLevel = 0x0000UL;
  3384  03A9  01A6               	clrf	_maxLevel
  3385  03AA  01A7               	clrf	_maxLevel+1
  3386                           
  3387                           ;adc1.c: 189: sampleNumber = 0;
  3388  03AB  01B7               	clrf	_sampleNumber
  3389                           
  3390                           ;adc1.c: 190: sampleTriggers = 0;
  3391  03AC  01FD               	clrf	_sampleTriggers
  3392                           
  3393                           ;adc1.c: 191: secondIndex = 0;
  3394  03AD  01FC               	clrf	_secondIndex
  3395                           
  3396                           ;adc1.c: 192: totalTriggers = 0;
  3397  03AE  01AC               	clrf	_totalTriggers
  3398  03AF  01AD               	clrf	_totalTriggers+1
  3399                           
  3400                           ;adc1.c: 193: memset(triggersEachInt, 0, sizeof(triggersEachInt));
  3401  03B0  3000               	movlw	0
  3402  03B1  00B8               	movwf	memset@c
  3403  03B2  00B9               	movwf	memset@c+1
  3404  03B3  3028               	movlw	40
  3405  03B4  00BA               	movwf	memset@n
  3406  03B5  3000               	movlw	0
  3407  03B6  00BB               	movwf	memset@n+1
  3408  03B7  30A0               	movlw	(low (_triggersEachInt| 0))& (0+255)
  3409  03B8  2387               	fcall	_memset
  3410  03B9  0008               	return
  3411  03BA                     __end_of_resetVolumeLimit:
  3412                           
  3413                           	psect	text5
  3414  0387                     __ptext5:	
  3415 ;; *************** function _memset *****************
  3416 ;; Defined at:
  3417 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  p1              1    wreg     PTR void 
  3420 ;;		 -> triggersEachInt(40), 
  3421 ;;  c               2    0[BANK0 ] int 
  3422 ;;  n               2    2[BANK0 ] unsigned int 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  p1              1    5[BANK0 ] PTR void 
  3425 ;;		 -> triggersEachInt(40), 
  3426 ;;  p               1    6[BANK0 ] PTR unsigned char 
  3427 ;;		 -> triggersEachInt(40), 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      PTR void 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3437 ;;      Params:         0       4       0       0
  3438 ;;      Locals:         0       2       0       0
  3439 ;;      Temps:          0       1       0       0
  3440 ;;      Totals:         0       7       0       0
  3441 ;;Total ram usage:        7 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    5
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_resetVolumeLimit
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _memset
  3453  0387                     _memset:
  3454                           
  3455                           ;incstack = 0
  3456                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3457                           ;memset@p1 stored from wreg
  3458  0387  0020               	movlb	0	; select bank0
  3459  0388  00BD               	movwf	memset@p1
  3460  0389  083D               	movf	memset@p1,w
  3461  038A  00BC               	movwf	??_memset
  3462  038B  083C               	movf	??_memset,w
  3463  038C  00BE               	movwf	memset@p
  3464  038D                     l2099:
  3465  038D  3001               	movlw	1
  3466  038E  02BA               	subwf	memset@n,f
  3467  038F  3000               	movlw	0
  3468  0390  3BBB               	subwfb	memset@n+1,f
  3469  0391  0A3A               	incf	memset@n,w
  3470  0392  1903               	btfsc	3,2
  3471  0393  0A3B               	incf	memset@n+1,w
  3472  0394  1903               	btfsc	3,2
  3473  0395  0008               	return
  3474  0396  0838               	movf	memset@c,w
  3475  0397  00BC               	movwf	??_memset
  3476  0398  083E               	movf	memset@p,w
  3477  0399  0086               	movwf	6
  3478  039A  0187               	clrf	7
  3479  039B  083C               	movf	??_memset,w
  3480  039C  0081               	movwf	1
  3481  039D  3001               	movlw	1
  3482  039E  00BC               	movwf	??_memset
  3483  039F  083C               	movf	??_memset,w
  3484  03A0  07BE               	addwf	memset@p,f
  3485  03A1  2B8D               	goto	l2099
  3486  03A2                     __end_of_memset:
  3487                           
  3488                           	psect	text6
  3489  04C0                     __ptext6:	
  3490 ;; *************** function _resetTimerMS *****************
  3491 ;; Defined at:
  3492 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3506 ;;      Params:         0       0       0       0
  3507 ;;      Locals:         0       0       0       0
  3508 ;;      Temps:          0       0       0       0
  3509 ;;      Totals:         0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    5
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;;		_powerDown
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _resetTimerMS
  3523  04C0                     _resetTimerMS:
  3524                           
  3525                           ;tmr1.c: 192: timerMS = 10000UL;
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _resetTimerMS: [wreg]
  3529  04C0  3010               	movlw	16
  3530  04C1  0020               	movlb	0	; select bank0
  3531  04C2  00A3               	movwf	_timerMS
  3532  04C3  3027               	movlw	39
  3533  04C4  00A4               	movwf	_timerMS+1
  3534  04C5  3000               	movlw	0
  3535  04C6  00A5               	movwf	_timerMS+2
  3536  04C7  0008               	return
  3537  04C8                     __end_of_resetTimerMS:
  3538                           
  3539                           	psect	text7
  3540  01C1                     __ptext7:	
  3541 ;; *************** function _flashRev *****************
  3542 ;; Defined at:
  3543 ;;		line 315 in file "main.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  greenLevel      1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  greenLevel      1   13[BANK0 ] unsigned char 
  3548 ;;  r               2   16[BANK0 ] int 
  3549 ;;  r               2   14[BANK0 ] int 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0, pclath, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3559 ;;      Params:         0       0       0       0
  3560 ;;      Locals:         0       5       0       0
  3561 ;;      Temps:          0       1       0       0
  3562 ;;      Totals:         0       6       0       0
  3563 ;;Total ram usage:        6 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    7
  3566 ;; This function calls:
  3567 ;;		_delay
  3568 ;;		_setLED
  3569 ;; This function is called by:
  3570 ;;		_powerUpTest
  3571 ;;		_powerDown
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _flashRev
  3577  01C1                     _flashRev:
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _flashRev: [wreg+status,2+status,0+pclath+cstack]
  3581                           ;flashRev@greenLevel stored from wreg
  3582  01C1  0020               	movlb	0	; select bank0
  3583  01C2  00C5               	movwf	flashRev@greenLevel
  3584                           
  3585                           ;main.c: 318: for (int r=0; r < 1; r++) {
  3586  01C3  01C6               	clrf	flashRev@r
  3587  01C4  01C7               	clrf	flashRev@r+1
  3588  01C5                     l2393:
  3589                           
  3590                           ;main.c: 319: setLED(0, 64, 0);
  3591  01C5  3040               	movlw	64
  3592  01C6  0020               	movlb	0	; select bank0
  3593  01C7  00C4               	movwf	??_flashRev
  3594  01C8  0844               	movf	??_flashRev,w
  3595  01C9  00BA               	movwf	setLED@green
  3596  01CA  01BB               	clrf	setLED@blue
  3597  01CB  3000               	movlw	0
  3598  01CC  232E               	fcall	_setLED
  3599                           
  3600                           ;main.c: 321: delay(200);
  3601  01CD  30C8               	movlw	200
  3602  01CE  0020               	movlb	0	; select bank0
  3603  01CF  00BB               	movwf	delay@delayMS
  3604  01D0  3000               	movlw	0
  3605  01D1  00BC               	movwf	delay@delayMS+1
  3606  01D2  3000               	movlw	0
  3607  01D3  00BD               	movwf	delay@delayMS+2
  3608  01D4  230E               	fcall	_delay
  3609                           
  3610                           ;main.c: 322: setLED(0, greenLevel, 0);
  3611  01D5  0020               	movlb	0	; select bank0
  3612  01D6  0845               	movf	flashRev@greenLevel,w
  3613  01D7  00C4               	movwf	??_flashRev
  3614  01D8  0844               	movf	??_flashRev,w
  3615  01D9  00BA               	movwf	setLED@green
  3616  01DA  01BB               	clrf	setLED@blue
  3617  01DB  3000               	movlw	0
  3618  01DC  232E               	fcall	_setLED
  3619                           
  3620                           ;main.c: 323: delay(300);
  3621  01DD  302C               	movlw	44
  3622  01DE  0020               	movlb	0	; select bank0
  3623  01DF  00BB               	movwf	delay@delayMS
  3624  01E0  3001               	movlw	1
  3625  01E1  00BC               	movwf	delay@delayMS+1
  3626  01E2  3000               	movlw	0
  3627  01E3  00BD               	movwf	delay@delayMS+2
  3628  01E4  230E               	fcall	_delay
  3629  01E5  3001               	movlw	1
  3630  01E6  0020               	movlb	0	; select bank0
  3631  01E7  07C6               	addwf	flashRev@r,f
  3632  01E8  3000               	movlw	0
  3633  01E9  3DC7               	addwfc	flashRev@r+1,f
  3634  01EA  0847               	movf	flashRev@r+1,w
  3635  01EB  3A80               	xorlw	128
  3636  01EC  00C4               	movwf	??_flashRev
  3637  01ED  3080               	movlw	128
  3638  01EE  0244               	subwf	??_flashRev,w
  3639  01EF  1D03               	skipz
  3640  01F0  29F3               	goto	u755
  3641  01F1  3001               	movlw	1
  3642  01F2  0246               	subwf	flashRev@r,w
  3643  01F3                     u755:
  3644  01F3  1C03               	skipc
  3645  01F4  29C5               	goto	l2393
  3646                           
  3647                           ;main.c: 324: };main.c: 326: for (int r=0; r < 1; r++) {
  3648  01F5  0020               	movlb	0	; select bank0
  3649  01F6  01C8               	clrf	flashRev@r_1388
  3650  01F7  01C9               	clrf	flashRev@r_1388+1
  3651  01F8                     l2405:
  3652                           
  3653                           ;main.c: 327: setLED(0, 0, 64);
  3654  01F8  0020               	movlb	0	; select bank0
  3655  01F9  01BA               	clrf	setLED@green
  3656  01FA  3040               	movlw	64
  3657  01FB  00C4               	movwf	??_flashRev
  3658  01FC  0844               	movf	??_flashRev,w
  3659  01FD  00BB               	movwf	setLED@blue
  3660  01FE  3000               	movlw	0
  3661  01FF  232E               	fcall	_setLED
  3662                           
  3663                           ;main.c: 329: delay(50);
  3664  0200  3032               	movlw	50
  3665  0201  0020               	movlb	0	; select bank0
  3666  0202  00BB               	movwf	delay@delayMS
  3667  0203  3000               	movlw	0
  3668  0204  00BC               	movwf	delay@delayMS+1
  3669  0205  3000               	movlw	0
  3670  0206  00BD               	movwf	delay@delayMS+2
  3671  0207  230E               	fcall	_delay
  3672                           
  3673                           ;main.c: 330: setLED(0, greenLevel, 0);
  3674  0208  0020               	movlb	0	; select bank0
  3675  0209  0845               	movf	flashRev@greenLevel,w
  3676  020A  00C4               	movwf	??_flashRev
  3677  020B  0844               	movf	??_flashRev,w
  3678  020C  00BA               	movwf	setLED@green
  3679  020D  01BB               	clrf	setLED@blue
  3680  020E  3000               	movlw	0
  3681  020F  232E               	fcall	_setLED
  3682                           
  3683                           ;main.c: 331: delay(100);
  3684  0210  3064               	movlw	100
  3685  0211  0020               	movlb	0	; select bank0
  3686  0212  00BB               	movwf	delay@delayMS
  3687  0213  3000               	movlw	0
  3688  0214  00BC               	movwf	delay@delayMS+1
  3689  0215  3000               	movlw	0
  3690  0216  00BD               	movwf	delay@delayMS+2
  3691  0217  230E               	fcall	_delay
  3692  0218  3001               	movlw	1
  3693  0219  0020               	movlb	0	; select bank0
  3694  021A  07C8               	addwf	flashRev@r_1388,f
  3695  021B  3000               	movlw	0
  3696  021C  3DC9               	addwfc	flashRev@r_1388+1,f
  3697  021D  0849               	movf	flashRev@r_1388+1,w
  3698  021E  3A80               	xorlw	128
  3699  021F  00C4               	movwf	??_flashRev
  3700  0220  3080               	movlw	128
  3701  0221  0244               	subwf	??_flashRev,w
  3702  0222  1D03               	skipz
  3703  0223  2A26               	goto	u765
  3704  0224  3001               	movlw	1
  3705  0225  0248               	subwf	flashRev@r_1388,w
  3706  0226                     u765:
  3707  0226  1803               	btfsc	3,0
  3708  0227  0008               	return
  3709  0228  29F8               	goto	l2405
  3710  0229                     __end_of_flashRev:
  3711                           
  3712                           	psect	text8
  3713  030E                     __ptext8:	
  3714 ;; *************** function _delay *****************
  3715 ;; Defined at:
  3716 ;;		line 155 in file "main.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  delayMS         3    3[BANK0 ] unsigned um
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  stop            3    9[BANK0 ] unsigned um
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, pclath, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3730 ;;      Params:         0       3       0       0
  3731 ;;      Locals:         0       3       0       0
  3732 ;;      Temps:          0       3       0       0
  3733 ;;      Totals:         0       9       0       0
  3734 ;;Total ram usage:        9 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    6
  3737 ;; This function calls:
  3738 ;;		_getTimerMS
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;;		_tickle
  3742 ;;		_powerUpTest
  3743 ;;		_powerDown
  3744 ;;		_flashRev
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _delay
  3750  030E                     _delay:
  3751                           
  3752                           ;main.c: 157: uint24_t stop = getTimerMS() + delayMS;
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _delay: [wreg+pclath+cstack]
  3756  030E  24C8               	fcall	_getTimerMS
  3757  030F  0020               	movlb	0	; select bank0
  3758  0310  0838               	movf	?_getTimerMS,w
  3759  0311  073B               	addwf	delay@delayMS,w
  3760  0312  00BE               	movwf	??_delay
  3761  0313  0839               	movf	?_getTimerMS+1,w
  3762  0314  3D3C               	addwfc	delay@delayMS+1,w
  3763  0315  00BF               	movwf	??_delay+1
  3764  0316  083A               	movf	?_getTimerMS+2,w
  3765  0317  3D3D               	addwfc	delay@delayMS+2,w
  3766  0318  00C0               	movwf	??_delay+2
  3767  0319  083E               	movf	??_delay,w
  3768  031A  00C1               	movwf	delay@stop
  3769  031B  083F               	movf	??_delay+1,w
  3770  031C  00C2               	movwf	delay@stop+1
  3771  031D  0840               	movf	??_delay+2,w
  3772  031E  00C3               	movwf	delay@stop+2
  3773  031F                     l2111:	
  3774                           ;main.c: 159: while (getTimerMS() < stop) ;
  3775                           
  3776  031F  24C8               	fcall	_getTimerMS
  3777  0320  0020               	movlb	0	; select bank0
  3778  0321  0843               	movf	delay@stop+2,w
  3779  0322  023A               	subwf	?_getTimerMS+2,w
  3780  0323  1D03               	skipz
  3781  0324  2B2B               	goto	u515
  3782  0325  0842               	movf	delay@stop+1,w
  3783  0326  0239               	subwf	?_getTimerMS+1,w
  3784  0327  1D03               	skipz
  3785  0328  2B2B               	goto	u515
  3786  0329  0841               	movf	delay@stop,w
  3787  032A  0238               	subwf	?_getTimerMS,w
  3788  032B                     u515:
  3789  032B  1803               	btfsc	3,0
  3790  032C  0008               	return
  3791  032D  2B1F               	goto	l2111
  3792  032E                     __end_of_delay:
  3793                           
  3794                           	psect	text9
  3795  0517                     __ptext9:	
  3796 ;; *************** function _clearPresses *****************
  3797 ;; Defined at:
  3798 ;;		line 241 in file "main.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		status,2
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3812 ;;      Params:         0       0       0       0
  3813 ;;      Locals:         0       0       0       0
  3814 ;;      Temps:          0       0       0       0
  3815 ;;      Totals:         0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    5
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_main
  3823 ;;		_powerDown
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _clearPresses
  3829  0517                     _clearPresses:
  3830                           
  3831                           ;main.c: 242: shortPress = 0;
  3832                           
  3833                           ;incstack = 0
  3834                           ; Regs used in _clearPresses: [status,2]
  3835  0517  0020               	movlb	0	; select bank0
  3836  0518  01B5               	clrf	_shortPress
  3837                           
  3838                           ;main.c: 243: longPress = 0;
  3839  0519  01B6               	clrf	_longPress
  3840                           
  3841                           ;main.c: 244: changePress = 0;
  3842  051A  01B4               	clrf	_changePress
  3843  051B  0008               	return
  3844  051C                     __end_of_clearPresses:
  3845                           
  3846                           	psect	text10
  3847  00CB                     __ptext10:	
  3848 ;; *************** function _buttonPressed *****************
  3849 ;; Defined at:
  3850 ;;		line 202 in file "main.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  poweringDown    1    wreg     unsigned char 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  poweringDown    1   10[BANK0 ] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      unsigned char 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3864 ;;      Params:         0       0       0       0
  3865 ;;      Locals:         0       1       0       0
  3866 ;;      Temps:          0       3       0       0
  3867 ;;      Totals:         0       4       0       0
  3868 ;;Total ram usage:        4 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    7
  3871 ;; This function calls:
  3872 ;;		_getTimerMS
  3873 ;;		_setLED
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;;		_powerDown
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _buttonPressed
  3882  00CB                     _buttonPressed:
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _buttonPressed: [wreg+status,2+status,0+pclath+cstack]
  3886                           ;buttonPressed@poweringDown stored from wreg
  3887  00CB  0020               	movlb	0	; select bank0
  3888  00CC  00C2               	movwf	buttonPressed@poweringDown
  3889                           
  3890                           ;main.c: 204: if (PORTAbits.RA3 == 0) {
  3891  00CD  198C               	btfsc	12,3	;volatile
  3892  00CE  294C               	goto	l2381
  3893                           
  3894                           ;main.c: 205: if ((getTimerMS() - pressTime) > 5000) {
  3895  00CF  24C8               	fcall	_getTimerMS
  3896  00D0  0020               	movlb	0	; select bank0
  3897  00D1  0820               	movf	_pressTime,w
  3898  00D2  0238               	subwf	?_getTimerMS,w
  3899  00D3  00BF               	movwf	??_buttonPressed
  3900  00D4  0839               	movf	?_getTimerMS+1,w
  3901  00D5  00C0               	movwf	??_buttonPressed+1
  3902  00D6  0821               	movf	_pressTime+1,w
  3903  00D7  1C03               	skipc
  3904  00D8  0F21               	incfsz	_pressTime+1,w
  3905  00D9  28DB               	goto	u671
  3906  00DA  28DC               	goto	u672
  3907  00DB                     u671:
  3908  00DB  02C0               	subwf	??_buttonPressed+1,f
  3909  00DC                     u672:
  3910  00DC  083A               	movf	?_getTimerMS+2,w
  3911  00DD  00C1               	movwf	??_buttonPressed+2
  3912  00DE  0822               	movf	_pressTime+2,w
  3913  00DF  1C03               	skipc
  3914  00E0  0F22               	incfsz	_pressTime+2,w
  3915  00E1  28E3               	goto	u673
  3916  00E2  28E4               	goto	u674
  3917  00E3                     u673:
  3918  00E3  02C1               	subwf	??_buttonPressed+2,f
  3919  00E4                     u674:
  3920  00E4  3000               	movlw	0
  3921  00E5  0241               	subwf	??_buttonPressed+2,w
  3922  00E6  1D03               	skipz
  3923  00E7  28EE               	goto	u685
  3924  00E8  3013               	movlw	19
  3925  00E9  0240               	subwf	??_buttonPressed+1,w
  3926  00EA  1D03               	skipz
  3927  00EB  28EE               	goto	u685
  3928  00EC  3089               	movlw	137
  3929  00ED  023F               	subwf	??_buttonPressed,w
  3930  00EE                     u685:
  3931  00EE  1C03               	skipc
  3932  00EF  28F9               	goto	l2345
  3933                           
  3934                           ;main.c: 206: changePress = 1;
  3935  00F0  01B4               	clrf	_changePress
  3936  00F1  0AB4               	incf	_changePress,f
  3937                           
  3938                           ;main.c: 207: longPress = 0;
  3939  00F2  01B6               	clrf	_longPress
  3940                           
  3941                           ;main.c: 208: shortPress = 0;
  3942  00F3  01B5               	clrf	_shortPress
  3943                           
  3944                           ;main.c: 209: setLED(0,0,0);
  3945  00F4  01BA               	clrf	setLED@green
  3946  00F5  01BB               	clrf	setLED@blue
  3947  00F6  3000               	movlw	0
  3948  00F7  232E               	fcall	_setLED
  3949                           
  3950                           ;main.c: 210: }
  3951  00F8  294A               	goto	l2375
  3952  00F9                     l2345:
  3953                           
  3954                           ;main.c: 211: else if ((getTimerMS() - pressTime) > 1000) {
  3955  00F9  24C8               	fcall	_getTimerMS
  3956  00FA  0020               	movlb	0	; select bank0
  3957  00FB  0820               	movf	_pressTime,w
  3958  00FC  0238               	subwf	?_getTimerMS,w
  3959  00FD  00BF               	movwf	??_buttonPressed
  3960  00FE  0839               	movf	?_getTimerMS+1,w
  3961  00FF  00C0               	movwf	??_buttonPressed+1
  3962  0100  0821               	movf	_pressTime+1,w
  3963  0101  1C03               	skipc
  3964  0102  0F21               	incfsz	_pressTime+1,w
  3965  0103  2905               	goto	u691
  3966  0104  2906               	goto	u692
  3967  0105                     u691:
  3968  0105  02C0               	subwf	??_buttonPressed+1,f
  3969  0106                     u692:
  3970  0106  083A               	movf	?_getTimerMS+2,w
  3971  0107  00C1               	movwf	??_buttonPressed+2
  3972  0108  0822               	movf	_pressTime+2,w
  3973  0109  1C03               	skipc
  3974  010A  0F22               	incfsz	_pressTime+2,w
  3975  010B  290D               	goto	u693
  3976  010C  290E               	goto	u694
  3977  010D                     u693:
  3978  010D  02C1               	subwf	??_buttonPressed+2,f
  3979  010E                     u694:
  3980  010E  3000               	movlw	0
  3981  010F  0241               	subwf	??_buttonPressed+2,w
  3982  0110  1D03               	skipz
  3983  0111  2918               	goto	u705
  3984  0112  3003               	movlw	3
  3985  0113  0240               	subwf	??_buttonPressed+1,w
  3986  0114  1D03               	skipz
  3987  0115  2918               	goto	u705
  3988  0116  30E9               	movlw	233
  3989  0117  023F               	subwf	??_buttonPressed,w
  3990  0118                     u705:
  3991  0118  1C03               	skipc
  3992  0119  2937               	goto	l2365
  3993                           
  3994                           ;main.c: 212: if (poweringDown) {
  3995  011A  0842               	movf	buttonPressed@poweringDown,w
  3996  011B  1903               	btfsc	3,2
  3997  011C  2923               	goto	l2355
  3998                           
  3999                           ;main.c: 213: if (brightness > 0)
  4000  011D  082F               	movf	_brightness,w
  4001  011E  1903               	btfsc	3,2
  4002  011F  292B               	goto	l2359
  4003                           
  4004                           ;main.c: 214: brightness--;
  4005  0120  3001               	movlw	1
  4006  0121  02AF               	subwf	_brightness,f
  4007  0122  292B               	goto	l2359
  4008  0123                     l2355:	
  4009                           ;main.c: 216: }
  4010                           
  4011                           ;main.c: 215: setLED(0,brightness,0);
  4012                           
  4013                           
  4014                           ;main.c: 217: else {;main.c: 218: if (brightness < 24)
  4015  0123  3018               	movlw	24
  4016  0124  022F               	subwf	_brightness,w
  4017  0125  1803               	skipnc
  4018  0126  292B               	goto	l2359
  4019                           
  4020                           ;main.c: 219: brightness++;
  4021  0127  3001               	movlw	1
  4022  0128  00BF               	movwf	??_buttonPressed
  4023  0129  083F               	movf	??_buttonPressed,w
  4024  012A  07AF               	addwf	_brightness,f
  4025  012B                     l2359:
  4026                           
  4027                           ;main.c: 220: setLED(0,brightness,0);
  4028  012B  082F               	movf	_brightness,w
  4029  012C  00BF               	movwf	??_buttonPressed
  4030  012D  083F               	movf	??_buttonPressed,w
  4031  012E  00BA               	movwf	setLED@green
  4032  012F  01BB               	clrf	setLED@blue
  4033  0130  3000               	movlw	0
  4034  0131  232E               	fcall	_setLED
  4035                           
  4036                           ;main.c: 221: };main.c: 222: longPress = 1;
  4037  0132  0020               	movlb	0	; select bank0
  4038  0133  01B6               	clrf	_longPress
  4039  0134  0AB6               	incf	_longPress,f
  4040                           
  4041                           ;main.c: 223: shortPress = 0;
  4042  0135  01B5               	clrf	_shortPress
  4043                           
  4044                           ;main.c: 224: }
  4045  0136  294A               	goto	l2375
  4046  0137                     l2365:
  4047                           
  4048                           ;main.c: 225: else {;main.c: 226: if (poweringDown)
  4049  0137  0842               	movf	buttonPressed@poweringDown,w
  4050  0138  1903               	btfsc	3,2
  4051  0139  293F               	goto	l2369
  4052                           
  4053                           ;main.c: 227: brightness = 24 ;
  4054  013A  3018               	movlw	24
  4055  013B  00BF               	movwf	??_buttonPressed
  4056  013C  083F               	movf	??_buttonPressed,w
  4057  013D  00AF               	movwf	_brightness
  4058  013E  2940               	goto	l2371
  4059  013F                     l2369:
  4060                           
  4061                           ;main.c: 228: else;main.c: 229: brightness = 0 ;
  4062  013F  01AF               	clrf	_brightness
  4063  0140                     l2371:
  4064                           
  4065                           ;main.c: 231: setLED(0,brightness,0);
  4066  0140  082F               	movf	_brightness,w
  4067  0141  00BF               	movwf	??_buttonPressed
  4068  0142  083F               	movf	??_buttonPressed,w
  4069  0143  00BA               	movwf	setLED@green
  4070  0144  01BB               	clrf	setLED@blue
  4071  0145  3000               	movlw	0
  4072  0146  232E               	fcall	_setLED
  4073                           
  4074                           ;main.c: 232: shortPress = 1;
  4075  0147  0020               	movlb	0	; select bank0
  4076  0148  01B5               	clrf	_shortPress
  4077  0149  0AB5               	incf	_shortPress,f
  4078  014A                     l2375:
  4079                           
  4080                           ;main.c: 233: };main.c: 234: return 1;
  4081  014A  3001               	movlw	1
  4082  014B  0008               	return
  4083  014C                     l2381:
  4084                           
  4085                           ;main.c: 236: else {;main.c: 237: return 0;
  4086  014C  3000               	movlw	0
  4087  014D  0008               	return
  4088  014E                     __end_of_buttonPressed:
  4089                           
  4090                           	psect	text11
  4091  032E                     __ptext11:	
  4092 ;; *************** function _setLED *****************
  4093 ;; Defined at:
  4094 ;;		line 180 in file "main.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  red             1    wreg     unsigned char 
  4097 ;;  green           1    2[BANK0 ] unsigned char 
  4098 ;;  blue            1    3[BANK0 ] unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  red             1    6[BANK0 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4110 ;;      Params:         0       2       0       0
  4111 ;;      Locals:         0       1       0       0
  4112 ;;      Temps:          0       2       0       0
  4113 ;;      Totals:         0       5       0       0
  4114 ;;Total ram usage:        5 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    6
  4117 ;; This function calls:
  4118 ;;		_PWM1_DutyCycleSet
  4119 ;;		_PWM1_LoadBufferSet
  4120 ;;		_PWM2_DutyCycleSet
  4121 ;;		_PWM2_LoadBufferSet
  4122 ;;		_PWM3_DutyCycleSet
  4123 ;;		_PWM3_LoadBufferSet
  4124 ;; This function is called by:
  4125 ;;		_tickle
  4126 ;;		_buttonPressed
  4127 ;;		_powerDown
  4128 ;;		_flashRev
  4129 ;;		_setFlag
  4130 ;;		_showVolume
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _setLED
  4136  032E                     _setLED:
  4137                           
  4138                           ;incstack = 0
  4139                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  4140                           ;setLED@red stored from wreg
  4141  032E  0020               	movlb	0	; select bank0
  4142  032F  00BE               	movwf	setLED@red
  4143                           
  4144                           ;main.c: 182: PWM1_DutyCycleSet(green);
  4145  0330  083A               	movf	setLED@green,w
  4146  0331  00BC               	movwf	??_setLED
  4147  0332  01BD               	clrf	??_setLED+1
  4148  0333  083C               	movf	??_setLED,w
  4149  0334  00B8               	movwf	PWM1_DutyCycleSet@dutyCycleCount
  4150  0335  083D               	movf	??_setLED+1,w
  4151  0336  00B9               	movwf	PWM1_DutyCycleSet@dutyCycleCount+1
  4152  0337  24AE               	fcall	_PWM1_DutyCycleSet
  4153                           
  4154                           ;main.c: 183: PWM2_DutyCycleSet(blue);
  4155  0338  0020               	movlb	0	; select bank0
  4156  0339  083B               	movf	setLED@blue,w
  4157  033A  00BC               	movwf	??_setLED
  4158  033B  01BD               	clrf	??_setLED+1
  4159  033C  083C               	movf	??_setLED,w
  4160  033D  00B8               	movwf	PWM2_DutyCycleSet@dutyCycleCount
  4161  033E  083D               	movf	??_setLED+1,w
  4162  033F  00B9               	movwf	PWM2_DutyCycleSet@dutyCycleCount+1
  4163  0340  24A5               	fcall	_PWM2_DutyCycleSet
  4164                           
  4165                           ;main.c: 184: PWM3_DutyCycleSet(red);
  4166  0341  0020               	movlb	0	; select bank0
  4167  0342  083E               	movf	setLED@red,w
  4168  0343  00BC               	movwf	??_setLED
  4169  0344  01BD               	clrf	??_setLED+1
  4170  0345  083C               	movf	??_setLED,w
  4171  0346  00B8               	movwf	PWM3_DutyCycleSet@dutyCycleCount
  4172  0347  083D               	movf	??_setLED+1,w
  4173  0348  00B9               	movwf	PWM3_DutyCycleSet@dutyCycleCount+1
  4174  0349  249C               	fcall	_PWM3_DutyCycleSet
  4175                           
  4176                           ;main.c: 186: PWM1_LoadBufferSet();
  4177  034A  2546               	fcall	_PWM1_LoadBufferSet
  4178                           
  4179                           ;main.c: 187: PWM2_LoadBufferSet();
  4180  034B  2543               	fcall	_PWM2_LoadBufferSet
  4181                           
  4182                           ;main.c: 188: PWM3_LoadBufferSet();
  4183  034C  2540               	fcall	_PWM3_LoadBufferSet
  4184  034D  0008               	return
  4185  034E                     __end_of_setLED:
  4186                           
  4187                           	psect	text12
  4188  0540                     __ptext12:	
  4189 ;; *************** function _PWM3_LoadBufferSet *****************
  4190 ;; Defined at:
  4191 ;;		line 130 in file "mcc_generated_files/pwm3.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		None
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4205 ;;      Params:         0       0       0       0
  4206 ;;      Locals:         0       0       0       0
  4207 ;;      Temps:          0       0       0       0
  4208 ;;      Totals:         0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    5
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_setLED
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _PWM3_LoadBufferSet
  4221  0540                     _PWM3_LoadBufferSet:
  4222                           
  4223                           ;pwm3.c: 132: PWM3LDCONbits.LDA = 1;
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _PWM3_LoadBufferSet: []
  4227  0540  003B               	movlb	27	; select bank27
  4228  0541  17BF               	bsf	63,7	;volatile
  4229  0542  0008               	return
  4230  0543                     __end_of_PWM3_LoadBufferSet:
  4231                           
  4232                           	psect	text13
  4233  049C                     __ptext13:	
  4234 ;; *************** function _PWM3_DutyCycleSet *****************
  4235 ;; Defined at:
  4236 ;;		line 141 in file "mcc_generated_files/pwm3.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  dutyCycleCou    2    0[BANK0 ] unsigned int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4250 ;;      Params:         0       2       0       0
  4251 ;;      Locals:         0       0       0       0
  4252 ;;      Temps:          0       0       0       0
  4253 ;;      Totals:         0       2       0       0
  4254 ;;Total ram usage:        2 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    5
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_setLED
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function _PWM3_DutyCycleSet
  4266  049C                     _PWM3_DutyCycleSet:
  4267                           
  4268                           ;pwm3.c: 143: PWM3DCH = (dutyCycleCount>>8);
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _PWM3_DutyCycleSet: [wreg+status,2]
  4272  049C  0020               	movlb	0	; select bank0
  4273  049D  0839               	movf	PWM3_DutyCycleSet@dutyCycleCount+1,w
  4274  049E  003B               	movlb	27	; select bank27
  4275  049F  00B4               	movwf	52	;volatile
  4276                           
  4277                           ;pwm3.c: 144: PWM3DCL = (dutyCycleCount);
  4278  04A0  0020               	movlb	0	; select bank0
  4279  04A1  0838               	movf	PWM3_DutyCycleSet@dutyCycleCount,w
  4280  04A2  003B               	movlb	27	; select bank27
  4281  04A3  00B3               	movwf	51	;volatile
  4282  04A4  0008               	return
  4283  04A5                     __end_of_PWM3_DutyCycleSet:
  4284                           
  4285                           	psect	text14
  4286  0543                     __ptext14:	
  4287 ;; *************** function _PWM2_LoadBufferSet *****************
  4288 ;; Defined at:
  4289 ;;		line 130 in file "mcc_generated_files/pwm2.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		None
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4303 ;;      Params:         0       0       0       0
  4304 ;;      Locals:         0       0       0       0
  4305 ;;      Temps:          0       0       0       0
  4306 ;;      Totals:         0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_setLED
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function _PWM2_LoadBufferSet
  4319  0543                     _PWM2_LoadBufferSet:
  4320                           
  4321                           ;pwm2.c: 132: PWM2LDCONbits.LDA = 1;
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _PWM2_LoadBufferSet: []
  4325  0543  003B               	movlb	27	; select bank27
  4326  0544  17AF               	bsf	47,7	;volatile
  4327  0545  0008               	return
  4328  0546                     __end_of_PWM2_LoadBufferSet:
  4329                           
  4330                           	psect	text15
  4331  04A5                     __ptext15:	
  4332 ;; *************** function _PWM2_DutyCycleSet *****************
  4333 ;; Defined at:
  4334 ;;		line 141 in file "mcc_generated_files/pwm2.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  dutyCycleCou    2    0[BANK0 ] unsigned int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4348 ;;      Params:         0       2       0       0
  4349 ;;      Locals:         0       0       0       0
  4350 ;;      Temps:          0       0       0       0
  4351 ;;      Totals:         0       2       0       0
  4352 ;;Total ram usage:        2 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    5
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_setLED
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _PWM2_DutyCycleSet
  4364  04A5                     _PWM2_DutyCycleSet:
  4365                           
  4366                           ;pwm2.c: 143: PWM2DCH = (dutyCycleCount>>8);
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in _PWM2_DutyCycleSet: [wreg+status,2]
  4370  04A5  0020               	movlb	0	; select bank0
  4371  04A6  0839               	movf	PWM2_DutyCycleSet@dutyCycleCount+1,w
  4372  04A7  003B               	movlb	27	; select bank27
  4373  04A8  00A4               	movwf	36	;volatile
  4374                           
  4375                           ;pwm2.c: 144: PWM2DCL = (dutyCycleCount);
  4376  04A9  0020               	movlb	0	; select bank0
  4377  04AA  0838               	movf	PWM2_DutyCycleSet@dutyCycleCount,w
  4378  04AB  003B               	movlb	27	; select bank27
  4379  04AC  00A3               	movwf	35	;volatile
  4380  04AD  0008               	return
  4381  04AE                     __end_of_PWM2_DutyCycleSet:
  4382                           
  4383                           	psect	text16
  4384  0546                     __ptext16:	
  4385 ;; *************** function _PWM1_LoadBufferSet *****************
  4386 ;; Defined at:
  4387 ;;		line 130 in file "mcc_generated_files/pwm1.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		None
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4401 ;;      Params:         0       0       0       0
  4402 ;;      Locals:         0       0       0       0
  4403 ;;      Temps:          0       0       0       0
  4404 ;;      Totals:         0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    5
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_setLED
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function _PWM1_LoadBufferSet
  4417  0546                     _PWM1_LoadBufferSet:
  4418                           
  4419                           ;pwm1.c: 132: PWM1LDCONbits.LDA = 1;
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in _PWM1_LoadBufferSet: []
  4423  0546  003B               	movlb	27	; select bank27
  4424  0547  179F               	bsf	31,7	;volatile
  4425  0548  0008               	return
  4426  0549                     __end_of_PWM1_LoadBufferSet:
  4427                           
  4428                           	psect	text17
  4429  04AE                     __ptext17:	
  4430 ;; *************** function _PWM1_DutyCycleSet *****************
  4431 ;; Defined at:
  4432 ;;		line 141 in file "mcc_generated_files/pwm1.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  dutyCycleCou    2    0[BANK0 ] unsigned int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4446 ;;      Params:         0       2       0       0
  4447 ;;      Locals:         0       0       0       0
  4448 ;;      Temps:          0       0       0       0
  4449 ;;      Totals:         0       2       0       0
  4450 ;;Total ram usage:        2 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    5
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_setLED
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _PWM1_DutyCycleSet
  4462  04AE                     _PWM1_DutyCycleSet:
  4463                           
  4464                           ;pwm1.c: 143: PWM1DCH = (dutyCycleCount>>8);
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _PWM1_DutyCycleSet: [wreg+status,2]
  4468  04AE  0020               	movlb	0	; select bank0
  4469  04AF  0839               	movf	PWM1_DutyCycleSet@dutyCycleCount+1,w
  4470  04B0  003B               	movlb	27	; select bank27
  4471  04B1  0094               	movwf	20	;volatile
  4472                           
  4473                           ;pwm1.c: 144: PWM1DCL = (dutyCycleCount);
  4474  04B2  0020               	movlb	0	; select bank0
  4475  04B3  0838               	movf	PWM1_DutyCycleSet@dutyCycleCount,w
  4476  04B4  003B               	movlb	27	; select bank27
  4477  04B5  0093               	movwf	19	;volatile
  4478  04B6  0008               	return
  4479  04B7                     __end_of_PWM1_DutyCycleSet:
  4480                           
  4481                           	psect	text18
  4482  04C8                     __ptext18:	
  4483 ;; *************** function _getTimerMS *****************
  4484 ;; Defined at:
  4485 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  3    0[BANK0 ] unsigned um
  4492 ;; Registers used:
  4493 ;;		wreg
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4499 ;;      Params:         0       3       0       0
  4500 ;;      Locals:         0       0       0       0
  4501 ;;      Temps:          0       0       0       0
  4502 ;;      Totals:         0       3       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    5
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_delay
  4510 ;;		_buttonPressed
  4511 ;;		_powerDown
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _getTimerMS
  4517  04C8                     _getTimerMS:
  4518                           
  4519                           ;tmr1.c: 187: return timerMS;
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _getTimerMS: [wreg]
  4523  04C8  0020               	movlb	0	; select bank0
  4524  04C9  0823               	movf	_timerMS,w
  4525  04CA  00B8               	movwf	?_getTimerMS
  4526  04CB  0824               	movf	_timerMS+1,w
  4527  04CC  00B9               	movwf	?_getTimerMS+1
  4528  04CD  0825               	movf	_timerMS+2,w
  4529  04CE  00BA               	movwf	?_getTimerMS+2
  4530  04CF  0008               	return
  4531  04D0                     __end_of_getTimerMS:
  4532                           
  4533                           	psect	text19
  4534  0521                     __ptext19:	
  4535 ;; *************** function _PWM3_Stop *****************
  4536 ;; Defined at:
  4537 ;;		line 119 in file "mcc_generated_files/pwm3.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		None
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4551 ;;      Params:         0       0       0       0
  4552 ;;      Locals:         0       0       0       0
  4553 ;;      Temps:          0       0       0       0
  4554 ;;      Totals:         0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    5
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_powerDown
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function _PWM3_Stop
  4567  0521                     _PWM3_Stop:
  4568                           
  4569                           ;pwm3.c: 121: PWM3CONbits.EN = 0;
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in _PWM3_Stop: []
  4573  0521  003B               	movlb	27	; select bank27
  4574  0522  13BB               	bcf	59,7	;volatile
  4575                           
  4576                           ;pwm3.c: 122: PWM3CONbits.OE = 0;
  4577  0523  133B               	bcf	59,6	;volatile
  4578  0524  0008               	return
  4579  0525                     __end_of_PWM3_Stop:
  4580                           
  4581                           	psect	text20
  4582  0525                     __ptext20:	
  4583 ;; *************** function _PWM3_Start *****************
  4584 ;; Defined at:
  4585 ;;		line 113 in file "mcc_generated_files/pwm3.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;		None
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		None
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4599 ;;      Params:         0       0       0       0
  4600 ;;      Locals:         0       0       0       0
  4601 ;;      Temps:          0       0       0       0
  4602 ;;      Totals:         0       0       0       0
  4603 ;;Total ram usage:        0 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    5
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_powerDown
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _PWM3_Start
  4615  0525                     _PWM3_Start:
  4616                           
  4617                           ;pwm3.c: 115: PWM3CONbits.EN = 1;
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _PWM3_Start: []
  4621  0525  003B               	movlb	27	; select bank27
  4622  0526  17BB               	bsf	59,7	;volatile
  4623                           
  4624                           ;pwm3.c: 116: PWM3CONbits.OE = 1;
  4625  0527  173B               	bsf	59,6	;volatile
  4626  0528  0008               	return
  4627  0529                     __end_of_PWM3_Start:
  4628                           
  4629                           	psect	text21
  4630  0529                     __ptext21:	
  4631 ;; *************** function _PWM2_Stop *****************
  4632 ;; Defined at:
  4633 ;;		line 119 in file "mcc_generated_files/pwm2.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		None
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4647 ;;      Params:         0       0       0       0
  4648 ;;      Locals:         0       0       0       0
  4649 ;;      Temps:          0       0       0       0
  4650 ;;      Totals:         0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    5
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_powerDown
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _PWM2_Stop
  4663  0529                     _PWM2_Stop:
  4664                           
  4665                           ;pwm2.c: 121: PWM2CONbits.EN = 0;
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in _PWM2_Stop: []
  4669  0529  003B               	movlb	27	; select bank27
  4670  052A  13AB               	bcf	43,7	;volatile
  4671                           
  4672                           ;pwm2.c: 122: PWM2CONbits.OE = 0;
  4673  052B  132B               	bcf	43,6	;volatile
  4674  052C  0008               	return
  4675  052D                     __end_of_PWM2_Stop:
  4676                           
  4677                           	psect	text22
  4678  052D                     __ptext22:	
  4679 ;; *************** function _PWM2_Start *****************
  4680 ;; Defined at:
  4681 ;;		line 113 in file "mcc_generated_files/pwm2.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		None
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4695 ;;      Params:         0       0       0       0
  4696 ;;      Locals:         0       0       0       0
  4697 ;;      Temps:          0       0       0       0
  4698 ;;      Totals:         0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    5
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_powerDown
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _PWM2_Start
  4711  052D                     _PWM2_Start:
  4712                           
  4713                           ;pwm2.c: 115: PWM2CONbits.EN = 1;
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _PWM2_Start: []
  4717  052D  003B               	movlb	27	; select bank27
  4718  052E  17AB               	bsf	43,7	;volatile
  4719                           
  4720                           ;pwm2.c: 116: PWM2CONbits.OE = 1;
  4721  052F  172B               	bsf	43,6	;volatile
  4722  0530  0008               	return
  4723  0531                     __end_of_PWM2_Start:
  4724                           
  4725                           	psect	text23
  4726  0531                     __ptext23:	
  4727 ;; *************** function _PWM1_Stop *****************
  4728 ;; Defined at:
  4729 ;;		line 119 in file "mcc_generated_files/pwm1.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		None
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4743 ;;      Params:         0       0       0       0
  4744 ;;      Locals:         0       0       0       0
  4745 ;;      Temps:          0       0       0       0
  4746 ;;      Totals:         0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    5
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_powerDown
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _PWM1_Stop
  4759  0531                     _PWM1_Stop:
  4760                           
  4761                           ;pwm1.c: 121: PWM1CONbits.EN = 0;
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _PWM1_Stop: []
  4765  0531  003B               	movlb	27	; select bank27
  4766  0532  139B               	bcf	27,7	;volatile
  4767                           
  4768                           ;pwm1.c: 122: PWM1CONbits.OE = 0;
  4769  0533  131B               	bcf	27,6	;volatile
  4770  0534  0008               	return
  4771  0535                     __end_of_PWM1_Stop:
  4772                           
  4773                           	psect	text24
  4774  0535                     __ptext24:	
  4775 ;; *************** function _PWM1_Start *****************
  4776 ;; Defined at:
  4777 ;;		line 113 in file "mcc_generated_files/pwm1.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;		None
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		None
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4791 ;;      Params:         0       0       0       0
  4792 ;;      Locals:         0       0       0       0
  4793 ;;      Temps:          0       0       0       0
  4794 ;;      Totals:         0       0       0       0
  4795 ;;Total ram usage:        0 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    5
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_powerDown
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _PWM1_Start
  4807  0535                     _PWM1_Start:
  4808                           
  4809                           ;pwm1.c: 115: PWM1CONbits.EN = 1;
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _PWM1_Start: []
  4813  0535  003B               	movlb	27	; select bank27
  4814  0536  179B               	bsf	27,7	;volatile
  4815                           
  4816                           ;pwm1.c: 116: PWM1CONbits.OE = 1;
  4817  0537  171B               	bsf	27,6	;volatile
  4818  0538  0008               	return
  4819  0539                     __end_of_PWM1_Start:
  4820                           
  4821                           	psect	text25
  4822  036B                     __ptext25:	
  4823 ;; *************** function _checkVolume *****************
  4824 ;; Defined at:
  4825 ;;		line 246 in file "mcc_generated_files/adc1.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    0[BANK0 ] int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4839 ;;      Params:         0       2       0       0
  4840 ;;      Locals:         0       0       0       0
  4841 ;;      Temps:          0       0       0       0
  4842 ;;      Totals:         0       2       0       0
  4843 ;;Total ram usage:        2 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    5
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_main
  4850 ;;		_showVolume
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _checkVolume
  4856  036B                     _checkVolume:
  4857                           
  4858                           ;adc1.c: 248: if (totalTriggers > 200)
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _checkVolume: [wreg+status,2]
  4862  036B  3000               	movlw	0
  4863  036C  0020               	movlb	0	; select bank0
  4864  036D  022D               	subwf	_totalTriggers+1,w
  4865  036E  30C9               	movlw	201
  4866  036F  1903               	skipnz
  4867  0370  022C               	subwf	_totalTriggers,w
  4868  0371  1C03               	skipc
  4869  0372  2B78               	goto	l2435
  4870                           
  4871                           ;adc1.c: 249: return 2;
  4872  0373  3002               	movlw	2
  4873  0374  00B8               	movwf	?_checkVolume
  4874  0375  3000               	movlw	0
  4875  0376  00B9               	movwf	?_checkVolume+1
  4876  0377  0008               	return
  4877  0378                     l2435:
  4878                           
  4879                           ;adc1.c: 250: else if (totalTriggers > 100)
  4880  0378  3000               	movlw	0
  4881  0379  022D               	subwf	_totalTriggers+1,w
  4882  037A  3065               	movlw	101
  4883  037B  1903               	skipnz
  4884  037C  022C               	subwf	_totalTriggers,w
  4885  037D  1C03               	skipc
  4886  037E  2B84               	goto	l2443
  4887                           
  4888                           ;adc1.c: 251: return 1;
  4889  037F  3001               	movlw	1
  4890  0380  00B8               	movwf	?_checkVolume
  4891  0381  3000               	movlw	0
  4892  0382  00B9               	movwf	?_checkVolume+1
  4893  0383  0008               	return
  4894  0384                     l2443:
  4895                           
  4896                           ;adc1.c: 252: else;adc1.c: 253: return (0);
  4897  0384  01B8               	clrf	?_checkVolume
  4898  0385  01B9               	clrf	?_checkVolume+1
  4899  0386  0008               	return
  4900  0387                     __end_of_checkVolume:
  4901                           
  4902                           	psect	text26
  4903  0486                     __ptext26:	
  4904 ;; *************** function _SYSTEM_Initialize *****************
  4905 ;; Defined at:
  4906 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4920 ;;      Params:         0       0       0       0
  4921 ;;      Locals:         0       0       0       0
  4922 ;;      Temps:          0       0       0       0
  4923 ;;      Totals:         0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    7
  4927 ;; This function calls:
  4928 ;;		_ADC1_Initialize
  4929 ;;		_OSCILLATOR_Initialize
  4930 ;;		_PIN_MANAGER_Initialize
  4931 ;;		_PWM1_Initialize
  4932 ;;		_PWM2_Initialize
  4933 ;;		_PWM3_Initialize
  4934 ;;		_TMR0_Initialize
  4935 ;;		_TMR1_Initialize
  4936 ;;		_TMR2_Initialize
  4937 ;;		_WDT_Initialize
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _SYSTEM_Initialize
  4945  0486                     _SYSTEM_Initialize:
  4946                           
  4947                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4951  0486  22EA               	fcall	_PIN_MANAGER_Initialize
  4952                           
  4953                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4954  0487  24E0               	fcall	_OSCILLATOR_Initialize
  4955                           
  4956                           ;mcc.c: 55: WDT_Initialize();
  4957  0488  2539               	fcall	_WDT_Initialize
  4958                           
  4959                           ;mcc.c: 56: PWM1_Initialize();
  4960  0489  23FF               	fcall	_PWM1_Initialize
  4961                           
  4962                           ;mcc.c: 57: PWM2_Initialize();
  4963  048A  23E8               	fcall	_PWM2_Initialize
  4964                           
  4965                           ;mcc.c: 58: ADC1_Initialize();
  4966  048B  2491               	fcall	_ADC1_Initialize
  4967                           
  4968                           ;mcc.c: 59: PWM3_Initialize();
  4969  048C  23D1               	fcall	_PWM3_Initialize
  4970                           
  4971                           ;mcc.c: 60: TMR2_Initialize();
  4972  048D  24D0               	fcall	_TMR2_Initialize
  4973                           
  4974                           ;mcc.c: 61: TMR1_Initialize();
  4975  048E  23BA               	fcall	_TMR1_Initialize
  4976                           
  4977                           ;mcc.c: 62: TMR0_Initialize();
  4978  048F  245F               	fcall	_TMR0_Initialize
  4979  0490  0008               	return
  4980  0491                     __end_of_SYSTEM_Initialize:
  4981                           
  4982                           	psect	text27
  4983  0539                     __ptext27:	
  4984 ;; *************** function _WDT_Initialize *****************
  4985 ;; Defined at:
  4986 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5000 ;;      Params:         0       0       0       0
  5001 ;;      Locals:         0       0       0       0
  5002 ;;      Temps:          0       0       0       0
  5003 ;;      Totals:         0       0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    5
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_SYSTEM_Initialize
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _WDT_Initialize
  5016  0539                     _WDT_Initialize:
  5017                           
  5018                           ;mcc.c: 78: WDTCON = 0x16;
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _WDT_Initialize: [wreg]
  5022  0539  3016               	movlw	22
  5023  053A  0021               	movlb	1	; select bank1
  5024  053B  0097               	movwf	23	;volatile
  5025  053C  0008               	return
  5026  053D                     __end_of_WDT_Initialize:
  5027                           
  5028                           	psect	text28
  5029  04D0                     __ptext28:	
  5030 ;; *************** function _TMR2_Initialize *****************
  5031 ;; Defined at:
  5032 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5046 ;;      Params:         0       0       0       0
  5047 ;;      Locals:         0       0       0       0
  5048 ;;      Temps:          0       0       0       0
  5049 ;;      Totals:         0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    5
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_SYSTEM_Initialize
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _TMR2_Initialize
  5062  04D0                     _TMR2_Initialize:
  5063                           
  5064                           ;tmr2.c: 67: PR2 = 0x18;
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5068  04D0  3018               	movlw	24
  5069  04D1  0020               	movlb	0	; select bank0
  5070  04D2  009B               	movwf	27	;volatile
  5071                           
  5072                           ;tmr2.c: 70: TMR2 = 0x00;
  5073  04D3  019A               	clrf	26	;volatile
  5074                           
  5075                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  5076  04D4  1091               	bcf	17,1	;volatile
  5077                           
  5078                           ;tmr2.c: 76: T2CON = 0x05;
  5079  04D5  3005               	movlw	5
  5080  04D6  009C               	movwf	28	;volatile
  5081  04D7  0008               	return
  5082  04D8                     __end_of_TMR2_Initialize:
  5083                           
  5084                           	psect	text29
  5085  03BA                     __ptext29:	
  5086 ;; *************** function _TMR1_Initialize *****************
  5087 ;; Defined at:
  5088 ;;		line 68 in file "mcc_generated_files/tmr1.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5102 ;;      Params:         0       0       0       0
  5103 ;;      Locals:         0       0       0       0
  5104 ;;      Temps:          0       0       0       0
  5105 ;;      Totals:         0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    6
  5109 ;; This function calls:
  5110 ;;		_TMR1_SetInterruptHandler
  5111 ;; This function is called by:
  5112 ;;		_SYSTEM_Initialize
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _TMR1_Initialize
  5118  03BA                     _TMR1_Initialize:
  5119                           
  5120                           ;tmr1.c: 73: T1GCON = 0x00;
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5124  03BA  0020               	movlb	0	; select bank0
  5125  03BB  0199               	clrf	25	;volatile
  5126                           
  5127                           ;tmr1.c: 76: TMR1H = 0xFC;
  5128  03BC  30FC               	movlw	252
  5129  03BD  0097               	movwf	23	;volatile
  5130                           
  5131                           ;tmr1.c: 79: TMR1L = 0x18;
  5132  03BE  3018               	movlw	24
  5133  03BF  0096               	movwf	22	;volatile
  5134                           
  5135                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5136  03C0  0817               	movf	23,w	;volatile
  5137  03C1  00D1               	movwf	_timer1ReloadVal+1	;volatile
  5138  03C2  0816               	movf	22,w	;volatile
  5139  03C3  00D0               	movwf	_timer1ReloadVal	;volatile
  5140                           
  5141                           ;tmr1.c: 85: PIR1bits.TMR1IF = 0;
  5142  03C4  1011               	bcf	17,0	;volatile
  5143                           
  5144                           ;tmr1.c: 88: PIE1bits.TMR1IE = 1;
  5145  03C5  0021               	movlb	1	; select bank1
  5146  03C6  1411               	bsf	17,0	;volatile
  5147                           
  5148                           ;tmr1.c: 91: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5149  03C7  307A               	movlw	low _TMR1_DefaultInterruptHandler
  5150  03C8  0020               	movlb	0	; select bank0
  5151  03C9  00B8               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5152  03CA  3004               	movlw	high _TMR1_DefaultInterruptHandler
  5153  03CB  00B9               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5154  03CC  24F3               	fcall	_TMR1_SetInterruptHandler
  5155                           
  5156                           ;tmr1.c: 94: T1CON = 0x71;
  5157  03CD  3071               	movlw	113
  5158  03CE  0020               	movlb	0	; select bank0
  5159  03CF  0098               	movwf	24	;volatile
  5160  03D0  0008               	return
  5161  03D1                     __end_of_TMR1_Initialize:
  5162                           
  5163                           	psect	text30
  5164  04F3                     __ptext30:	
  5165 ;; *************** function _TMR1_SetInterruptHandler *****************
  5166 ;; Defined at:
  5167 ;;		line 174 in file "mcc_generated_files/tmr1.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5170 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5182 ;;      Params:         0       2       0       0
  5183 ;;      Locals:         0       0       0       0
  5184 ;;      Temps:          0       0       0       0
  5185 ;;      Totals:         0       2       0       0
  5186 ;;Total ram usage:        2 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    5
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_TMR1_Initialize
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function _TMR1_SetInterruptHandler
  5198  04F3                     _TMR1_SetInterruptHandler:
  5199                           
  5200                           ;tmr1.c: 175: TMR1_InterruptHandler = InterruptHandler;
  5201                           
  5202                           ;incstack = 0
  5203                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5204  04F3  0020               	movlb	0	; select bank0
  5205  04F4  0839               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5206  04F5  00CF               	movwf	_TMR1_InterruptHandler+1
  5207  04F6  0838               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5208  04F7  00CE               	movwf	_TMR1_InterruptHandler
  5209  04F8  0008               	return
  5210  04F9                     __end_of_TMR1_SetInterruptHandler:
  5211                           
  5212                           	psect	text31
  5213  045F                     __ptext31:	
  5214 ;; *************** function _TMR0_Initialize *****************
  5215 ;; Defined at:
  5216 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5230 ;;      Params:         0       0       0       0
  5231 ;;      Locals:         0       0       0       0
  5232 ;;      Temps:          0       1       0       0
  5233 ;;      Totals:         0       1       0       0
  5234 ;;Total ram usage:        1 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    5
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_SYSTEM_Initialize
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           
  5245                           ;psect for function _TMR0_Initialize
  5246  045F                     _TMR0_Initialize:
  5247                           
  5248                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 & 0x3F));
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  5252  045F  0021               	movlb	1	; select bank1
  5253  0460  0815               	movf	21,w	;volatile
  5254  0461  39C0               	andlw	192
  5255  0462  3811               	iorlw	17
  5256  0463  0095               	movwf	21	;volatile
  5257                           
  5258                           ;tmr0.c: 71: TMR0 = 0xE7;
  5259  0464  30E7               	movlw	231
  5260  0465  0020               	movlb	0	; select bank0
  5261  0466  0095               	movwf	21	;volatile
  5262                           
  5263                           ;tmr0.c: 74: timer0ReloadVal= 231;
  5264  0467  30E7               	movlw	231
  5265  0468  00B8               	movwf	??_TMR0_Initialize
  5266  0469  0838               	movf	??_TMR0_Initialize,w
  5267  046A  00D4               	movwf	_timer0ReloadVal	;volatile
  5268                           
  5269                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  5270  046B  110B               	bcf	11,2	;volatile
  5271  046C  0008               	return
  5272  046D                     __end_of_TMR0_Initialize:
  5273                           
  5274                           	psect	text32
  5275  03D1                     __ptext32:	
  5276 ;; *************** function _PWM3_Initialize *****************
  5277 ;; Defined at:
  5278 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5292 ;;      Params:         0       0       0       0
  5293 ;;      Locals:         0       0       0       0
  5294 ;;      Temps:          0       0       0       0
  5295 ;;      Totals:         0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    5
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_SYSTEM_Initialize
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _PWM3_Initialize
  5308  03D1                     _PWM3_Initialize:
  5309                           
  5310                           ;pwm3.c: 63: PWM3INTE = 0x00;
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
  5314  03D1  003B               	movlb	27	; select bank27
  5315  03D2  01BC               	clrf	60	;volatile
  5316                           
  5317                           ;pwm3.c: 66: PWM3INTF = 0x00;
  5318  03D3  01BD               	clrf	61	;volatile
  5319                           
  5320                           ;pwm3.c: 69: PWM3CLKCON = 0x30;
  5321  03D4  3030               	movlw	48
  5322  03D5  00BE               	movwf	62	;volatile
  5323                           
  5324                           ;pwm3.c: 72: PWM3LDCON = 0x80;
  5325  03D6  3080               	movlw	128
  5326  03D7  00BF               	movwf	63	;volatile
  5327                           
  5328                           ;pwm3.c: 75: PWM3OFCON = 0x00;
  5329  03D8  01C0               	clrf	64	;volatile
  5330                           
  5331                           ;pwm3.c: 78: PWM3PHH = 0x00;
  5332  03D9  01B2               	clrf	50	;volatile
  5333                           
  5334                           ;pwm3.c: 81: PWM3PHL = 0x00;
  5335  03DA  01B1               	clrf	49	;volatile
  5336                           
  5337                           ;pwm3.c: 84: PWM3DCH = 0x00;
  5338  03DB  01B4               	clrf	52	;volatile
  5339                           
  5340                           ;pwm3.c: 87: PWM3DCL = 0x00;
  5341  03DC  01B3               	clrf	51	;volatile
  5342                           
  5343                           ;pwm3.c: 90: PWM3PRH = 0x00;
  5344  03DD  01B6               	clrf	54	;volatile
  5345                           
  5346                           ;pwm3.c: 93: PWM3PRL = 0xFF;
  5347  03DE  30FF               	movlw	255
  5348  03DF  00B5               	movwf	53	;volatile
  5349                           
  5350                           ;pwm3.c: 96: PWM3OFH = 0x00;
  5351  03E0  01B8               	clrf	56	;volatile
  5352                           
  5353                           ;pwm3.c: 99: PWM3OFL = 0x01;
  5354  03E1  3001               	movlw	1
  5355  03E2  00B7               	movwf	55	;volatile
  5356                           
  5357                           ;pwm3.c: 102: PWM3TMRH = 0x00;
  5358  03E3  01BA               	clrf	58	;volatile
  5359                           
  5360                           ;pwm3.c: 105: PWM3TMRL = 0x00;
  5361  03E4  01B9               	clrf	57	;volatile
  5362                           
  5363                           ;pwm3.c: 108: PWM3CON = 0xD0;
  5364  03E5  30D0               	movlw	208
  5365  03E6  00BB               	movwf	59	;volatile
  5366  03E7  0008               	return
  5367  03E8                     __end_of_PWM3_Initialize:
  5368                           
  5369                           	psect	text33
  5370  03E8                     __ptext33:	
  5371 ;; *************** function _PWM2_Initialize *****************
  5372 ;; Defined at:
  5373 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5387 ;;      Params:         0       0       0       0
  5388 ;;      Locals:         0       0       0       0
  5389 ;;      Temps:          0       0       0       0
  5390 ;;      Totals:         0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    5
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_SYSTEM_Initialize
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _PWM2_Initialize
  5403  03E8                     _PWM2_Initialize:
  5404                           
  5405                           ;pwm2.c: 63: PWM2INTE = 0x00;
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  5409  03E8  003B               	movlb	27	; select bank27
  5410  03E9  01AC               	clrf	44	;volatile
  5411                           
  5412                           ;pwm2.c: 66: PWM2INTF = 0x00;
  5413  03EA  01AD               	clrf	45	;volatile
  5414                           
  5415                           ;pwm2.c: 69: PWM2CLKCON = 0x30;
  5416  03EB  3030               	movlw	48
  5417  03EC  00AE               	movwf	46	;volatile
  5418                           
  5419                           ;pwm2.c: 72: PWM2LDCON = 0x80;
  5420  03ED  3080               	movlw	128
  5421  03EE  00AF               	movwf	47	;volatile
  5422                           
  5423                           ;pwm2.c: 75: PWM2OFCON = 0x00;
  5424  03EF  01B0               	clrf	48	;volatile
  5425                           
  5426                           ;pwm2.c: 78: PWM2PHH = 0x00;
  5427  03F0  01A2               	clrf	34	;volatile
  5428                           
  5429                           ;pwm2.c: 81: PWM2PHL = 0x00;
  5430  03F1  01A1               	clrf	33	;volatile
  5431                           
  5432                           ;pwm2.c: 84: PWM2DCH = 0x00;
  5433  03F2  01A4               	clrf	36	;volatile
  5434                           
  5435                           ;pwm2.c: 87: PWM2DCL = 0x00;
  5436  03F3  01A3               	clrf	35	;volatile
  5437                           
  5438                           ;pwm2.c: 90: PWM2PRH = 0x00;
  5439  03F4  01A6               	clrf	38	;volatile
  5440                           
  5441                           ;pwm2.c: 93: PWM2PRL = 0xFF;
  5442  03F5  30FF               	movlw	255
  5443  03F6  00A5               	movwf	37	;volatile
  5444                           
  5445                           ;pwm2.c: 96: PWM2OFH = 0x00;
  5446  03F7  01A8               	clrf	40	;volatile
  5447                           
  5448                           ;pwm2.c: 99: PWM2OFL = 0x01;
  5449  03F8  3001               	movlw	1
  5450  03F9  00A7               	movwf	39	;volatile
  5451                           
  5452                           ;pwm2.c: 102: PWM2TMRH = 0x00;
  5453  03FA  01AA               	clrf	42	;volatile
  5454                           
  5455                           ;pwm2.c: 105: PWM2TMRL = 0x00;
  5456  03FB  01A9               	clrf	41	;volatile
  5457                           
  5458                           ;pwm2.c: 108: PWM2CON = 0xD0;
  5459  03FC  30D0               	movlw	208
  5460  03FD  00AB               	movwf	43	;volatile
  5461  03FE  0008               	return
  5462  03FF                     __end_of_PWM2_Initialize:
  5463                           
  5464                           	psect	text34
  5465  03FF                     __ptext34:	
  5466 ;; *************** function _PWM1_Initialize *****************
  5467 ;; Defined at:
  5468 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5482 ;;      Params:         0       0       0       0
  5483 ;;      Locals:         0       0       0       0
  5484 ;;      Temps:          0       0       0       0
  5485 ;;      Totals:         0       0       0       0
  5486 ;;Total ram usage:        0 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    5
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_SYSTEM_Initialize
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _PWM1_Initialize
  5498  03FF                     _PWM1_Initialize:
  5499                           
  5500                           ;pwm1.c: 63: PWM1INTE = 0x00;
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  5504  03FF  003B               	movlb	27	; select bank27
  5505  0400  019C               	clrf	28	;volatile
  5506                           
  5507                           ;pwm1.c: 66: PWM1INTF = 0x00;
  5508  0401  019D               	clrf	29	;volatile
  5509                           
  5510                           ;pwm1.c: 69: PWM1CLKCON = 0x30;
  5511  0402  3030               	movlw	48
  5512  0403  009E               	movwf	30	;volatile
  5513                           
  5514                           ;pwm1.c: 72: PWM1LDCON = 0x80;
  5515  0404  3080               	movlw	128
  5516  0405  009F               	movwf	31	;volatile
  5517                           
  5518                           ;pwm1.c: 75: PWM1OFCON = 0x00;
  5519  0406  01A0               	clrf	32	;volatile
  5520                           
  5521                           ;pwm1.c: 78: PWM1PHH = 0x00;
  5522  0407  0192               	clrf	18	;volatile
  5523                           
  5524                           ;pwm1.c: 81: PWM1PHL = 0x00;
  5525  0408  0191               	clrf	17	;volatile
  5526                           
  5527                           ;pwm1.c: 84: PWM1DCH = 0x00;
  5528  0409  0194               	clrf	20	;volatile
  5529                           
  5530                           ;pwm1.c: 87: PWM1DCL = 0x00;
  5531  040A  0193               	clrf	19	;volatile
  5532                           
  5533                           ;pwm1.c: 90: PWM1PRH = 0x00;
  5534  040B  0196               	clrf	22	;volatile
  5535                           
  5536                           ;pwm1.c: 93: PWM1PRL = 0xFF;
  5537  040C  30FF               	movlw	255
  5538  040D  0095               	movwf	21	;volatile
  5539                           
  5540                           ;pwm1.c: 96: PWM1OFH = 0x00;
  5541  040E  0198               	clrf	24	;volatile
  5542                           
  5543                           ;pwm1.c: 99: PWM1OFL = 0x01;
  5544  040F  3001               	movlw	1
  5545  0410  0097               	movwf	23	;volatile
  5546                           
  5547                           ;pwm1.c: 102: PWM1TMRH = 0x00;
  5548  0411  019A               	clrf	26	;volatile
  5549                           
  5550                           ;pwm1.c: 105: PWM1TMRL = 0x00;
  5551  0412  0199               	clrf	25	;volatile
  5552                           
  5553                           ;pwm1.c: 108: PWM1CON = 0xD0;
  5554  0413  30D0               	movlw	208
  5555  0414  009B               	movwf	27	;volatile
  5556  0415  0008               	return
  5557  0416                     __end_of_PWM1_Initialize:
  5558                           
  5559                           	psect	text35
  5560  02EA                     __ptext35:	
  5561 ;; *************** function _PIN_MANAGER_Initialize *****************
  5562 ;; Defined at:
  5563 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5577 ;;      Params:         0       0       0       0
  5578 ;;      Locals:         0       0       0       0
  5579 ;;      Temps:          0       0       0       0
  5580 ;;      Totals:         0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    6
  5584 ;; This function calls:
  5585 ;;		_IOCAF3_SetInterruptHandler
  5586 ;; This function is called by:
  5587 ;;		_SYSTEM_Initialize
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _PIN_MANAGER_Initialize
  5593  02EA                     _PIN_MANAGER_Initialize:
  5594                           
  5595                           ;pin_manager.c: 62: LATA = 0x07;
  5596                           
  5597                           ;incstack = 0
  5598                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5599  02EA  3007               	movlw	7
  5600  02EB  0022               	movlb	2	; select bank2
  5601  02EC  008C               	movwf	12	;volatile
  5602                           
  5603                           ;pin_manager.c: 67: TRISA = 0x18;
  5604  02ED  3018               	movlw	24
  5605  02EE  0021               	movlb	1	; select bank1
  5606  02EF  008C               	movwf	12	;volatile
  5607                           
  5608                           ;pin_manager.c: 72: ANSELA = 0x10;
  5609  02F0  3010               	movlw	16
  5610  02F1  0023               	movlb	3	; select bank3
  5611  02F2  008C               	movwf	12	;volatile
  5612                           
  5613                           ;pin_manager.c: 77: WPUA = 0x08;
  5614  02F3  3008               	movlw	8
  5615  02F4  0024               	movlb	4	; select bank4
  5616  02F5  008C               	movwf	12	;volatile
  5617                           
  5618                           ;pin_manager.c: 78: OPTION_REGbits.nWPUEN = 0;
  5619  02F6  0021               	movlb	1	; select bank1
  5620  02F7  1395               	bcf	21,7	;volatile
  5621                           
  5622                           ;pin_manager.c: 83: ODCONA = 0x00;
  5623  02F8  0025               	movlb	5	; select bank5
  5624  02F9  018C               	clrf	12	;volatile
  5625                           
  5626                           ;pin_manager.c: 88: SLRCONA = 0x37;
  5627  02FA  3037               	movlw	55
  5628  02FB  0026               	movlb	6	; select bank6
  5629  02FC  008C               	movwf	12	;volatile
  5630                           
  5631                           ;pin_manager.c: 93: INLVLA = 0x3F;
  5632  02FD  303F               	movlw	63
  5633  02FE  0027               	movlb	7	; select bank7
  5634  02FF  008C               	movwf	12	;volatile
  5635                           
  5636                           ;pin_manager.c: 98: APFCON = 0x00;
  5637  0300  0022               	movlb	2	; select bank2
  5638  0301  019D               	clrf	29	;volatile
  5639                           
  5640                           ;pin_manager.c: 104: IOCAFbits.IOCAF3 = 0;
  5641  0302  0027               	movlb	7	; select bank7
  5642  0303  1193               	bcf	19,3	;volatile
  5643                           
  5644                           ;pin_manager.c: 106: IOCANbits.IOCAN3 = 1;
  5645  0304  1592               	bsf	18,3	;volatile
  5646                           
  5647                           ;pin_manager.c: 108: IOCAPbits.IOCAP3 = 1;
  5648  0305  1591               	bsf	17,3	;volatile
  5649                           
  5650                           ;pin_manager.c: 113: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  5651  0306  3052               	movlw	low _IOCAF3_DefaultInterruptHandler
  5652  0307  0020               	movlb	0	; select bank0
  5653  0308  00B8               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  5654  0309  3005               	movlw	high _IOCAF3_DefaultInterruptHandler
  5655  030A  00B9               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  5656  030B  24F9               	fcall	_IOCAF3_SetInterruptHandler
  5657                           
  5658                           ;pin_manager.c: 116: INTCONbits.IOCIE = 1;
  5659  030C  158B               	bsf	11,3	;volatile
  5660  030D  0008               	return
  5661  030E                     __end_of_PIN_MANAGER_Initialize:
  5662                           
  5663                           	psect	text36
  5664  04F9                     __ptext36:	
  5665 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  5666 ;; Defined at:
  5667 ;;		line 147 in file "mcc_generated_files/pin_manager.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5670 ;;		 -> buttonHandler(1), IOCAF3_DefaultInterruptHandler(1), 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5682 ;;      Params:         0       2       0       0
  5683 ;;      Locals:         0       0       0       0
  5684 ;;      Temps:          0       0       0       0
  5685 ;;      Totals:         0       2       0       0
  5686 ;;Total ram usage:        2 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    5
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_PIN_MANAGER_Initialize
  5693 ;;		_main
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function _IOCAF3_SetInterruptHandler
  5699  04F9                     _IOCAF3_SetInterruptHandler:
  5700                           
  5701                           ;pin_manager.c: 148: IOCAF3_InterruptHandler = InterruptHandler;
  5702                           
  5703                           ;incstack = 0
  5704                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  5705  04F9  0020               	movlb	0	; select bank0
  5706  04FA  0839               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  5707  04FB  00D3               	movwf	_IOCAF3_InterruptHandler+1
  5708  04FC  0838               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  5709  04FD  00D2               	movwf	_IOCAF3_InterruptHandler
  5710  04FE  0008               	return
  5711  04FF                     __end_of_IOCAF3_SetInterruptHandler:
  5712                           
  5713                           	psect	text37
  5714  04E0                     __ptext37:	
  5715 ;; *************** function _OSCILLATOR_Initialize *****************
  5716 ;; Defined at:
  5717 ;;		line 65 in file "mcc_generated_files/mcc.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5731 ;;      Params:         0       0       0       0
  5732 ;;      Locals:         0       0       0       0
  5733 ;;      Temps:          0       0       0       0
  5734 ;;      Totals:         0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    5
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_SYSTEM_Initialize
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _OSCILLATOR_Initialize
  5747  04E0                     _OSCILLATOR_Initialize:
  5748                           
  5749                           ;mcc.c: 68: OSCCON = 0x70;
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5753  04E0  3070               	movlw	112
  5754  04E1  0021               	movlb	1	; select bank1
  5755  04E2  0099               	movwf	25	;volatile
  5756                           
  5757                           ;mcc.c: 70: OSCTUNE = 0x00;
  5758  04E3  0198               	clrf	24	;volatile
  5759                           
  5760                           ;mcc.c: 72: BORCON = 0x00;
  5761  04E4  0022               	movlb	2	; select bank2
  5762  04E5  0196               	clrf	22	;volatile
  5763  04E6  0008               	return
  5764  04E7                     __end_of_OSCILLATOR_Initialize:
  5765                           
  5766                           	psect	text38
  5767  0491                     __ptext38:	
  5768 ;; *************** function _ADC1_Initialize *****************
  5769 ;; Defined at:
  5770 ;;		line 69 in file "mcc_generated_files/adc1.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5784 ;;      Params:         0       0       0       0
  5785 ;;      Locals:         0       0       0       0
  5786 ;;      Temps:          0       0       0       0
  5787 ;;      Totals:         0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    5
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_SYSTEM_Initialize
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _ADC1_Initialize
  5800  0491                     _ADC1_Initialize:
  5801                           
  5802                           ;adc1.c: 74: ADCON0 = 0x0D;
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  5806  0491  300D               	movlw	13
  5807  0492  0021               	movlb	1	; select bank1
  5808  0493  009D               	movwf	29	;volatile
  5809                           
  5810                           ;adc1.c: 77: ADCON1 = 0x50;
  5811  0494  3050               	movlw	80
  5812  0495  009E               	movwf	30	;volatile
  5813                           
  5814                           ;adc1.c: 80: ADCON2 = 0x50;
  5815  0496  3050               	movlw	80
  5816  0497  009F               	movwf	31	;volatile
  5817                           
  5818                           ;adc1.c: 83: ADRESL = 0x00;
  5819  0498  019B               	clrf	27	;volatile
  5820                           
  5821                           ;adc1.c: 86: ADRESH = 0x00;
  5822  0499  019C               	clrf	28	;volatile
  5823                           
  5824                           ;adc1.c: 89: PIE1bits.ADIE = 1;
  5825  049A  1711               	bsf	17,6	;volatile
  5826  049B  0008               	return
  5827  049C                     __end_of_ADC1_Initialize:
  5828                           
  5829                           	psect	intentry
  5830  0004                     __pintentry:	
  5831 ;; *************** function _INTERRUPT_InterruptManager *****************
  5832 ;; Defined at:
  5833 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5847 ;;      Params:         0       0       0       0
  5848 ;;      Locals:         0       0       0       0
  5849 ;;      Temps:          0       0       0       0
  5850 ;;      Totals:         0       0       0       0
  5851 ;;Total ram usage:        0 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    4
  5854 ;; This function calls:
  5855 ;;		_ADC1_ISR
  5856 ;;		_PIN_MANAGER_IOC
  5857 ;;		_TMR1_ISR
  5858 ;; This function is called by:
  5859 ;;		Interrupt level 1
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863  0004                     _INTERRUPT_InterruptManager:
  5864                           
  5865                           ;incstack = 0
  5866  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5867                           
  5868                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5869  0005  3180               	pagesel	$
  5870                           
  5871                           ;interrupt_manager.c: 55: if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  5872  0006  198B               	btfsc	11,3	;volatile
  5873  0007  1C0B               	btfss	11,0	;volatile
  5874  0008  280B               	goto	i1l173
  5875                           
  5876                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: PIN_MANAGER_IOC();
  5877  0009  251C               	fcall	_PIN_MANAGER_IOC
  5878                           
  5879                           ;interrupt_manager.c: 58: }
  5880  000A  281C               	goto	i1l181
  5881  000B                     i1l173:
  5882                           
  5883                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  5884  000B  1F0B               	btfss	11,6	;volatile
  5885  000C  281C               	goto	i1l181
  5886                           
  5887                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE1bits.TMR1IE == 1 && PIR1bits
      +                          .TMR1IF == 1)
  5888  000D  0021               	movlb	1	; select bank1
  5889  000E  1C11               	btfss	17,0	;volatile
  5890  000F  2815               	goto	i1l176
  5891  0010  0020               	movlb	0	; select bank0
  5892  0011  1C11               	btfss	17,0	;volatile
  5893  0012  2815               	goto	i1l176
  5894                           
  5895                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR1_ISR();
  5896  0013  243E               	fcall	_TMR1_ISR
  5897                           
  5898                           ;interrupt_manager.c: 64: }
  5899  0014  281C               	goto	i1l181
  5900  0015                     i1l176:
  5901                           
  5902                           ;interrupt_manager.c: 65: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  5903  0015  0021               	movlb	1	; select bank1
  5904  0016  1F11               	btfss	17,6	;volatile
  5905  0017  281C               	goto	i1l181
  5906  0018  0020               	movlb	0	; select bank0
  5907  0019  1F11               	btfss	17,6	;volatile
  5908  001A  281C               	goto	i1l181
  5909                           
  5910                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: ADC1_ISR();
  5911  001B  24B7               	fcall	_ADC1_ISR
  5912  001C                     i1l181:	
  5913                           ;interrupt_manager.c: 74: else;interrupt_manager.c: 75: {
  5914                           
  5915                           ;interrupt_manager.c: 68: }
  5916                           
  5917  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5918  001D  0009               	retfie
  5919  001E                     __end_of_INTERRUPT_InterruptManager:
  5920                           
  5921                           	psect	text40
  5922  043E                     __ptext40:	
  5923 ;; *************** function _TMR1_ISR *****************
  5924 ;; Defined at:
  5925 ;;		line 161 in file "mcc_generated_files/tmr1.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, pclath, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5939 ;;      Params:         0       0       0       0
  5940 ;;      Locals:         0       0       0       0
  5941 ;;      Temps:          0       0       0       0
  5942 ;;      Totals:         0       0       0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    1
  5946 ;; This function calls:
  5947 ;;		Absolute function
  5948 ;;		_TMR1_DefaultInterruptHandler
  5949 ;;		_TMR1_WriteTimer
  5950 ;; This function is called by:
  5951 ;;		_INTERRUPT_InterruptManager
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function _TMR1_ISR
  5957  043E                     _TMR1_ISR:
  5958                           
  5959                           ;tmr1.c: 163: if(TMR1_InterruptHandler)
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5963  043E  0020               	movlb	0	; select bank0
  5964  043F  084E               	movf	_TMR1_InterruptHandler,w
  5965  0440  044F               	iorwf	_TMR1_InterruptHandler+1,w
  5966  0441  1903               	btfsc	3,2
  5967  0442  2C48               	goto	i1l2421
  5968                           
  5969                           ;tmr1.c: 164: {;tmr1.c: 165: TMR1_InterruptHandler();
  5970  0443  084F               	movf	_TMR1_InterruptHandler+1,w
  5971  0444  008A               	movwf	10
  5972  0445  084E               	movf	_TMR1_InterruptHandler,w
  5973  0446  000A               	callw
  5974  0447  3184               	pagesel	$
  5975  0448                     i1l2421:
  5976                           
  5977                           ;tmr1.c: 166: };tmr1.c: 169: PIR1bits.TMR1IF = 0;
  5978  0448  0020               	movlb	0	; select bank0
  5979  0449  1011               	bcf	17,0	;volatile
  5980                           
  5981                           ;tmr1.c: 170: TMR1_WriteTimer(timer1ReloadVal);
  5982  044A  0851               	movf	_timer1ReloadVal+1,w	;volatile
  5983  044B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5984  044C  0850               	movf	_timer1ReloadVal,w	;volatile
  5985  044D  00F0               	movwf	TMR1_WriteTimer@timerVal
  5986  044E  2450               	fcall	_TMR1_WriteTimer
  5987  044F  0008               	return
  5988  0450                     __end_of_TMR1_ISR:
  5989                           
  5990                           	psect	text41
  5991  0450                     __ptext41:	
  5992 ;; *************** function _TMR1_WriteTimer *****************
  5993 ;; Defined at:
  5994 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  timerVal        2    0[COMMON] unsigned int 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6008 ;;      Params:         2       0       0       0
  6009 ;;      Locals:         0       0       0       0
  6010 ;;      Temps:          0       0       0       0
  6011 ;;      Totals:         2       0       0       0
  6012 ;;Total ram usage:        2 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_TMR1_ISR
  6018 ;;		_TMR1_Reload
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function _TMR1_WriteTimer
  6024  0450                     _TMR1_WriteTimer:
  6025                           
  6026                           ;tmr1.c: 126: if (T1CONbits.nT1SYNC == 1)
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6030  0450  0020               	movlb	0	; select bank0
  6031  0451  1D18               	btfss	24,2	;volatile
  6032  0452  2C5A               	goto	i1l2257
  6033                           
  6034                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
  6035  0453  1018               	bcf	24,0	;volatile
  6036                           
  6037                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
  6038  0454  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6039  0455  0097               	movwf	23	;volatile
  6040                           
  6041                           ;tmr1.c: 133: TMR1L = timerVal;
  6042  0456  0870               	movf	TMR1_WriteTimer@timerVal,w
  6043  0457  0096               	movwf	22	;volatile
  6044                           
  6045                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
  6046  0458  1418               	bsf	24,0	;volatile
  6047                           
  6048                           ;tmr1.c: 137: }
  6049  0459  0008               	return
  6050  045A                     i1l2257:
  6051                           
  6052                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
  6053  045A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6054  045B  0097               	movwf	23	;volatile
  6055                           
  6056                           ;tmr1.c: 142: TMR1L = timerVal;
  6057  045C  0870               	movf	TMR1_WriteTimer@timerVal,w
  6058  045D  0096               	movwf	22	;volatile
  6059  045E  0008               	return
  6060  045F                     __end_of_TMR1_WriteTimer:
  6061                           
  6062                           	psect	text42
  6063  047A                     __ptext42:	
  6064 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6065 ;; Defined at:
  6066 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6080 ;;      Params:         0       0       0       0
  6081 ;;      Locals:         0       0       0       0
  6082 ;;      Temps:          0       0       0       0
  6083 ;;      Totals:         0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_TMR1_Initialize
  6090 ;;		_TMR1_ISR
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _TMR1_DefaultInterruptHandler
  6096  047A                     _TMR1_DefaultInterruptHandler:
  6097                           
  6098                           ;tmr1.c: 182: timerMS++;
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg]
  6102  047A  3001               	movlw	1
  6103  047B  0020               	movlb	0	; select bank0
  6104  047C  07A3               	addwf	_timerMS,f
  6105  047D  3000               	movlw	0
  6106  047E  1803               	skipnc
  6107  047F  3001               	movlw	1
  6108  0480  07A4               	addwf	_timerMS+1,f
  6109  0481  3000               	movlw	0
  6110  0482  1803               	skipnc
  6111  0483  3001               	movlw	1
  6112  0484  07A5               	addwf	_timerMS+2,f
  6113  0485  0008               	return
  6114  0486                     __end_of_TMR1_DefaultInterruptHandler:
  6115                           
  6116                           	psect	text43
  6117  051C                     __ptext43:	
  6118 ;; *************** function _PIN_MANAGER_IOC *****************
  6119 ;; Defined at:
  6120 ;;		line 120 in file "mcc_generated_files/pin_manager.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;		None
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0, pclath, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6134 ;;      Params:         0       0       0       0
  6135 ;;      Locals:         0       0       0       0
  6136 ;;      Temps:          0       0       0       0
  6137 ;;      Totals:         0       0       0       0
  6138 ;;Total ram usage:        0 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    3
  6141 ;; This function calls:
  6142 ;;		_IOCAF3_ISR
  6143 ;; This function is called by:
  6144 ;;		_INTERRUPT_InterruptManager
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           
  6149                           ;psect for function _PIN_MANAGER_IOC
  6150  051C                     _PIN_MANAGER_IOC:
  6151                           
  6152                           ;pin_manager.c: 123: if(IOCAFbits.IOCAF3 == 1)
  6153                           
  6154                           ;incstack = 0
  6155                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6156  051C  0027               	movlb	7	; select bank7
  6157  051D  1D93               	btfss	19,3	;volatile
  6158  051E  0008               	return
  6159                           
  6160                           ;pin_manager.c: 124: {;pin_manager.c: 125: IOCAF3_ISR();
  6161  051F  246D               	fcall	_IOCAF3_ISR
  6162  0520  0008               	return
  6163  0521                     __end_of_PIN_MANAGER_IOC:
  6164                           
  6165                           	psect	text44
  6166  046D                     __ptext44:	
  6167 ;; *************** function _IOCAF3_ISR *****************
  6168 ;; Defined at:
  6169 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;		None
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6183 ;;      Params:         0       0       0       0
  6184 ;;      Locals:         0       0       0       0
  6185 ;;      Temps:          0       0       0       0
  6186 ;;      Totals:         0       0       0       0
  6187 ;;Total ram usage:        0 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    2
  6190 ;; This function calls:
  6191 ;;		Absolute function
  6192 ;;		_IOCAF3_DefaultInterruptHandler
  6193 ;;		_buttonHandler
  6194 ;; This function is called by:
  6195 ;;		_PIN_MANAGER_IOC
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           
  6200                           ;psect for function _IOCAF3_ISR
  6201  046D                     _IOCAF3_ISR:
  6202                           
  6203                           ;pin_manager.c: 137: if(IOCAF3_InterruptHandler)
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  6207  046D  0020               	movlb	0	; select bank0
  6208  046E  0852               	movf	_IOCAF3_InterruptHandler,w
  6209  046F  0453               	iorwf	_IOCAF3_InterruptHandler+1,w
  6210  0470  1903               	btfsc	3,2
  6211  0471  2C77               	goto	i1l2245
  6212                           
  6213                           ;pin_manager.c: 138: {;pin_manager.c: 139: IOCAF3_InterruptHandler();
  6214  0472  0853               	movf	_IOCAF3_InterruptHandler+1,w
  6215  0473  008A               	movwf	10
  6216  0474  0852               	movf	_IOCAF3_InterruptHandler,w
  6217  0475  000A               	callw
  6218  0476  3184               	pagesel	$
  6219  0477                     i1l2245:
  6220                           
  6221                           ;pin_manager.c: 140: };pin_manager.c: 141: IOCAFbits.IOCAF3 = 0;
  6222  0477  0027               	movlb	7	; select bank7
  6223  0478  1193               	bcf	19,3	;volatile
  6224  0479  0008               	return
  6225  047A                     __end_of_IOCAF3_ISR:
  6226                           
  6227                           	psect	text45
  6228  0552                     __ptext45:	
  6229 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  6230 ;; Defined at:
  6231 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		None
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6245 ;;      Params:         0       0       0       0
  6246 ;;      Locals:         0       0       0       0
  6247 ;;      Temps:          0       0       0       0
  6248 ;;      Totals:         0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_PIN_MANAGER_Initialize
  6255 ;;		_IOCAF3_ISR
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _IOCAF3_DefaultInterruptHandler
  6261  0552                     _IOCAF3_DefaultInterruptHandler:
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
  6265  0552  0008               	return
  6266  0553                     __end_of_IOCAF3_DefaultInterruptHandler:
  6267                           
  6268                           	psect	text46
  6269  0416                     __ptext46:	
  6270 ;; *************** function _buttonHandler *****************
  6271 ;; Defined at:
  6272 ;;		line 191 in file "main.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6286 ;;      Params:         0       0       0       0
  6287 ;;      Locals:         0       0       0       0
  6288 ;;      Temps:          0       0       0       0
  6289 ;;      Totals:         0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    1
  6293 ;; This function calls:
  6294 ;;		i1_getTimerMS
  6295 ;; This function is called by:
  6296 ;;		_main
  6297 ;;		_IOCAF3_ISR
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _buttonHandler
  6303  0416                     _buttonHandler:
  6304                           
  6305                           ;main.c: 193: if (shortPress || longPress || changePress)
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _buttonHandler: [wreg+status,2+status,0+pclath+cstack]
  6309  0416  0020               	movlb	0	; select bank0
  6310  0417  0835               	movf	_shortPress,w
  6311  0418  1D03               	btfss	3,2
  6312  0419  0008               	return
  6313  041A  0836               	movf	_longPress,w
  6314  041B  1D03               	btfss	3,2
  6315  041C  0008               	return
  6316  041D  0834               	movf	_changePress,w
  6317  041E  1D03               	btfss	3,2
  6318  041F  0008               	return
  6319                           
  6320                           ;main.c: 196: if (PORTAbits.RA3 == 0) {
  6321  0420  198C               	btfsc	12,3	;volatile
  6322  0421  0008               	return
  6323                           
  6324                           ;main.c: 197: pressTime = getTimerMS();
  6325  0422  24D8               	fcall	i1_getTimerMS
  6326  0423  0870               	movf	?i1_getTimerMS,w
  6327  0424  0020               	movlb	0	; select bank0
  6328  0425  00A0               	movwf	_pressTime
  6329  0426  0871               	movf	?i1_getTimerMS+1,w
  6330  0427  00A1               	movwf	_pressTime+1
  6331  0428  0872               	movf	?i1_getTimerMS+2,w
  6332  0429  00A2               	movwf	_pressTime+2
  6333  042A  0008               	return
  6334  042B                     __end_of_buttonHandler:
  6335                           
  6336                           	psect	text47
  6337  04D8                     __ptext47:	
  6338 ;; *************** function i1_getTimerMS *****************
  6339 ;; Defined at:
  6340 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  3    0[COMMON] unsigned um
  6347 ;; Registers used:
  6348 ;;		wreg
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6354 ;;      Params:         3       0       0       0
  6355 ;;      Locals:         0       0       0       0
  6356 ;;      Temps:          0       0       0       0
  6357 ;;      Totals:         3       0       0       0
  6358 ;;Total ram usage:        3 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_buttonHandler
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function i1_getTimerMS
  6369  04D8                     i1_getTimerMS:
  6370                           
  6371                           ;tmr1.c: 187: return timerMS;
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in i1_getTimerMS: [wreg]
  6375  04D8  0020               	movlb	0	; select bank0
  6376  04D9  0823               	movf	_timerMS,w
  6377  04DA  00F0               	movwf	?i1_getTimerMS
  6378  04DB  0824               	movf	_timerMS+1,w
  6379  04DC  00F1               	movwf	?i1_getTimerMS+1
  6380  04DD  0825               	movf	_timerMS+2,w
  6381  04DE  00F2               	movwf	?i1_getTimerMS+2
  6382  04DF  0008               	return
  6383  04E0                     __end_ofi1_getTimerMS:
  6384                           
  6385                           	psect	text48
  6386  04B7                     __ptext48:	
  6387 ;; *************** function _ADC1_ISR *****************
  6388 ;; Defined at:
  6389 ;;		line 176 in file "mcc_generated_files/adc1.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6403 ;;      Params:         0       0       0       0
  6404 ;;      Locals:         0       0       0       0
  6405 ;;      Temps:          0       0       0       0
  6406 ;;      Totals:         0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    3
  6410 ;; This function calls:
  6411 ;;		_ADC1_GetConversionResult
  6412 ;;		_calculateVolume
  6413 ;; This function is called by:
  6414 ;;		_INTERRUPT_InterruptManager
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function _ADC1_ISR
  6420  04B7                     _ADC1_ISR:
  6421                           
  6422                           ;adc1.c: 178: calculateVolume(ADC1_GetConversionResult()) ;
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _ADC1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6426  04B7  2511               	fcall	_ADC1_GetConversionResult
  6427  04B8  0871               	movf	?_ADC1_GetConversionResult+1,w
  6428  04B9  00F8               	movwf	calculateVolume@level+1
  6429  04BA  0870               	movf	?_ADC1_GetConversionResult,w
  6430  04BB  00F7               	movwf	calculateVolume@level
  6431  04BC  2044               	fcall	_calculateVolume
  6432                           
  6433                           ;adc1.c: 181: PIR1bits.ADIF = 0;
  6434  04BD  0020               	movlb	0	; select bank0
  6435  04BE  1311               	bcf	17,6	;volatile
  6436  04BF  0008               	return
  6437  04C0                     __end_of_ADC1_ISR:
  6438                           
  6439                           	psect	text49
  6440  0044                     __ptext49:	
  6441 ;; *************** function _calculateVolume *****************
  6442 ;; Defined at:
  6443 ;;		line 204 in file "mcc_generated_files/adc1.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  level           2    7[COMMON] unsigned int 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6457 ;;      Params:         2       0       0       0
  6458 ;;      Locals:         0       0       0       0
  6459 ;;      Temps:          3       0       0       0
  6460 ;;      Totals:         5       0       0       0
  6461 ;;Total ram usage:        5 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    2
  6464 ;; This function calls:
  6465 ;;		i1_setLED
  6466 ;; This function is called by:
  6467 ;;		_ADC1_ISR
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _calculateVolume
  6473  0044                     _calculateVolume:
  6474                           
  6475                           ;adc1.c: 206: if (runTriggers) {
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _calculateVolume: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6479  0044  0020               	movlb	0	; select bank0
  6480  0045  0857               	movf	_runTriggers,w
  6481  0046  1903               	btfsc	3,2
  6482  0047  0008               	return
  6483                           
  6484                           ;adc1.c: 208: if (level > maxLevel)
  6485  0048  0878               	movf	calculateVolume@level+1,w
  6486  0049  0227               	subwf	_maxLevel+1,w
  6487  004A  1D03               	skipz
  6488  004B  284E               	goto	u59_25
  6489  004C  0877               	movf	calculateVolume@level,w
  6490  004D  0226               	subwf	_maxLevel,w
  6491  004E                     u59_25:
  6492  004E  1803               	skipnc
  6493  004F  2854               	goto	i1l288
  6494                           
  6495                           ;adc1.c: 209: maxLevel = level;
  6496  0050  0878               	movf	calculateVolume@level+1,w
  6497  0051  00A7               	movwf	_maxLevel+1
  6498  0052  0877               	movf	calculateVolume@level,w
  6499  0053  00A6               	movwf	_maxLevel
  6500  0054                     i1l288:
  6501                           
  6502                           ;adc1.c: 210: if (level < minLevel)
  6503  0054  0856               	movf	_minLevel+1,w
  6504  0055  0278               	subwf	calculateVolume@level+1,w
  6505  0056  1D03               	skipz
  6506  0057  285A               	goto	u60_25
  6507  0058  0855               	movf	_minLevel,w
  6508  0059  0277               	subwf	calculateVolume@level,w
  6509  005A                     u60_25:
  6510  005A  1803               	skipnc
  6511  005B  2860               	goto	i1l289
  6512                           
  6513                           ;adc1.c: 211: minLevel = level;
  6514  005C  0878               	movf	calculateVolume@level+1,w
  6515  005D  00D6               	movwf	_minLevel+1
  6516  005E  0877               	movf	calculateVolume@level,w
  6517  005F  00D5               	movwf	_minLevel
  6518  0060                     i1l289:
  6519                           
  6520                           ;adc1.c: 214: if (samples++ >= 500) {
  6521  0060  082B               	movf	_samples+1,w
  6522  0061  00FA               	movwf	??_calculateVolume+1
  6523  0062  082A               	movf	_samples,w
  6524  0063  00F9               	movwf	??_calculateVolume
  6525  0064  0AAA               	incf	_samples,f
  6526  0065  1903               	skipnz
  6527  0066  0AAB               	incf	_samples+1,f
  6528  0067  3001               	movlw	1
  6529  0068  027A               	subwf	??_calculateVolume+1,w
  6530  0069  30F4               	movlw	244
  6531  006A  1903               	skipnz
  6532  006B  0279               	subwf	??_calculateVolume,w
  6533  006C  1C03               	skipc
  6534  006D  0008               	return
  6535                           
  6536                           ;adc1.c: 215: volume = (uint16_t)(maxLevel - minLevel);
  6537  006E  0855               	movf	_minLevel,w
  6538  006F  0226               	subwf	_maxLevel,w
  6539  0070  00A8               	movwf	_volume
  6540  0071  0856               	movf	_minLevel+1,w
  6541  0072  3B27               	subwfb	_maxLevel+1,w
  6542  0073  00A9               	movwf	_volume+1
  6543                           
  6544                           ;adc1.c: 218: if (volume > 0x4B80UL)
  6545  0074  304B               	movlw	75
  6546  0075  0229               	subwf	_volume+1,w
  6547  0076  3081               	movlw	129
  6548  0077  1903               	skipnz
  6549  0078  0228               	subwf	_volume,w
  6550  0079  1C03               	skipc
  6551  007A  287D               	goto	i1l2283
  6552                           
  6553                           ;adc1.c: 219: sampleTriggers += 2;
  6554  007B  3002               	movlw	2
  6555  007C  2885               	goto	L1
  6556  007D                     i1l2283:
  6557                           
  6558                           ;adc1.c: 220: else if (volume > 0x12C0UL)
  6559  007D  3012               	movlw	18
  6560  007E  0229               	subwf	_volume+1,w
  6561  007F  30C1               	movlw	193
  6562  0080  1903               	skipnz
  6563  0081  0228               	subwf	_volume,w
  6564  0082  1C03               	skipc
  6565  0083  2888               	goto	i1l292
  6566                           
  6567                           ;adc1.c: 221: sampleTriggers += 1;
  6568  0084  3001               	movlw	1
  6569  0085                     L1:
  6570  0085  00F9               	movwf	??_calculateVolume
  6571  0086  0879               	movf	??_calculateVolume,w
  6572  0087  07FD               	addwf	_sampleTriggers,f
  6573  0088                     i1l292:
  6574                           
  6575                           ;adc1.c: 224: if (++sampleNumber >= 10) {
  6576  0088  3001               	movlw	1
  6577  0089  00F9               	movwf	??_calculateVolume
  6578  008A  0879               	movf	??_calculateVolume,w
  6579  008B  07B7               	addwf	_sampleNumber,f
  6580  008C  300A               	movlw	10
  6581  008D  0237               	subwf	_sampleNumber,w
  6582  008E  1C03               	skipc
  6583  008F  28C2               	goto	i1l2301
  6584                           
  6585                           ;adc1.c: 226: totalTriggers -= triggersEachInt[secondIndex];
  6586  0090  087C               	movf	_secondIndex,w
  6587  0091  3EA0               	addlw	(low (_triggersEachInt| 0))& (0+255)
  6588  0092  0086               	movwf	6
  6589  0093  0187               	clrf	7
  6590  0094  0801               	movf	1,w
  6591  0095  00F9               	movwf	??_calculateVolume
  6592  0096  01FA               	clrf	??_calculateVolume+1
  6593  0097  0879               	movf	??_calculateVolume,w
  6594  0098  02AC               	subwf	_totalTriggers,f
  6595  0099  087A               	movf	??_calculateVolume+1,w
  6596  009A  3BAD               	subwfb	_totalTriggers+1,f
  6597                           
  6598                           ;adc1.c: 227: triggersEachInt[secondIndex] = sampleTriggers;
  6599  009B  087D               	movf	_sampleTriggers,w
  6600  009C  00F9               	movwf	??_calculateVolume
  6601  009D  087C               	movf	_secondIndex,w
  6602  009E  3EA0               	addlw	(low (_triggersEachInt| 0))& (0+255)
  6603  009F  0086               	movwf	6
  6604  00A0  0187               	clrf	7
  6605  00A1  0879               	movf	??_calculateVolume,w
  6606  00A2  0081               	movwf	1
  6607                           
  6608                           ;adc1.c: 228: totalTriggers += sampleTriggers;
  6609  00A3  087D               	movf	_sampleTriggers,w
  6610  00A4  00F9               	movwf	??_calculateVolume
  6611  00A5  01FA               	clrf	??_calculateVolume+1
  6612  00A6  0879               	movf	??_calculateVolume,w
  6613  00A7  07AC               	addwf	_totalTriggers,f
  6614  00A8  087A               	movf	??_calculateVolume+1,w
  6615  00A9  3DAD               	addwfc	_totalTriggers+1,f
  6616                           
  6617                           ;adc1.c: 230: if (++secondIndex == 40)
  6618  00AA  3001               	movlw	1
  6619  00AB  00F9               	movwf	??_calculateVolume
  6620  00AC  0879               	movf	??_calculateVolume,w
  6621  00AD  07FC               	addwf	_secondIndex,f
  6622  00AE  3028               	movlw	40
  6623  00AF  067C               	xorwf	_secondIndex,w
  6624  00B0  1903               	btfsc	3,2
  6625                           
  6626                           ;adc1.c: 231: secondIndex = 0;
  6627  00B1  01FC               	clrf	_secondIndex
  6628                           
  6629                           ;adc1.c: 233: setLED(0, 0, totalTriggers >> 1);
  6630  00B2  01F2               	clrf	i1setLED@green
  6631  00B3  082D               	movf	_totalTriggers+1,w
  6632  00B4  00FA               	movwf	??_calculateVolume+1
  6633  00B5  082C               	movf	_totalTriggers,w
  6634  00B6  00F9               	movwf	??_calculateVolume
  6635  00B7  36FA               	lsrf	??_calculateVolume+1,f
  6636  00B8  0CF9               	rrf	??_calculateVolume,f
  6637  00B9  0879               	movf	??_calculateVolume,w
  6638  00BA  00FB               	movwf	??_calculateVolume+2
  6639  00BB  087B               	movf	??_calculateVolume+2,w
  6640  00BC  00F3               	movwf	i1setLED@blue
  6641  00BD  3000               	movlw	0
  6642  00BE  234E               	fcall	i1_setLED
  6643                           
  6644                           ;adc1.c: 235: sampleTriggers = 0;
  6645  00BF  01FD               	clrf	_sampleTriggers
  6646                           
  6647                           ;adc1.c: 236: sampleNumber = 0;
  6648  00C0  0020               	movlb	0	; select bank0
  6649  00C1  01B7               	clrf	_sampleNumber
  6650  00C2                     i1l2301:
  6651                           
  6652                           ;adc1.c: 237: };adc1.c: 239: samples = 0;
  6653  00C2  01AA               	clrf	_samples
  6654  00C3  01AB               	clrf	_samples+1
  6655                           
  6656                           ;adc1.c: 240: minLevel = 0xFFFFUL;
  6657  00C4  30FF               	movlw	255
  6658  00C5  00D5               	movwf	_minLevel
  6659  00C6  30FF               	movlw	255
  6660  00C7  00D6               	movwf	_minLevel+1
  6661                           
  6662                           ;adc1.c: 241: maxLevel = 0x0000UL;
  6663  00C8  01A6               	clrf	_maxLevel
  6664  00C9  01A7               	clrf	_maxLevel+1
  6665  00CA  0008               	return
  6666  00CB                     __end_of_calculateVolume:
  6667                           
  6668                           	psect	text50
  6669  034E                     __ptext50:	
  6670 ;; *************** function i1_setLED *****************
  6671 ;; Defined at:
  6672 ;;		line 180 in file "main.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  red             1    wreg     unsigned char 
  6675 ;;  green           1    2[COMMON] unsigned char 
  6676 ;;  blue            1    3[COMMON] unsigned char 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  red             1    6[COMMON] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6688 ;;      Params:         2       0       0       0
  6689 ;;      Locals:         1       0       0       0
  6690 ;;      Temps:          2       0       0       0
  6691 ;;      Totals:         5       0       0       0
  6692 ;;Total ram usage:        5 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    1
  6695 ;; This function calls:
  6696 ;;		i1_PWM1_DutyCycleSet
  6697 ;;		i1_PWM1_LoadBufferSet
  6698 ;;		i1_PWM2_DutyCycleSet
  6699 ;;		i1_PWM2_LoadBufferSet
  6700 ;;		i1_PWM3_DutyCycleSet
  6701 ;;		i1_PWM3_LoadBufferSet
  6702 ;; This function is called by:
  6703 ;;		_calculateVolume
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           
  6708                           ;psect for function i1_setLED
  6709  034E                     i1_setLED:
  6710                           
  6711                           ;incstack = 0
  6712                           ; Regs used in i1_setLED: [wreg+status,2+status,0+pclath+cstack]
  6713                           ;i1setLED@red stored from wreg
  6714  034E  00F6               	movwf	i1setLED@red
  6715                           
  6716                           ;main.c: 182: PWM1_DutyCycleSet(green);
  6717  034F  0872               	movf	i1setLED@green,w
  6718  0350  00F4               	movwf	??i1_setLED
  6719  0351  01F5               	clrf	??i1_setLED+1
  6720  0352  0874               	movf	??i1_setLED,w
  6721  0353  00F0               	movwf	i1PWM1_DutyCycleSet@dutyCycleCount
  6722  0354  0875               	movf	??i1_setLED+1,w
  6723  0355  00F1               	movwf	i1PWM1_DutyCycleSet@dutyCycleCount+1
  6724  0356  250B               	fcall	i1_PWM1_DutyCycleSet
  6725                           
  6726                           ;main.c: 183: PWM2_DutyCycleSet(blue);
  6727  0357  0873               	movf	i1setLED@blue,w
  6728  0358  00F4               	movwf	??i1_setLED
  6729  0359  01F5               	clrf	??i1_setLED+1
  6730  035A  0874               	movf	??i1_setLED,w
  6731  035B  00F0               	movwf	i1PWM2_DutyCycleSet@dutyCycleCount
  6732  035C  0875               	movf	??i1_setLED+1,w
  6733  035D  00F1               	movwf	i1PWM2_DutyCycleSet@dutyCycleCount+1
  6734  035E  2505               	fcall	i1_PWM2_DutyCycleSet
  6735                           
  6736                           ;main.c: 184: PWM3_DutyCycleSet(red);
  6737  035F  0876               	movf	i1setLED@red,w
  6738  0360  00F4               	movwf	??i1_setLED
  6739  0361  01F5               	clrf	??i1_setLED+1
  6740  0362  0874               	movf	??i1_setLED,w
  6741  0363  00F0               	movwf	i1PWM3_DutyCycleSet@dutyCycleCount
  6742  0364  0875               	movf	??i1_setLED+1,w
  6743  0365  00F1               	movwf	i1PWM3_DutyCycleSet@dutyCycleCount+1
  6744  0366  24FF               	fcall	i1_PWM3_DutyCycleSet
  6745                           
  6746                           ;main.c: 186: PWM1_LoadBufferSet();
  6747  0367  254F               	fcall	i1_PWM1_LoadBufferSet
  6748                           
  6749                           ;main.c: 187: PWM2_LoadBufferSet();
  6750  0368  254C               	fcall	i1_PWM2_LoadBufferSet
  6751                           
  6752                           ;main.c: 188: PWM3_LoadBufferSet();
  6753  0369  2549               	fcall	i1_PWM3_LoadBufferSet
  6754  036A  0008               	return
  6755  036B                     __end_ofi1_setLED:
  6756                           
  6757                           	psect	text51
  6758  0549                     __ptext51:	
  6759 ;; *************** function i1_PWM3_LoadBufferSet *****************
  6760 ;; Defined at:
  6761 ;;		line 130 in file "mcc_generated_files/pwm3.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;		None
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		None
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6775 ;;      Params:         0       0       0       0
  6776 ;;      Locals:         0       0       0       0
  6777 ;;      Temps:          0       0       0       0
  6778 ;;      Totals:         0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		i1_setLED
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           
  6789                           ;psect for function i1_PWM3_LoadBufferSet
  6790  0549                     i1_PWM3_LoadBufferSet:
  6791                           
  6792                           ;pwm3.c: 132: PWM3LDCONbits.LDA = 1;
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in i1_PWM3_LoadBufferSet: []
  6796  0549  003B               	movlb	27	; select bank27
  6797  054A  17BF               	bsf	63,7	;volatile
  6798  054B  0008               	return
  6799  054C                     __end_ofi1_PWM3_LoadBufferSet:
  6800                           
  6801                           	psect	text52
  6802  04FF                     __ptext52:	
  6803 ;; *************** function i1_PWM3_DutyCycleSet *****************
  6804 ;; Defined at:
  6805 ;;		line 141 in file "mcc_generated_files/pwm3.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6819 ;;      Params:         2       0       0       0
  6820 ;;      Locals:         0       0       0       0
  6821 ;;      Temps:          0       0       0       0
  6822 ;;      Totals:         2       0       0       0
  6823 ;;Total ram usage:        2 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		i1_setLED
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function i1_PWM3_DutyCycleSet
  6834  04FF                     i1_PWM3_DutyCycleSet:
  6835                           
  6836                           ;pwm3.c: 143: PWM3DCH = (dutyCycleCount>>8);
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in i1_PWM3_DutyCycleSet: [wreg+status,2]
  6840  04FF  0871               	movf	i1PWM3_DutyCycleSet@dutyCycleCount+1,w
  6841  0500  003B               	movlb	27	; select bank27
  6842  0501  00B4               	movwf	52	;volatile
  6843                           
  6844                           ;pwm3.c: 144: PWM3DCL = (dutyCycleCount);
  6845  0502  0870               	movf	i1PWM3_DutyCycleSet@dutyCycleCount,w
  6846  0503  00B3               	movwf	51	;volatile
  6847  0504  0008               	return
  6848  0505                     __end_ofi1_PWM3_DutyCycleSet:
  6849                           
  6850                           	psect	text53
  6851  054C                     __ptext53:	
  6852 ;; *************** function i1_PWM2_LoadBufferSet *****************
  6853 ;; Defined at:
  6854 ;;		line 130 in file "mcc_generated_files/pwm2.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		None
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6868 ;;      Params:         0       0       0       0
  6869 ;;      Locals:         0       0       0       0
  6870 ;;      Temps:          0       0       0       0
  6871 ;;      Totals:         0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		i1_setLED
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function i1_PWM2_LoadBufferSet
  6883  054C                     i1_PWM2_LoadBufferSet:
  6884                           
  6885                           ;pwm2.c: 132: PWM2LDCONbits.LDA = 1;
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in i1_PWM2_LoadBufferSet: []
  6889  054C  003B               	movlb	27	; select bank27
  6890  054D  17AF               	bsf	47,7	;volatile
  6891  054E  0008               	return
  6892  054F                     __end_ofi1_PWM2_LoadBufferSet:
  6893                           
  6894                           	psect	text54
  6895  0505                     __ptext54:	
  6896 ;; *************** function i1_PWM2_DutyCycleSet *****************
  6897 ;; Defined at:
  6898 ;;		line 141 in file "mcc_generated_files/pwm2.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6912 ;;      Params:         2       0       0       0
  6913 ;;      Locals:         0       0       0       0
  6914 ;;      Temps:          0       0       0       0
  6915 ;;      Totals:         2       0       0       0
  6916 ;;Total ram usage:        2 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		i1_setLED
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function i1_PWM2_DutyCycleSet
  6927  0505                     i1_PWM2_DutyCycleSet:
  6928                           
  6929                           ;pwm2.c: 143: PWM2DCH = (dutyCycleCount>>8);
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in i1_PWM2_DutyCycleSet: [wreg+status,2]
  6933  0505  0871               	movf	i1PWM2_DutyCycleSet@dutyCycleCount+1,w
  6934  0506  003B               	movlb	27	; select bank27
  6935  0507  00A4               	movwf	36	;volatile
  6936                           
  6937                           ;pwm2.c: 144: PWM2DCL = (dutyCycleCount);
  6938  0508  0870               	movf	i1PWM2_DutyCycleSet@dutyCycleCount,w
  6939  0509  00A3               	movwf	35	;volatile
  6940  050A  0008               	return
  6941  050B                     __end_ofi1_PWM2_DutyCycleSet:
  6942                           
  6943                           	psect	text55
  6944  054F                     __ptext55:	
  6945 ;; *************** function i1_PWM1_LoadBufferSet *****************
  6946 ;; Defined at:
  6947 ;;		line 130 in file "mcc_generated_files/pwm1.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		None
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6961 ;;      Params:         0       0       0       0
  6962 ;;      Locals:         0       0       0       0
  6963 ;;      Temps:          0       0       0       0
  6964 ;;      Totals:         0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		i1_setLED
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           
  6975                           ;psect for function i1_PWM1_LoadBufferSet
  6976  054F                     i1_PWM1_LoadBufferSet:
  6977                           
  6978                           ;pwm1.c: 132: PWM1LDCONbits.LDA = 1;
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in i1_PWM1_LoadBufferSet: []
  6982  054F  003B               	movlb	27	; select bank27
  6983  0550  179F               	bsf	31,7	;volatile
  6984  0551  0008               	return
  6985  0552                     __end_ofi1_PWM1_LoadBufferSet:
  6986                           
  6987                           	psect	text56
  6988  050B                     __ptext56:	
  6989 ;; *************** function i1_PWM1_DutyCycleSet *****************
  6990 ;; Defined at:
  6991 ;;		line 141 in file "mcc_generated_files/pwm1.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7005 ;;      Params:         2       0       0       0
  7006 ;;      Locals:         0       0       0       0
  7007 ;;      Temps:          0       0       0       0
  7008 ;;      Totals:         2       0       0       0
  7009 ;;Total ram usage:        2 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		i1_setLED
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function i1_PWM1_DutyCycleSet
  7020  050B                     i1_PWM1_DutyCycleSet:
  7021                           
  7022                           ;pwm1.c: 143: PWM1DCH = (dutyCycleCount>>8);
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in i1_PWM1_DutyCycleSet: [wreg+status,2]
  7026  050B  0871               	movf	i1PWM1_DutyCycleSet@dutyCycleCount+1,w
  7027  050C  003B               	movlb	27	; select bank27
  7028  050D  0094               	movwf	20	;volatile
  7029                           
  7030                           ;pwm1.c: 144: PWM1DCL = (dutyCycleCount);
  7031  050E  0870               	movf	i1PWM1_DutyCycleSet@dutyCycleCount,w
  7032  050F  0093               	movwf	19	;volatile
  7033  0510  0008               	return
  7034  0511                     __end_ofi1_PWM1_DutyCycleSet:
  7035                           
  7036                           	psect	text57
  7037  0511                     __ptext57:	
  7038 ;; *************** function _ADC1_GetConversionResult *****************
  7039 ;; Defined at:
  7040 ;;		line 113 in file "mcc_generated_files/adc1.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  2    0[COMMON] unsigned int 
  7047 ;; Registers used:
  7048 ;;		wreg
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7054 ;;      Params:         2       0       0       0
  7055 ;;      Locals:         0       0       0       0
  7056 ;;      Temps:          0       0       0       0
  7057 ;;      Totals:         2       0       0       0
  7058 ;;Total ram usage:        2 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_ADC1_ISR
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _ADC1_GetConversionResult
  7069  0511                     _ADC1_GetConversionResult:
  7070                           
  7071                           ;adc1.c: 116: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in _ADC1_GetConversionResult: [wreg]
  7075  0511  0021               	movlb	1	; select bank1
  7076  0512  081C               	movf	28,w	;volatile
  7077  0513  00F1               	movwf	?_ADC1_GetConversionResult+1
  7078  0514  081B               	movf	27,w	;volatile
  7079  0515  00F0               	movwf	?_ADC1_GetConversionResult
  7080  0516  0008               	return
  7081  0517                     __end_of_ADC1_GetConversionResult:
  7082  007E                     btemp	set	126	;btemp
  7083  007E                     int$flags	set	126
  7084  007E                     wtemp0	set	126
  7085                           
  7086                           	psect	config
  7087                           
  7088                           ;Config register CONFIG1 @ 0x8007
  7089                           ;	
  7090                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  7091                           ;	Watchdog Timer Enable
  7092                           ;	WDTE = OFF, WDT disabled
  7093                           ;	Power-up Timer Enable
  7094                           ;	PWRTE = OFF, PWRT disabled
  7095                           ;	MCLR Pin Function Select
  7096                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  7097                           ;	Flash Program Memory Code Protection
  7098                           ;	CP = OFF, Program memory code protection is disabled
  7099                           ;	Brown-out Reset Enable
  7100                           ;	BOREN = OFF, Brown-out Reset disabled
  7101                           ;	Clock Out Enable
  7102                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7103  8007                     	org	32775
  7104  8007  39A4               	dw	14756
  7105                           
  7106                           ;Config register CONFIG2 @ 0x8008
  7107                           ;	Flash Memory Self-Write Protection
  7108                           ;	WRT = OFF, Write protection off
  7109                           ;	PLL Enable
  7110                           ;	PLLEN = OFF, 4x PLL disabled
  7111                           ;	Stack Overflow/Underflow Reset Enable
  7112                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7113                           ;	Brown-out Reset Voltage Selection
  7114                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7115                           ;	Low Power Brown-out Reset enable bit
  7116                           ;	LPBOREN = OFF, LPBOR is disabled
  7117                           ;	Low-Voltage Programming Enable
  7118                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7119  8008                     	org	32776
  7120  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        44
    BSS         66
    Persistent  39
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     22      56
    BANK1            80      0      40
    BANK2            80      0      41

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 40
		 -> triggersEachInt(BANK1[40]), 

    memset@p	PTR unsigned char  size(1) Largest target is 40
		 -> triggersEachInt(BANK1[40]), 

    sp__memset	PTR void  size(1) Largest target is 40
		 -> triggersEachInt(BANK1[40]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonHandler(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonHandler(), Absolute function(), IOCAF3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _buttonHandler->i1_getTimerMS
    _ADC1_ISR->_calculateVolume
    _calculateVolume->i1_setLED
    i1_setLED->i1_PWM1_DutyCycleSet
    i1_setLED->i1_PWM2_DutyCycleSet
    i1_setLED->i1_PWM3_DutyCycleSet

Critical Paths under _main in BANK0

    _main->_powerDown
    _tickle->_delay
    _powerUpTest->_flashRev
    _powerDown->_flashRev
    _resetVolumeLimit->_memset
    _flashRev->_delay
    _delay->_getTimerMS
    _buttonPressed->_setLED
    _setLED->_PWM1_DutyCycleSet
    _setLED->_PWM2_DutyCycleSet
    _setLED->_PWM3_DutyCycleSet
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   27412
         _IOCAF3_SetInterruptHandler
                  _SYSTEM_Initialize
                      _buttonPressed
                        _checkVolume
                       _clearPresses
                              _delay
                          _powerDown
                        _powerUpTest
                       _resetTimerMS
                   _resetVolumeLimit
                             _tickle
 ---------------------------------------------------------------------------------
 (1) _tickle                                               4     4      0    4633
                                             12 BANK0      4     4      0
                              _delay
                   _resetVolumeLimit
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _powerUpTest                                          0     0      0    5556
                              _delay
                           _flashRev
 ---------------------------------------------------------------------------------
 (1) _powerDown                                            4     4      0   12252
                                             18 BANK0      4     4      0
                         _PWM1_Start
                          _PWM1_Stop
                         _PWM2_Start
                          _PWM2_Stop
                         _PWM3_Start
                          _PWM3_Stop
                      _buttonPressed
                       _clearPresses
                              _delay
                           _flashRev
                         _getTimerMS
                       _resetTimerMS
                   _resetVolumeLimit
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _resetVolumeLimit                                     0     0      0     254
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     254
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _resetTimerMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flashRev                                             6     6      0    4423
                                             12 BANK0      6     6      0
                              _delay
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _delay                                                9     6      3    1133
                                              3 BANK0      9     6      3
                         _getTimerMS
 ---------------------------------------------------------------------------------
 (2) _clearPresses                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buttonPressed                                        4     4      0    3198
                                              7 BANK0      4     4      0
                         _getTimerMS
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               5     3      2    3154
                                              2 BANK0      5     3      2
                  _PWM1_DutyCycleSet
                 _PWM1_LoadBufferSet
                  _PWM2_DutyCycleSet
                 _PWM2_LoadBufferSet
                  _PWM3_DutyCycleSet
                 _PWM3_LoadBufferSet
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM3_DutyCycleSet                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_DutyCycleSet                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_DutyCycleSet                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getTimerMS                                           3     0      3       0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PWM3_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkVolume                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     236
                    _ADC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     150
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     696
                           _ADC1_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     216
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     216
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
                      _buttonHandler *
 ---------------------------------------------------------------------------------
 (8) _buttonHandler                                        0     0      0       0
                       i1_getTimerMS
 ---------------------------------------------------------------------------------
 (9) i1_getTimerMS                                         3     0      3       0
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (8) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC1_ISR                                             0     0      0     480
           _ADC1_GetConversionResult
                    _calculateVolume
 ---------------------------------------------------------------------------------
 (7) _calculateVolume                                      5     3      2     480
                                              7 COMMON     5     3      2
           _ADC1_GetConversionResult (ARG)
                           i1_setLED
 ---------------------------------------------------------------------------------
 (8) i1_setLED                                             5     3      2     328
                                              2 COMMON     5     3      2
                i1_PWM1_DutyCycleSet
               i1_PWM1_LoadBufferSet
                i1_PWM2_DutyCycleSet
               i1_PWM2_LoadBufferSet
                i1_PWM3_DutyCycleSet
               i1_PWM3_LoadBufferSet
 ---------------------------------------------------------------------------------
 (9) i1_PWM3_LoadBufferSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_PWM3_DutyCycleSet                                  2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) i1_PWM2_LoadBufferSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_PWM2_DutyCycleSet                                  2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) i1_PWM1_LoadBufferSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_PWM1_DutyCycleSet                                  2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ADC1_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF3_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF3_SetInterruptHandler
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _buttonPressed
     _getTimerMS
     _setLED
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
   _checkVolume
   _clearPresses
   _delay
     _getTimerMS
   _powerDown
     _PWM1_Start
     _PWM1_Stop
     _PWM2_Start
     _PWM2_Stop
     _PWM3_Start
     _PWM3_Stop
     _buttonPressed
       _getTimerMS
       _setLED
         _PWM1_DutyCycleSet
         _PWM1_LoadBufferSet
         _PWM2_DutyCycleSet
         _PWM2_LoadBufferSet
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
     _clearPresses
     _delay
       _getTimerMS
     _flashRev
       _delay
         _getTimerMS
       _setLED
         _PWM1_DutyCycleSet
         _PWM1_LoadBufferSet
         _PWM2_DutyCycleSet
         _PWM2_LoadBufferSet
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
     _getTimerMS
     _resetTimerMS
     _resetVolumeLimit
       _memset
     _setLED
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
   _powerUpTest
     _delay
       _getTimerMS
     _flashRev
       _delay
         _getTimerMS
       _setLED
         _PWM1_DutyCycleSet
         _PWM1_LoadBufferSet
         _PWM2_DutyCycleSet
         _PWM2_LoadBufferSet
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
   _resetTimerMS
   _resetVolumeLimit
     _memset
   _tickle
     _delay
       _getTimerMS
     _resetVolumeLimit
       _memset
     _setLED
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet

 _INTERRUPT_InterruptManager (ROOT)
   _ADC1_ISR
     _ADC1_GetConversionResult
     _calculateVolume
       _ADC1_GetConversionResult (ARG)
       i1_setLED (ARG)
         i1_PWM1_DutyCycleSet
         i1_PWM1_LoadBufferSet
         i1_PWM2_DutyCycleSet
         i1_PWM2_LoadBufferSet
         i1_PWM3_DutyCycleSet
         i1_PWM3_LoadBufferSet
   _PIN_MANAGER_IOC
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
       _buttonHandler *
         i1_getTimerMS
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      97       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      28       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      29      10       51.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      97      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Mar 19 20:56:22 2021

                       ??_PWM3_DutyCycleSet 003A                                 _runTriggers 0057  
                            flashRev@r_1388 0048                             _timer0ReloadVal 0054  
                                       l755 01B4                                         l748 018F  
                                       _PR2 001B                                         u515 032B  
                                       u705 0118                                         u671 00DB  
                                       u672 00DC                                         u673 00E3  
                                       u674 00E4                                         u691 0105  
                                       u755 01F3                                         u692 0106  
                                       u693 010D                                         u685 00EE  
                                       u765 0226                                         u694 010E  
                                       u855 027A                             _timer1ReloadVal 0050  
                           _TMR2_Initialize 04D0                                         wreg 0009  
                __size_of_PWM2_DutyCycleSet 0009                   __end_of_PWM3_DutyCycleSet 04A5  
                                      l2111 031F                                        l2405 01F8  
                                      l2501 01A8                                        l2345 00F9  
                                      l2601 02B0                                        l2443 0384  
                                      l2435 0378                                        l2371 0140  
                                      l2355 0123                                        l2099 038D  
                                      l2365 0137                                        l2381 014C  
                                      l2605 02B8                                        l2359 012B  
                                      l2375 014A                                        l2463 015B  
                                      l2527 024D                                        l2369 013F  
                                      l2393 01C5                                        l2493 019D  
                                      l2469 0171                                        l2583 029C  
                                      l2593 02A8                            __end_of_ADC1_ISR 04C0  
                   __end_of_PWM1_Initialize 0416                                        _LATA 010C  
                                      _TMR0 0015                                        _TMR2 001A  
                     ?i1_PWM1_LoadBufferSet 0070                                        _WPUA 020C  
                                      _main 028B                                        _sine 0120  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E               __size_ofi1_PWM3_LoadBufferSet 0003  
                                      start 001E                  ??_TMR1_SetInterruptHandler 003A  
                     __size_ofi1_getTimerMS 0008                         i1_PWM1_DutyCycleSet 050B  
                   __end_of_PWM2_Initialize 03FF                     __end_of_TMR0_Initialize 046D  
            __size_of_OSCILLATOR_Initialize 0007                         __size_of_IOCAF3_ISR 000D  
              __end_ofi1_PWM2_LoadBufferSet 054F               __end_of_OSCILLATOR_Initialize 04E7  
                      __end_of_clearPresses 051C                                       ?_main 0070  
                          ?_calculateVolume 0077                                       _T1CON 0018  
                                     _T2CON 001C                                       i1l181 001C  
                                     i1l173 000B                                       i1l176 0015  
                                     i1l292 0088                                       i1l288 0054  
                                     i1l289 0060                                       _TMR1H 0017  
                                     _TMR1L 0016                                       u60_25 005A  
                                     _TRISA 008C                                       u59_25 004E  
                          __end_of_TMR1_ISR 0450                        __size_of_checkVolume 001C  
                               ?_PWM1_Start 0070                                 ?_PWM2_Start 0070  
                        __size_of_PWM1_Stop 0004                                       _delay 030E  
                        __size_of_PWM2_Stop 0004                                 ?_PWM3_Start 0070  
                   __end_of_PIN_MANAGER_IOC 0521                          __size_of_PWM3_Stop 0004  
                            _WDT_Initialize 0539                        ?i1_PWM1_DutyCycleSet 0070  
                   __end_of_PWM3_Initialize 03E8                     __end_of_TMR1_Initialize 03D1  
                                     pclath 000A                __size_ofi1_PWM3_DutyCycleSet 0006  
                          powerDown@timeout 004B                                       status 0003  
                                     wtemp0 007E                                i1_getTimerMS 04D8  
                          __end_ofi1_setLED 036B                             _TMR1_WriteTimer 0450  
                             _totalTriggers 002C             PWM3_DutyCycleSet@dutyCycleCount 0038  
         i1PWM3_DutyCycleSet@dutyCycleCount 0070                             __initialization 001F  
                              __end_of_main 02C1                     __end_of_TMR2_Initialize 04D8  
               ?_INTERRUPT_InterruptManager 0070                                      ??_main 004E  
                    __end_of_WDT_Initialize 053D                ??_IOCAF3_SetInterruptHandler 003A  
                                    ?_delay 003B                                      _ADCON0 009D  
                                    _ADCON1 009E                                      _ADCON2 009F  
                     ??i1_PWM1_DutyCycleSet 0072                  __size_of_PWM3_DutyCycleSet 0009  
                                    _ADRESH 009C                                      _ADRESL 009B  
                    ??i1_PWM1_LoadBufferSet 0070                                      _APFCON 011D  
               __size_of_PWM3_LoadBufferSet 0003                                      _ANSELA 018C  
                                    _BORCON 0116                                      _T1GCON 0019  
                   TMR1_WriteTimer@timerVal 0070                            ?_PWM1_Initialize 0070  
                                    i1l2301 00C2                                      _ODCONA 028C  
                                    i1l2245 0477                                      i1l2421 0448  
                                    i1l2257 045A                                      i1l2283 007D  
                                    _INLVLA 038C                  ??_ADC1_GetConversionResult 0072  
                                    _OSCCON 0099                                      _WDTCON 0097  
                         ?_resetVolumeLimit 0070                                 i1setLED@red 0076  
                        ??_resetVolumeLimit 003F                      __size_of_buttonHandler 0015  
                          __end_of_flashRev 0229        __end_of_TMR1_DefaultInterruptHandler 0486  
     __size_of_TMR1_DefaultInterruptHandler 000C                _TMR1_DefaultInterruptHandler 047A  
           PWM1_DutyCycleSet@dutyCycleCount 0038           i1PWM1_DutyCycleSet@dutyCycleCount 0070  
                         __end_of_PWM1_Stop 0535                           __end_of_PWM2_Stop 052D  
                         __end_of_PWM3_Stop 0525                         __size_of_PWM1_Start 0004  
                            _sampleTriggers 007D                         __size_of_PWM2_Start 0004  
                       __size_of_PWM3_Start 0004                      __size_of_buttonPressed 0083  
                       i1_PWM2_DutyCycleSet 0505                            ?_TMR0_Initialize 0070  
                          ?_PWM2_Initialize 0070                                      _setLED 032E  
                                    _memset 0387                                 setLED@green 003A  
                                 ?_ADC1_ISR 0070                                      _tickle 0229  
       __size_of_IOCAF3_SetInterruptHandler 0006                    __size_of_ADC1_Initialize 000B  
                                    _volume 0028                  __end_of_PWM2_LoadBufferSet 0546  
                           ?_WDT_Initialize 0070    TMR1_SetInterruptHandler@InterruptHandler 0038  
IOCAF3_SetInterruptHandler@InterruptHandler 0038                            ?_PIN_MANAGER_IOC 0070  
                   __end_of_TMR1_WriteTimer 045F                                ??_IOCAF3_ISR 0073  
                      ?i1_PWM2_DutyCycleSet 0070                            ?_TMR1_Initialize 0070  
                          ?_PWM3_Initialize 0070                           _SYSTEM_Initialize 0486  
                        _PWM1_LoadBufferSet 0546                     __end_of__initialization 0041  
                      i1_PWM2_LoadBufferSet 054C                                ?_powerUpTest 0070  
                        ?_SYSTEM_Initialize 0070                         ?_PWM1_LoadBufferSet 0070  
                            __pcstackCOMMON 0070                       __size_of_clearPresses 0005  
                              __pidataBANK0 053D                                __pidataBANK2 02C1  
                       ??_SYSTEM_Initialize 003A                                   ?_TMR1_ISR 0070  
                             __end_of_delay 032E               ?_TMR1_DefaultInterruptHandler 0070  
                          ?_TMR2_Initialize 0070                                  ??_ADC1_ISR 007C  
                        __end_of_IOCAF3_ISR 047A                               _buttonHandler 0416  
                            _OPTION_REGbits 0095                                _gameMenuMode 0031  
                                 ?i1_setLED 0072                        ??_PWM1_LoadBufferSet 0038  
                                   ??_delay 003E                   __end_of_SYSTEM_Initialize 0491  
                     ??i1_PWM2_DutyCycleSet 0072                               _buttonPressed 00CB  
                                __pbssBANK0 0020                                  __pbssBANK1 00A0  
                     ?i1_PWM2_LoadBufferSet 0070                                _clearPresses 0517  
                                __pmaintext 028B                                  ??_TMR1_ISR 0072  
                                __pintentry 0004                                     ?_setLED 003A  
                                   ?_memset 0038                         i1_PWM3_DutyCycleSet 04FF  
                                   ?_tickle 0070                                  _getTimerMS 04C8  
              __end_ofi1_PWM3_LoadBufferSet 054C                              ?_buttonHandler 0070  
                                ??i1_setLED 0074                          __size_of_powerDown 0073  
        __end_of_IOCAF3_SetInterruptHandler 04FF                  _IOCAF3_SetInterruptHandler 04F9  
                                _brightness 002F                                     _PWM1DCH 0D94  
                              ??_PWM1_Start 0038                                     _PWM1DCL 0D93  
                                   _PWM2DCH 0DA4                                     _PWM2DCL 0DA3  
                                   _OSCTUNE 0098                                     _PWM3DCH 0DB4  
                                   _PWM3DCL 0DB3                                     _PWM1CON 0D9B  
                                   _PWM2CON 0DAB                                     _PWM3CON 0DBB  
                                   _PWM1OFH 0D98                                     _PWM1OFL 0D97  
                                   _PWM1PHH 0D92                                     _PWM2OFH 0DA8  
                                   _PWM1PHL 0D91                                     _PWM2OFL 0DA7  
                              ??_PWM2_Start 0038                                     _PWM3OFH 0DB8  
                                   _PWM2PHH 0DA2                                     _PWM3OFL 0DB7  
                                   _PWM2PHL 0DA1                                     _PWM3PHH 0DB2  
                                   _PWM1PRH 0D96                                     _PWM3PHL 0DB1  
                                   _PWM1PRL 0D95                                     _PWM2PRH 0DA6  
                                   _PWM2PRL 0DA5                                     _PWM3PRH 0DB6  
                        flashRev@greenLevel 0045                                     _PWM3PRL 0DB5  
                                   _SLRCONA 030C                                ??_PWM3_Start 0038  
                         ??_ADC1_Initialize 0038                                   ?_flashRev 0070  
                            ?_buttonPressed 0070                                i1setLED@blue 0073  
                          ?_TMR1_WriteTimer 0070                               ?_resetTimerMS 0070  
                      ?i1_PWM3_DutyCycleSet 0070                          __end_of_PWM1_Start 0539  
                        __end_of_PWM2_Start 0531                             _triggersEachInt 00A0  
                        __end_of_PWM3_Start 0529                                     _altMode 002E  
                           __size_of_setLED 0020                             __size_of_memset 001B  
                               tickle@blink 0045                                     __ptext1 0229  
                                   __ptext2 042B                             __size_of_tickle 0062  
                                   __ptext3 014E                                     __ptext4 03A2  
                                   __ptext5 0387                                     __ptext6 04C0  
                                   __ptext7 01C1                                     __ptext8 030E  
                                   __ptext9 0517              ??_TMR1_DefaultInterruptHandler 0070  
                             ??_checkVolume 003A                                   _T1CONbits 0018  
                     _OSCILLATOR_Initialize 04E0                                   _T2CONbits 001C  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 003A  
                 ?_TMR1_SetInterruptHandler 0038                                   _IOCAFbits 0393  
                                   _samples 002A                                   _IOCANbits 0392  
                                 _IOCAPbits 0391                                     _timerMS 0023  
                                ??_flashRev 0044                    __size_of_calculateVolume 0087  
                __size_of_SYSTEM_Initialize 000B                                     clrloop0 04EE  
                            ??_resetTimerMS 0038                        end_of_initialization 0041  
                     ??i1_PWM3_DutyCycleSet 0072                      ??i1_PWM2_LoadBufferSet 0070  
                                   init_ram 04E7                                     memset@c 0038  
                                   memset@n 003A                                     memset@p 003E  
                                   initloop 04E8                        __size_of_powerUpTest 0013  
                         __end_of_powerDown 01C1                                   _PWM1LDCON 0D9F  
                                 _PWM2LDCON 0DAF                                   _PWM1OFCON 0DA0  
                                 _PWM3LDCON 0DBF                                   _PWM2OFCON 0DB0  
                                 _PWM3OFCON 0DC0                             ??_buttonHandler 0073  
                 __size_of_resetVolumeLimit 0018                            ??_WDT_Initialize 0038  
                                 _PWM1_Stop 0531                                 ?_getTimerMS 0038  
                                 _PORTAbits 000C                                   _PWM2_Stop 0529  
                                 _PWM3_Stop 0521                                  _shortPress 0035  
               __end_ofi1_PWM1_DutyCycleSet 0511                           __size_of_ADC1_ISR 0009  
                           ??_buttonPressed 003F                  __end_of_PWM3_LoadBufferSet 0543  
                       __end_of_checkVolume 0387               __size_ofi1_PWM1_LoadBufferSet 0003  
                        _PWM2_LoadBufferSet 0543                        i1_PWM3_LoadBufferSet 0549  
                  __size_of_PWM1_Initialize 0017                         ?_PWM2_LoadBufferSet 0070  
         __size_of_ADC1_GetConversionResult 0006                   ?_ADC1_GetConversionResult 0070  
                         __size_of_TMR1_ISR 0012                                  ?_PWM1_Stop 0070  
                                ?_PWM2_Stop 0070                                  ?_PWM3_Stop 0070  
                    ?_OSCILLATOR_Initialize 0070                              __end_of_setLED 034E  
                            __end_of_memset 03A2                              __end_of_tickle 028B  
                       start_initialization 001F                    __size_of_PWM2_Initialize 0017  
                  __size_of_TMR0_Initialize 000E             __size_of_PIN_MANAGER_Initialize 0024  
                      ??_PWM2_LoadBufferSet 0038                           __size_ofi1_setLED 001D  
                             _PWM1LDCONbits 0D9F                                 _beaconIsRed 0033  
                             _PWM2LDCONbits 0DAF                               _PWM3LDCONbits 0DBF  
                     ?i1_PWM3_LoadBufferSet 0070                         __size_of_getTimerMS 0008  
                         ??_calculateVolume 0079                    __size_of_PIN_MANAGER_IOC 0005  
                  __size_of_PWM3_Initialize 0017                    __size_of_TMR1_Initialize 0017  
                                setLED@blue 003B                                 __pdataBANK0 0055  
                               __pdataBANK2 0120                        __end_of_resetTimerMS 04C8  
                                  ??_setLED 003C                                    ??_memset 003C  
                           _ADC1_Initialize 0491                                    ??_tickle 0044  
                               _checkVolume 036B                 __end_ofi1_PWM2_DutyCycleSet 050B  
                               _changePress 0034                                 __pbssCOMMON 007C  
                                 ___latbits 0000                               __pcstackBANK0 0038  
               ?_IOCAF3_SetInterruptHandler 0038                 __size_of_PWM1_LoadBufferSet 0003  
                  __size_of_TMR2_Initialize 0008            ??_IOCAF3_DefaultInterruptHandler 0070  
           ?_IOCAF3_DefaultInterruptHandler 0070                           __size_of_flashRev 0068  
                             ?i1_getTimerMS 0070                                   __pnvBANK0 004E  
                    _PIN_MANAGER_Initialize 02EA             PWM2_DutyCycleSet@dutyCycleCount 0038  
         i1PWM2_DutyCycleSet@dutyCycleCount 0070            __end_of_TMR1_SetInterruptHandler 04F9  
                          _resetVolumeLimit 03A2                                    _ADC1_ISR 04B7  
                         ??_PWM1_Initialize 0038                ??_INTERRUPT_InterruptManager 007C  
                               ??_PWM1_Stop 0038                                 ??_PWM2_Stop 0038  
                               ??_PWM3_Stop 0038                                delay@delayMS 003B  
                            __size_of_delay 0020                           _PWM1_DutyCycleSet 04AE  
                                tickle@loud 0047                              ??i1_getTimerMS 0073  
                                 delay@stop 0041                      ??i1_PWM3_LoadBufferSet 0070  
                                 _longPress 0036                           ??_TMR0_Initialize 0038  
                         ??_PWM2_Initialize 0038                          ?_PWM1_DutyCycleSet 0038  
                                  _LATAbits 010C                                   clear_ram0 04ED  
                                  _PIE1bits 0091                    __size_of_TMR1_WriteTimer 000F  
       __size_of_INTERRUPT_InterruptManager 001A                     __end_of_ADC1_Initialize 049C  
                                  _PIR1bits 0011                         ??_PWM1_DutyCycleSet 003A  
                                  _PWM1INTE 0D9C                                    _PWM1INTF 0D9D  
                                  _PWM2INTE 0DAC                                    _PWM2INTF 0DAD  
                                  _PWM3INTE 0DBC                                    _PWM3INTF 0DBD  
                                  _PWM1TMRH 0D9A                                    _PWM1TMRL 0D99  
                                  _PWM2TMRH 0DAA                                    _PWM2TMRL 0DA9  
                                  _PWM3TMRH 0DBA                                    _PWM3TMRL 0DB9  
                                  _TMR1_ISR 043E                                   _pressTime 0020  
                         ??_PIN_MANAGER_IOC 0073                                   _powerDown 014E  
                                 flashRev@r 0046                               i1setLED@green 0072  
                              ??_getTimerMS 003B                           ??_TMR1_Initialize 003A  
                         ??_PWM3_Initialize 0038                                  _ADCON0bits 009D  
                                  i1_setLED 034E                 __end_ofi1_PWM3_DutyCycleSet 0505  
                                powerDown@b 004C                   __end_of_PWM1_DutyCycleSet 04B7  
                              _patternIndex 0032                           ??_TMR2_Initialize 0038  
                             ??_powerUpTest 004A               __size_ofi1_PWM2_LoadBufferSet 0003  
          __end_of_ADC1_GetConversionResult 0517                          _PWM3_LoadBufferSet 0540  
                        __end_of_getTimerMS 04D0                       __size_of_resetTimerMS 0008  
                              _sampleNumber 0037                                _PWM1INTFbits 0D9D  
                                 setLED@red 003E                                _PWM2INTFbits 0DAD  
                              _PWM3INTFbits 0DBD                         ?_PWM3_LoadBufferSet 0070  
                   ??_OSCILLATOR_Initialize 0038                                _selectedGame 0030  
              __end_ofi1_PWM1_LoadBufferSet 0552                                  ?_powerDown 0070  
                  _TMR1_SetInterruptHandler 04F3                       __end_of_buttonHandler 042B  
                     _TMR1_InterruptHandler 004E                             _calculateVolume 0044  
                                  __ptext10 00CB                                    __ptext11 032E  
                                  __ptext20 0525                                    __ptext12 0540  
                                  __ptext21 0529                                    __ptext13 049C  
                                _T1GCONbits 0019                                    __ptext30 04F3  
                                  __ptext22 052D                                    __ptext14 0543  
                                  __ptext31 045F                                    __ptext23 0531  
                                  __ptext15 04A5                                    __ptext40 043E  
                                  __ptext32 03D1                                    __ptext24 0535  
                                  __ptext16 0546                                    __ptext41 0450  
                                  __ptext33 03E8                                    __ptext25 036B  
                                  __ptext17 04AE                                    __ptext50 034E  
                                  __ptext42 047A                                    __ptext34 03FF  
                                  __ptext26 0486                                    __ptext18 04C8  
                                  __ptext51 0549                                    __ptext43 051C  
                                  __ptext35 02EA                                    __ptext27 0539  
                                  __ptext19 0521                                    __ptext52 04FF  
                                  __ptext44 046D                                    __ptext36 04F9  
                                  __ptext28 04D0                                    __ptext53 054C  
                                  __ptext45 0552                                    __ptext37 04E0  
                                  __ptext29 03BA                                    __ptext54 0505  
                                  __ptext46 0416                                    __ptext38 0491  
                                  __ptext55 054F                                    __ptext47 04D8  
                                  __ptext56 050B                                    __ptext48 04B7  
                                  __ptext57 0511                                    __ptext49 0044  
                     __end_of_buttonPressed 014E                                    _flashRev 01C1  
                      ??_PWM3_LoadBufferSet 0038                __size_ofi1_PWM1_DutyCycleSet 0006  
                                _IOCAF3_ISR 046D                           _PWM2_DutyCycleSet 04A5  
                                  _maxLevel 0026                                _resetTimerMS 04C0  
                                  _minLevel 0055                               ?_clearPresses 0070  
                             __size_of_main 0036                          ?_PWM2_DutyCycleSet 0038  
                          ?_ADC1_Initialize 0070                         ??_PWM2_DutyCycleSet 003A  
                       __end_of_powerUpTest 043E                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 001E                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072                        __end_ofi1_getTimerMS 04E0  
                               _secondIndex 007C                   buttonPressed@poweringDown 0042  
                              ?_checkVolume 0038                                  _INTCONbits 000B  
                               _PWM1CONbits 0D9B                                 _PWM2CONbits 0DAB  
                               _PWM3CONbits 0DBB                  __size_of_PWM1_DutyCycleSet 0009  
                                  memset@p1 003D                   __end_of_PWM2_DutyCycleSet 04AE  
               __size_of_PWM2_LoadBufferSet 0003                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                              ??_clearPresses 0038  
                  __end_of_resetVolumeLimit 03BA                     ?_PIN_MANAGER_Initialize 0070  
                           _PWM1_Initialize 03FF                    _ADC1_GetConversionResult 0511  
    __end_of_IOCAF3_DefaultInterruptHandler 0553     __size_of_IOCAF3_DefaultInterruptHandler 0001  
            _IOCAF3_DefaultInterruptHandler 0552                                  _PWM1CLKCON 0D9E  
                                _PWM2CLKCON 0DAE                                 ??_powerDown 004A  
                                _PWM3CLKCON 0DBE                     __end_of_calculateVolume 00CB  
                                _OPTION_REG 0095                  __end_of_PWM1_LoadBufferSet 0549  
                           _TMR0_Initialize 045F                             _PWM2_Initialize 03E8  
                      calculateVolume@level 0077                                  _PWM1_Start 0535  
                                _PWM2_Start 052D                                  _PWM3_Start 0525  
                               ?_IOCAF3_ISR 0070                __size_ofi1_PWM2_DutyCycleSet 0006  
            __end_of_PIN_MANAGER_Initialize 030E                           _PWM3_DutyCycleSet 049C  
                      i1_PWM1_LoadBufferSet 054F                             _PIN_MANAGER_IOC 051C  
                               _powerUpTest 042B                          ?_PWM3_DutyCycleSet 0038  
                   _IOCAF3_InterruptHandler 0052                             _TMR1_Initialize 03BA  
                           _PWM3_Initialize 03D1  
